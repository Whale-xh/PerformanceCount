<?xml version="1.0" encoding="UTF-8"?>
<eventinfo>
<hardware>
  <vendor string="GenuineIntel"/>
  <vendorCode value="1"/>
  <model string="Intel(R) Core(TM) i7-6820HQ CPU @ 2.70GHz"/>
  <modelCode value="94"/>
  <cpuRevision value="3.000000"/>
  <cpuID>
    <family value="6"/>
    <model value="94"/>
    <stepping value="3"/>
  </cpuID>
  <cpuMaxMegahertz value="3600"/>
  <cpuMinMegahertz value="800"/>
  <threads value="2"/>
  <cores value="4"/>
  <sockets value="1"/>
  <nodes value="1"/>
  <cpuPerNode value="8"/>
  <totalCPUs value="8"/>
</hardware>
<component index="0" type="CPU" id="perf_event">
  <eventset type="NATIVE">
    <event index="0" name="ix86arch::UNHALTED_CORE_CYCLES" desc="count core clock cycles whenever the clock signal on the specific core is running (not halted)">
        <modifier name="ix86arch::UNHALTED_CORE_CYCLES:e=0" desc="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ix86arch::UNHALTED_CORE_CYCLES:i=0" desc="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert"> </modifier>
        <modifier name="ix86arch::UNHALTED_CORE_CYCLES:c=0" desc="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]"> </modifier>
    </event>
    <event index="1" name="ix86arch::INSTRUCTION_RETIRED" desc="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction">
        <modifier name="ix86arch::INSTRUCTION_RETIRED:e=0" desc="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ix86arch::INSTRUCTION_RETIRED:i=0" desc="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:invert"> </modifier>
        <modifier name="ix86arch::INSTRUCTION_RETIRED:c=0" desc="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:counter-mask in range [0-255]"> </modifier>
    </event>
    <event index="2" name="ix86arch::UNHALTED_REFERENCE_CYCLES" desc="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions">
        <modifier name="ix86arch::UNHALTED_REFERENCE_CYCLES:e=0" desc="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ix86arch::UNHALTED_REFERENCE_CYCLES:i=0" desc="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:invert"> </modifier>
        <modifier name="ix86arch::UNHALTED_REFERENCE_CYCLES:c=0" desc="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:counter-mask in range [0-255]"> </modifier>
    </event>
    <event index="3" name="ix86arch::LLC_REFERENCES" desc="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch">
        <modifier name="ix86arch::LLC_REFERENCES:e=0" desc="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ix86arch::LLC_REFERENCES:i=0" desc="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:invert"> </modifier>
        <modifier name="ix86arch::LLC_REFERENCES:c=0" desc="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:counter-mask in range [0-255]"> </modifier>
    </event>
    <event index="4" name="ix86arch::LLC_MISSES" desc="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch">
        <modifier name="ix86arch::LLC_MISSES:e=0" desc="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ix86arch::LLC_MISSES:i=0" desc="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:invert"> </modifier>
        <modifier name="ix86arch::LLC_MISSES:c=0" desc="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:counter-mask in range [0-255]"> </modifier>
    </event>
    <event index="5" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED" desc="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction">
        <modifier name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:e=0" desc="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:i=0" desc="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:invert"> </modifier>
        <modifier name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:c=0" desc="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:counter-mask in range [0-255]"> </modifier>
    </event>
    <event index="6" name="ix86arch::MISPREDICTED_BRANCH_RETIRED" desc="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware">
        <modifier name="ix86arch::MISPREDICTED_BRANCH_RETIRED:e=0" desc="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ix86arch::MISPREDICTED_BRANCH_RETIRED:i=0" desc="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:invert"> </modifier>
        <modifier name="ix86arch::MISPREDICTED_BRANCH_RETIRED:c=0" desc="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:counter-mask in range [0-255]"> </modifier>
    </event>
    <event index="7" name="perf::PERF_COUNT_HW_CPU_CYCLES" desc="PERF_COUNT_HW_CPU_CYCLES">
        <modifier name="perf::PERF_COUNT_HW_CPU_CYCLES:u=0" desc="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CPU_CYCLES:k=0" desc="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="8" name="perf::CYCLES" desc="PERF_COUNT_HW_CPU_CYCLES">
        <modifier name="perf::CYCLES:u=0" desc="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level"> </modifier>
        <modifier name="perf::CYCLES:k=0" desc="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="9" name="perf::CPU-CYCLES" desc="PERF_COUNT_HW_CPU_CYCLES">
        <modifier name="perf::CPU-CYCLES:u=0" desc="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level"> </modifier>
        <modifier name="perf::CPU-CYCLES:k=0" desc="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="10" name="perf::PERF_COUNT_HW_INSTRUCTIONS" desc="PERF_COUNT_HW_INSTRUCTIONS">
        <modifier name="perf::PERF_COUNT_HW_INSTRUCTIONS:u=0" desc="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_INSTRUCTIONS:k=0" desc="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="11" name="perf::INSTRUCTIONS" desc="PERF_COUNT_HW_INSTRUCTIONS">
        <modifier name="perf::INSTRUCTIONS:u=0" desc="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at user level"> </modifier>
        <modifier name="perf::INSTRUCTIONS:k=0" desc="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="12" name="perf::PERF_COUNT_HW_CACHE_REFERENCES" desc="PERF_COUNT_HW_CACHE_REFERENCES">
        <modifier name="perf::PERF_COUNT_HW_CACHE_REFERENCES:u=0" desc="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_REFERENCES:k=0" desc="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="13" name="perf::CACHE-REFERENCES" desc="PERF_COUNT_HW_CACHE_REFERENCES">
        <modifier name="perf::CACHE-REFERENCES:u=0" desc="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at user level"> </modifier>
        <modifier name="perf::CACHE-REFERENCES:k=0" desc="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="14" name="perf::PERF_COUNT_HW_CACHE_MISSES" desc="PERF_COUNT_HW_CACHE_MISSES">
        <modifier name="perf::PERF_COUNT_HW_CACHE_MISSES:u=0" desc="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_MISSES:k=0" desc="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="15" name="perf::CACHE-MISSES" desc="PERF_COUNT_HW_CACHE_MISSES">
        <modifier name="perf::CACHE-MISSES:u=0" desc="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at user level"> </modifier>
        <modifier name="perf::CACHE-MISSES:k=0" desc="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="16" name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS">
        <modifier name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS:u=0" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS:k=0" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="17" name="perf::BRANCH-INSTRUCTIONS" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS">
        <modifier name="perf::BRANCH-INSTRUCTIONS:u=0" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level"> </modifier>
        <modifier name="perf::BRANCH-INSTRUCTIONS:k=0" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="18" name="perf::BRANCHES" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS">
        <modifier name="perf::BRANCHES:u=0" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level"> </modifier>
        <modifier name="perf::BRANCHES:k=0" desc="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="19" name="perf::PERF_COUNT_HW_BRANCH_MISSES" desc="PERF_COUNT_HW_BRANCH_MISSES">
        <modifier name="perf::PERF_COUNT_HW_BRANCH_MISSES:u=0" desc="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_BRANCH_MISSES:k=0" desc="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="20" name="perf::BRANCH-MISSES" desc="PERF_COUNT_HW_BRANCH_MISSES">
        <modifier name="perf::BRANCH-MISSES:u=0" desc="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at user level"> </modifier>
        <modifier name="perf::BRANCH-MISSES:k=0" desc="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="21" name="perf::PERF_COUNT_HW_BUS_CYCLES" desc="PERF_COUNT_HW_BUS_CYCLES">
        <modifier name="perf::PERF_COUNT_HW_BUS_CYCLES:u=0" desc="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_BUS_CYCLES:k=0" desc="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="22" name="perf::BUS-CYCLES" desc="PERF_COUNT_HW_BUS_CYCLES">
        <modifier name="perf::BUS-CYCLES:u=0" desc="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at user level"> </modifier>
        <modifier name="perf::BUS-CYCLES:k=0" desc="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="29" name="perf::PERF_COUNT_HW_REF_CPU_CYCLES" desc="PERF_COUNT_HW_REF_CPU_CYCLES">
        <modifier name="perf::PERF_COUNT_HW_REF_CPU_CYCLES:u=0" desc="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_REF_CPU_CYCLES:k=0" desc="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="30" name="perf::REF-CYCLES" desc="PERF_COUNT_HW_REF_CPU_CYCLES">
        <modifier name="perf::REF-CYCLES:u=0" desc="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at user level"> </modifier>
        <modifier name="perf::REF-CYCLES:k=0" desc="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="31" name="perf::PERF_COUNT_SW_CPU_CLOCK" desc="PERF_COUNT_SW_CPU_CLOCK">
        <modifier name="perf::PERF_COUNT_SW_CPU_CLOCK:u=0" desc="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_SW_CPU_CLOCK:k=0" desc="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="32" name="perf::CPU-CLOCK" desc="PERF_COUNT_SW_CPU_CLOCK">
        <modifier name="perf::CPU-CLOCK:u=0" desc="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at user level"> </modifier>
        <modifier name="perf::CPU-CLOCK:k=0" desc="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="33" name="perf::PERF_COUNT_SW_TASK_CLOCK" desc="PERF_COUNT_SW_TASK_CLOCK">
        <modifier name="perf::PERF_COUNT_SW_TASK_CLOCK:u=0" desc="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_SW_TASK_CLOCK:k=0" desc="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="34" name="perf::TASK-CLOCK" desc="PERF_COUNT_SW_TASK_CLOCK">
        <modifier name="perf::TASK-CLOCK:u=0" desc="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at user level"> </modifier>
        <modifier name="perf::TASK-CLOCK:k=0" desc="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="35" name="perf::PERF_COUNT_SW_PAGE_FAULTS" desc="PERF_COUNT_SW_PAGE_FAULTS">
        <modifier name="perf::PERF_COUNT_SW_PAGE_FAULTS:u=0" desc="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_SW_PAGE_FAULTS:k=0" desc="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="36" name="perf::PAGE-FAULTS" desc="PERF_COUNT_SW_PAGE_FAULTS">
        <modifier name="perf::PAGE-FAULTS:u=0" desc="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level"> </modifier>
        <modifier name="perf::PAGE-FAULTS:k=0" desc="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="37" name="perf::FAULTS" desc="PERF_COUNT_SW_PAGE_FAULTS">
        <modifier name="perf::FAULTS:u=0" desc="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level"> </modifier>
        <modifier name="perf::FAULTS:k=0" desc="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="38" name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES" desc="PERF_COUNT_SW_CONTEXT_SWITCHES">
        <modifier name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES:u=0" desc="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES:k=0" desc="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="39" name="perf::CONTEXT-SWITCHES" desc="PERF_COUNT_SW_CONTEXT_SWITCHES">
        <modifier name="perf::CONTEXT-SWITCHES:u=0" desc="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level"> </modifier>
        <modifier name="perf::CONTEXT-SWITCHES:k=0" desc="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="40" name="perf::CS" desc="PERF_COUNT_SW_CONTEXT_SWITCHES">
        <modifier name="perf::CS:u=0" desc="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level"> </modifier>
        <modifier name="perf::CS:k=0" desc="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="41" name="perf::PERF_COUNT_SW_CPU_MIGRATIONS" desc="PERF_COUNT_SW_CPU_MIGRATIONS">
        <modifier name="perf::PERF_COUNT_SW_CPU_MIGRATIONS:u=0" desc="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_SW_CPU_MIGRATIONS:k=0" desc="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="42" name="perf::CPU-MIGRATIONS" desc="PERF_COUNT_SW_CPU_MIGRATIONS">
        <modifier name="perf::CPU-MIGRATIONS:u=0" desc="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level"> </modifier>
        <modifier name="perf::CPU-MIGRATIONS:k=0" desc="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="43" name="perf::MIGRATIONS" desc="PERF_COUNT_SW_CPU_MIGRATIONS">
        <modifier name="perf::MIGRATIONS:u=0" desc="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level"> </modifier>
        <modifier name="perf::MIGRATIONS:k=0" desc="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="44" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN" desc="PERF_COUNT_SW_PAGE_FAULTS_MIN">
        <modifier name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN:u=0" desc="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN:k=0" desc="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="45" name="perf::MINOR-FAULTS" desc="PERF_COUNT_SW_PAGE_FAULTS_MIN">
        <modifier name="perf::MINOR-FAULTS:u=0" desc="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at user level"> </modifier>
        <modifier name="perf::MINOR-FAULTS:k=0" desc="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="46" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ" desc="PERF_COUNT_SW_PAGE_FAULTS_MAJ">
        <modifier name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ:u=0" desc="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ:k=0" desc="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="47" name="perf::MAJOR-FAULTS" desc="PERF_COUNT_SW_PAGE_FAULTS_MAJ">
        <modifier name="perf::MAJOR-FAULTS:u=0" desc="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at user level"> </modifier>
        <modifier name="perf::MAJOR-FAULTS:k=0" desc="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="48" name="perf::PERF_COUNT_HW_CACHE_L1D" desc="L1 data cache">
        <modifier name="perf::PERF_COUNT_HW_CACHE_L1D:READ" desc="L1 data cache, masks:read access"> </modifier>
    </event>
    <event index="49" name="perf::L1-DCACHE-LOADS" desc="L1 cache load accesses">
        <modifier name="perf::L1-DCACHE-LOADS:u=0" desc="L1 cache load accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::L1-DCACHE-LOADS:k=0" desc="L1 cache load accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="50" name="perf::L1-DCACHE-LOAD-MISSES" desc="L1 cache load misses">
        <modifier name="perf::L1-DCACHE-LOAD-MISSES:u=0" desc="L1 cache load misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::L1-DCACHE-LOAD-MISSES:k=0" desc="L1 cache load misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="51" name="perf::L1-DCACHE-STORES" desc="L1 cache store accesses">
        <modifier name="perf::L1-DCACHE-STORES:u=0" desc="L1 cache store accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::L1-DCACHE-STORES:k=0" desc="L1 cache store accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="55" name="perf::PERF_COUNT_HW_CACHE_L1I" desc="L1 instruction cache">
        <modifier name="perf::PERF_COUNT_HW_CACHE_L1I:READ" desc="L1 instruction cache, masks:read access"> </modifier>
    </event>
    <event index="57" name="perf::L1-ICACHE-LOAD-MISSES" desc="L1I cache load misses">
        <modifier name="perf::L1-ICACHE-LOAD-MISSES:u=0" desc="L1I cache load misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::L1-ICACHE-LOAD-MISSES:k=0" desc="L1I cache load misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="60" name="perf::PERF_COUNT_HW_CACHE_LL" desc="Last level cache">
        <modifier name="perf::PERF_COUNT_HW_CACHE_LL:READ" desc="Last level cache, masks:read access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_LL:WRITE" desc="Last level cache, masks:write access"> </modifier>
    </event>
    <event index="61" name="perf::LLC-LOADS" desc="Last level cache load accesses">
        <modifier name="perf::LLC-LOADS:u=0" desc="Last level cache load accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::LLC-LOADS:k=0" desc="Last level cache load accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="62" name="perf::LLC-LOAD-MISSES" desc="Last level cache load misses">
        <modifier name="perf::LLC-LOAD-MISSES:u=0" desc="Last level cache load misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::LLC-LOAD-MISSES:k=0" desc="Last level cache load misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="63" name="perf::LLC-STORES" desc="Last level cache store accesses">
        <modifier name="perf::LLC-STORES:u=0" desc="Last level cache store accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::LLC-STORES:k=0" desc="Last level cache store accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="64" name="perf::LLC-STORE-MISSES" desc="Last level cache store misses">
        <modifier name="perf::LLC-STORE-MISSES:u=0" desc="Last level cache store misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::LLC-STORE-MISSES:k=0" desc="Last level cache store misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="67" name="perf::PERF_COUNT_HW_CACHE_DTLB" desc="Data Translation Lookaside Buffer">
        <modifier name="perf::PERF_COUNT_HW_CACHE_DTLB:READ" desc="Data Translation Lookaside Buffer, masks:read access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_DTLB:WRITE" desc="Data Translation Lookaside Buffer, masks:write access"> </modifier>
    </event>
    <event index="68" name="perf::DTLB-LOADS" desc="Data TLB load accesses">
        <modifier name="perf::DTLB-LOADS:u=0" desc="Data TLB load accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::DTLB-LOADS:k=0" desc="Data TLB load accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="69" name="perf::DTLB-LOAD-MISSES" desc="Data TLB load misses">
        <modifier name="perf::DTLB-LOAD-MISSES:u=0" desc="Data TLB load misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::DTLB-LOAD-MISSES:k=0" desc="Data TLB load misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="70" name="perf::DTLB-STORES" desc="Data TLB store accesses">
        <modifier name="perf::DTLB-STORES:u=0" desc="Data TLB store accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::DTLB-STORES:k=0" desc="Data TLB store accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="71" name="perf::DTLB-STORE-MISSES" desc="Data TLB store misses">
        <modifier name="perf::DTLB-STORE-MISSES:u=0" desc="Data TLB store misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::DTLB-STORE-MISSES:k=0" desc="Data TLB store misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="74" name="perf::PERF_COUNT_HW_CACHE_ITLB" desc="Instruction Translation Lookaside Buffer">
        <modifier name="perf::PERF_COUNT_HW_CACHE_ITLB:READ" desc="Instruction Translation Lookaside Buffer, masks:read access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_ITLB:ACCESS" desc="Instruction Translation Lookaside Buffer, masks:hit access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_ITLB:MISS" desc="Instruction Translation Lookaside Buffer, masks:miss access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_ITLB:u=0" desc="Instruction Translation Lookaside Buffer, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_ITLB:k=0" desc="Instruction Translation Lookaside Buffer, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="75" name="perf::ITLB-LOADS" desc="Instruction TLB load accesses">
        <modifier name="perf::ITLB-LOADS:u=0" desc="Instruction TLB load accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::ITLB-LOADS:k=0" desc="Instruction TLB load accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="76" name="perf::ITLB-LOAD-MISSES" desc="Instruction TLB load misses">
        <modifier name="perf::ITLB-LOAD-MISSES:u=0" desc="Instruction TLB load misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::ITLB-LOAD-MISSES:k=0" desc="Instruction TLB load misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="77" name="perf::PERF_COUNT_HW_CACHE_BPU" desc="Branch Prediction Unit">
        <modifier name="perf::PERF_COUNT_HW_CACHE_BPU:READ" desc="Branch Prediction Unit, masks:read access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_BPU:ACCESS" desc="Branch Prediction Unit, masks:hit access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_BPU:MISS" desc="Branch Prediction Unit, masks:miss access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_BPU:u=0" desc="Branch Prediction Unit, masks:monitor at user level"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_BPU:k=0" desc="Branch Prediction Unit, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="78" name="perf::BRANCH-LOADS" desc="Branch  load accesses">
        <modifier name="perf::BRANCH-LOADS:u=0" desc="Branch  load accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::BRANCH-LOADS:k=0" desc="Branch  load accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="79" name="perf::BRANCH-LOAD-MISSES" desc="Branch  load misses">
        <modifier name="perf::BRANCH-LOAD-MISSES:u=0" desc="Branch  load misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::BRANCH-LOAD-MISSES:k=0" desc="Branch  load misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="80" name="perf::PERF_COUNT_HW_CACHE_NODE" desc="Node memory access">
        <modifier name="perf::PERF_COUNT_HW_CACHE_NODE:READ" desc="Node memory access, masks:read access"> </modifier>
        <modifier name="perf::PERF_COUNT_HW_CACHE_NODE:WRITE" desc="Node memory access, masks:write access"> </modifier>
    </event>
    <event index="81" name="perf::NODE-LOADS" desc="Node  load accesses">
        <modifier name="perf::NODE-LOADS:u=0" desc="Node  load accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::NODE-LOADS:k=0" desc="Node  load accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="82" name="perf::NODE-LOAD-MISSES" desc="Node  load misses">
        <modifier name="perf::NODE-LOAD-MISSES:u=0" desc="Node  load misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::NODE-LOAD-MISSES:k=0" desc="Node  load misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="83" name="perf::NODE-STORES" desc="Node  store accesses">
        <modifier name="perf::NODE-STORES:u=0" desc="Node  store accesses, masks:monitor at user level"> </modifier>
        <modifier name="perf::NODE-STORES:k=0" desc="Node  store accesses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="84" name="perf::NODE-STORE-MISSES" desc="Node  store misses">
        <modifier name="perf::NODE-STORE-MISSES:u=0" desc="Node  store misses, masks:monitor at user level"> </modifier>
        <modifier name="perf::NODE-STORE-MISSES:k=0" desc="Node  store misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="87" name="perf::v4l2" desc="tracepoint">
        <modifier name="perf::v4l2:v4l2_dqbuf" desc="tracepoint, masks:v4l2_dqbuf"> </modifier>
        <modifier name="perf::v4l2:v4l2_qbuf" desc="tracepoint, masks:v4l2_qbuf"> </modifier>
        <modifier name="perf::v4l2:vb2_v4l2_buf_done" desc="tracepoint, masks:vb2_v4l2_buf_done"> </modifier>
        <modifier name="perf::v4l2:vb2_v4l2_buf_queue" desc="tracepoint, masks:vb2_v4l2_buf_queue"> </modifier>
        <modifier name="perf::v4l2:vb2_v4l2_dqbuf" desc="tracepoint, masks:vb2_v4l2_dqbuf"> </modifier>
        <modifier name="perf::v4l2:vb2_v4l2_qbuf" desc="tracepoint, masks:vb2_v4l2_qbuf"> </modifier>
    </event>
    <event index="88" name="perf::vb2" desc="tracepoint">
        <modifier name="perf::vb2:vb2_buf_done" desc="tracepoint, masks:vb2_buf_done"> </modifier>
        <modifier name="perf::vb2:vb2_buf_queue" desc="tracepoint, masks:vb2_buf_queue"> </modifier>
        <modifier name="perf::vb2:vb2_dqbuf" desc="tracepoint, masks:vb2_dqbuf"> </modifier>
        <modifier name="perf::vb2:vb2_qbuf" desc="tracepoint, masks:vb2_qbuf"> </modifier>
    </event>
    <event index="89" name="perf::hda_intel" desc="tracepoint">
        <modifier name="perf::hda_intel:azx_suspend" desc="tracepoint, masks:azx_suspend"> </modifier>
        <modifier name="perf::hda_intel:azx_resume" desc="tracepoint, masks:azx_resume"> </modifier>
        <modifier name="perf::hda_intel:azx_runtime_suspend" desc="tracepoint, masks:azx_runtime_suspend"> </modifier>
        <modifier name="perf::hda_intel:azx_runtime_resume" desc="tracepoint, masks:azx_runtime_resume"> </modifier>
    </event>
    <event index="90" name="perf::kvmmmu" desc="tracepoint">
        <modifier name="perf::kvmmmu:kvm_mmu_pagetable_walk" desc="tracepoint, masks:kvm_mmu_pagetable_walk"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_paging_element" desc="tracepoint, masks:kvm_mmu_paging_element"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_set_accessed_bit" desc="tracepoint, masks:kvm_mmu_set_accessed_bit"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_set_dirty_bit" desc="tracepoint, masks:kvm_mmu_set_dirty_bit"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_walker_error" desc="tracepoint, masks:kvm_mmu_walker_error"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_get_page" desc="tracepoint, masks:kvm_mmu_get_page"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_sync_page" desc="tracepoint, masks:kvm_mmu_sync_page"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_unsync_page" desc="tracepoint, masks:kvm_mmu_unsync_page"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_prepare_zap_page" desc="tracepoint, masks:kvm_mmu_prepare_zap_page"> </modifier>
        <modifier name="perf::kvmmmu:mark_mmio_spte" desc="tracepoint, masks:mark_mmio_spte"> </modifier>
        <modifier name="perf::kvmmmu:handle_mmio_page_fault" desc="tracepoint, masks:handle_mmio_page_fault"> </modifier>
        <modifier name="perf::kvmmmu:fast_page_fault" desc="tracepoint, masks:fast_page_fault"> </modifier>
        <modifier name="perf::kvmmmu:kvm_mmu_invalidate_zap_all_pages" desc="tracepoint, masks:kvm_mmu_invalidate_zap_all_pages"> </modifier>
        <modifier name="perf::kvmmmu:check_mmio_spte" desc="tracepoint, masks:check_mmio_spte"> </modifier>
    </event>
    <event index="91" name="perf::kvm" desc="tracepoint">
        <modifier name="perf::kvm:kvm_entry" desc="tracepoint, masks:kvm_entry"> </modifier>
        <modifier name="perf::kvm:kvm_hypercall" desc="tracepoint, masks:kvm_hypercall"> </modifier>
        <modifier name="perf::kvm:kvm_hv_hypercall" desc="tracepoint, masks:kvm_hv_hypercall"> </modifier>
        <modifier name="perf::kvm:kvm_pio" desc="tracepoint, masks:kvm_pio"> </modifier>
        <modifier name="perf::kvm:kvm_fast_mmio" desc="tracepoint, masks:kvm_fast_mmio"> </modifier>
        <modifier name="perf::kvm:kvm_cpuid" desc="tracepoint, masks:kvm_cpuid"> </modifier>
        <modifier name="perf::kvm:kvm_apic" desc="tracepoint, masks:kvm_apic"> </modifier>
        <modifier name="perf::kvm:kvm_exit" desc="tracepoint, masks:kvm_exit"> </modifier>
        <modifier name="perf::kvm:kvm_inj_virq" desc="tracepoint, masks:kvm_inj_virq"> </modifier>
        <modifier name="perf::kvm:kvm_inj_exception" desc="tracepoint, masks:kvm_inj_exception"> </modifier>
        <modifier name="perf::kvm:kvm_page_fault" desc="tracepoint, masks:kvm_page_fault"> </modifier>
        <modifier name="perf::kvm:kvm_msr" desc="tracepoint, masks:kvm_msr"> </modifier>
        <modifier name="perf::kvm:kvm_cr" desc="tracepoint, masks:kvm_cr"> </modifier>
        <modifier name="perf::kvm:kvm_pic_set_irq" desc="tracepoint, masks:kvm_pic_set_irq"> </modifier>
        <modifier name="perf::kvm:kvm_apic_ipi" desc="tracepoint, masks:kvm_apic_ipi"> </modifier>
        <modifier name="perf::kvm:kvm_apic_accept_irq" desc="tracepoint, masks:kvm_apic_accept_irq"> </modifier>
        <modifier name="perf::kvm:kvm_eoi" desc="tracepoint, masks:kvm_eoi"> </modifier>
        <modifier name="perf::kvm:kvm_pv_eoi" desc="tracepoint, masks:kvm_pv_eoi"> </modifier>
        <modifier name="perf::kvm:kvm_nested_vmrun" desc="tracepoint, masks:kvm_nested_vmrun"> </modifier>
        <modifier name="perf::kvm:kvm_nested_intercepts" desc="tracepoint, masks:kvm_nested_intercepts"> </modifier>
        <modifier name="perf::kvm:kvm_nested_vmexit" desc="tracepoint, masks:kvm_nested_vmexit"> </modifier>
        <modifier name="perf::kvm:kvm_nested_vmexit_inject" desc="tracepoint, masks:kvm_nested_vmexit_inject"> </modifier>
        <modifier name="perf::kvm:kvm_nested_intr_vmexit" desc="tracepoint, masks:kvm_nested_intr_vmexit"> </modifier>
        <modifier name="perf::kvm:kvm_invlpga" desc="tracepoint, masks:kvm_invlpga"> </modifier>
        <modifier name="perf::kvm:kvm_skinit" desc="tracepoint, masks:kvm_skinit"> </modifier>
        <modifier name="perf::kvm:kvm_emulate_insn" desc="tracepoint, masks:kvm_emulate_insn"> </modifier>
        <modifier name="perf::kvm:vcpu_match_mmio" desc="tracepoint, masks:vcpu_match_mmio"> </modifier>
        <modifier name="perf::kvm:kvm_write_tsc_offset" desc="tracepoint, masks:kvm_write_tsc_offset"> </modifier>
        <modifier name="perf::kvm:kvm_update_master_clock" desc="tracepoint, masks:kvm_update_master_clock"> </modifier>
        <modifier name="perf::kvm:kvm_track_tsc" desc="tracepoint, masks:kvm_track_tsc"> </modifier>
        <modifier name="perf::kvm:kvm_pml_full" desc="tracepoint, masks:kvm_pml_full"> </modifier>
        <modifier name="perf::kvm:kvm_ple_window" desc="tracepoint, masks:kvm_ple_window"> </modifier>
        <modifier name="perf::kvm:kvm_pvclock_update" desc="tracepoint, masks:kvm_pvclock_update"> </modifier>
        <modifier name="perf::kvm:kvm_wait_lapic_expire" desc="tracepoint, masks:kvm_wait_lapic_expire"> </modifier>
        <modifier name="perf::kvm:kvm_enter_smm" desc="tracepoint, masks:kvm_enter_smm"> </modifier>
        <modifier name="perf::kvm:kvm_pi_irte_update" desc="tracepoint, masks:kvm_pi_irte_update"> </modifier>
        <modifier name="perf::kvm:kvm_hv_notify_acked_sint" desc="tracepoint, masks:kvm_hv_notify_acked_sint"> </modifier>
        <modifier name="perf::kvm:kvm_hv_synic_set_irq" desc="tracepoint, masks:kvm_hv_synic_set_irq"> </modifier>
        <modifier name="perf::kvm:kvm_hv_synic_send_eoi" desc="tracepoint, masks:kvm_hv_synic_send_eoi"> </modifier>
        <modifier name="perf::kvm:kvm_hv_synic_set_msr" desc="tracepoint, masks:kvm_hv_synic_set_msr"> </modifier>
        <modifier name="perf::kvm:kvm_hv_stimer_set_config" desc="tracepoint, masks:kvm_hv_stimer_set_config"> </modifier>
        <modifier name="perf::kvm:kvm_hv_stimer_set_count" desc="tracepoint, masks:kvm_hv_stimer_set_count"> </modifier>
        <modifier name="perf::kvm:kvm_hv_stimer_start_periodic" desc="tracepoint, masks:kvm_hv_stimer_start_periodic"> </modifier>
        <modifier name="perf::kvm:kvm_hv_stimer_start_one_shot" desc="tracepoint, masks:kvm_hv_stimer_start_one_shot"> </modifier>
        <modifier name="perf::kvm:kvm_hv_stimer_callback" desc="tracepoint, masks:kvm_hv_stimer_callback"> </modifier>
        <modifier name="perf::kvm:kvm_hv_stimer_expiration" desc="tracepoint, masks:kvm_hv_stimer_expiration"> </modifier>
        <modifier name="perf::kvm:kvm_hv_stimer_cleanup" desc="tracepoint, masks:kvm_hv_stimer_cleanup"> </modifier>
        <modifier name="perf::kvm:kvm_avic_incomplete_ipi" desc="tracepoint, masks:kvm_avic_incomplete_ipi"> </modifier>
        <modifier name="perf::kvm:kvm_avic_unaccelerated_access" desc="tracepoint, masks:kvm_avic_unaccelerated_access"> </modifier>
        <modifier name="perf::kvm:kvm_hv_timer_state" desc="tracepoint, masks:kvm_hv_timer_state"> </modifier>
        <modifier name="perf::kvm:kvm_userspace_exit" desc="tracepoint, masks:kvm_userspace_exit"> </modifier>
        <modifier name="perf::kvm:kvm_vcpu_wakeup" desc="tracepoint, masks:kvm_vcpu_wakeup"> </modifier>
        <modifier name="perf::kvm:kvm_set_irq" desc="tracepoint, masks:kvm_set_irq"> </modifier>
        <modifier name="perf::kvm:kvm_ioapic_set_irq" desc="tracepoint, masks:kvm_ioapic_set_irq"> </modifier>
        <modifier name="perf::kvm:kvm_ioapic_delayed_eoi_inj" desc="tracepoint, masks:kvm_ioapic_delayed_eoi_inj"> </modifier>
        <modifier name="perf::kvm:kvm_msi_set_irq" desc="tracepoint, masks:kvm_msi_set_irq"> </modifier>
        <modifier name="perf::kvm:kvm_ack_irq" desc="tracepoint, masks:kvm_ack_irq"> </modifier>
        <modifier name="perf::kvm:kvm_mmio" desc="tracepoint, masks:kvm_mmio"> </modifier>
        <modifier name="perf::kvm:kvm_fpu" desc="tracepoint, masks:kvm_fpu"> </modifier>
        <modifier name="perf::kvm:kvm_age_page" desc="tracepoint, masks:kvm_age_page"> </modifier>
        <modifier name="perf::kvm:kvm_try_async_get_page" desc="tracepoint, masks:kvm_try_async_get_page"> </modifier>
        <modifier name="perf::kvm:kvm_async_pf_doublefault" desc="tracepoint, masks:kvm_async_pf_doublefault"> </modifier>
        <modifier name="perf::kvm:kvm_async_pf_not_present" desc="tracepoint, masks:kvm_async_pf_not_present"> </modifier>
        <modifier name="perf::kvm:kvm_async_pf_ready" desc="tracepoint, masks:kvm_async_pf_ready"> </modifier>
        <modifier name="perf::kvm:kvm_async_pf_completed" desc="tracepoint, masks:kvm_async_pf_completed"> </modifier>
        <modifier name="perf::kvm:kvm_halt_poll_ns" desc="tracepoint, masks:kvm_halt_poll_ns"> </modifier>
    </event>
    <event index="92" name="perf::hda_controller" desc="tracepoint">
        <modifier name="perf::hda_controller:azx_pcm_trigger" desc="tracepoint, masks:azx_pcm_trigger"> </modifier>
        <modifier name="perf::hda_controller:azx_get_position" desc="tracepoint, masks:azx_get_position"> </modifier>
        <modifier name="perf::hda_controller:azx_pcm_open" desc="tracepoint, masks:azx_pcm_open"> </modifier>
        <modifier name="perf::hda_controller:azx_pcm_close" desc="tracepoint, masks:azx_pcm_close"> </modifier>
        <modifier name="perf::hda_controller:azx_pcm_hw_params" desc="tracepoint, masks:azx_pcm_hw_params"> </modifier>
        <modifier name="perf::hda_controller:azx_pcm_prepare" desc="tracepoint, masks:azx_pcm_prepare"> </modifier>
    </event>
    <event index="93" name="perf::hda" desc="tracepoint">
        <modifier name="perf::hda:hda_send_cmd" desc="tracepoint, masks:hda_send_cmd"> </modifier>
        <modifier name="perf::hda:hda_get_response" desc="tracepoint, masks:hda_get_response"> </modifier>
        <modifier name="perf::hda:hda_unsol_event" desc="tracepoint, masks:hda_unsol_event"> </modifier>
        <modifier name="perf::hda:snd_hdac_stream_start" desc="tracepoint, masks:snd_hdac_stream_start"> </modifier>
        <modifier name="perf::hda:snd_hdac_stream_stop" desc="tracepoint, masks:snd_hdac_stream_stop"> </modifier>
    </event>
    <event index="94" name="perf::mac80211" desc="tracepoint">
        <modifier name="perf::mac80211:drv_return_void" desc="tracepoint, masks:drv_return_void"> </modifier>
        <modifier name="perf::mac80211:drv_return_int" desc="tracepoint, masks:drv_return_int"> </modifier>
        <modifier name="perf::mac80211:drv_return_bool" desc="tracepoint, masks:drv_return_bool"> </modifier>
        <modifier name="perf::mac80211:drv_return_u32" desc="tracepoint, masks:drv_return_u32"> </modifier>
        <modifier name="perf::mac80211:drv_return_u64" desc="tracepoint, masks:drv_return_u64"> </modifier>
        <modifier name="perf::mac80211:drv_start" desc="tracepoint, masks:drv_start"> </modifier>
        <modifier name="perf::mac80211:drv_get_et_strings" desc="tracepoint, masks:drv_get_et_strings"> </modifier>
        <modifier name="perf::mac80211:drv_get_et_sset_count" desc="tracepoint, masks:drv_get_et_sset_count"> </modifier>
        <modifier name="perf::mac80211:drv_get_et_stats" desc="tracepoint, masks:drv_get_et_stats"> </modifier>
        <modifier name="perf::mac80211:drv_suspend" desc="tracepoint, masks:drv_suspend"> </modifier>
        <modifier name="perf::mac80211:drv_resume" desc="tracepoint, masks:drv_resume"> </modifier>
        <modifier name="perf::mac80211:drv_set_wakeup" desc="tracepoint, masks:drv_set_wakeup"> </modifier>
        <modifier name="perf::mac80211:drv_stop" desc="tracepoint, masks:drv_stop"> </modifier>
        <modifier name="perf::mac80211:drv_add_interface" desc="tracepoint, masks:drv_add_interface"> </modifier>
        <modifier name="perf::mac80211:drv_change_interface" desc="tracepoint, masks:drv_change_interface"> </modifier>
        <modifier name="perf::mac80211:drv_remove_interface" desc="tracepoint, masks:drv_remove_interface"> </modifier>
        <modifier name="perf::mac80211:drv_config" desc="tracepoint, masks:drv_config"> </modifier>
        <modifier name="perf::mac80211:drv_bss_info_changed" desc="tracepoint, masks:drv_bss_info_changed"> </modifier>
        <modifier name="perf::mac80211:drv_prepare_multicast" desc="tracepoint, masks:drv_prepare_multicast"> </modifier>
        <modifier name="perf::mac80211:drv_configure_filter" desc="tracepoint, masks:drv_configure_filter"> </modifier>
        <modifier name="perf::mac80211:drv_config_iface_filter" desc="tracepoint, masks:drv_config_iface_filter"> </modifier>
        <modifier name="perf::mac80211:drv_set_tim" desc="tracepoint, masks:drv_set_tim"> </modifier>
        <modifier name="perf::mac80211:drv_set_key" desc="tracepoint, masks:drv_set_key"> </modifier>
        <modifier name="perf::mac80211:drv_update_tkip_key" desc="tracepoint, masks:drv_update_tkip_key"> </modifier>
        <modifier name="perf::mac80211:drv_hw_scan" desc="tracepoint, masks:drv_hw_scan"> </modifier>
        <modifier name="perf::mac80211:drv_cancel_hw_scan" desc="tracepoint, masks:drv_cancel_hw_scan"> </modifier>
        <modifier name="perf::mac80211:drv_sched_scan_start" desc="tracepoint, masks:drv_sched_scan_start"> </modifier>
        <modifier name="perf::mac80211:drv_sched_scan_stop" desc="tracepoint, masks:drv_sched_scan_stop"> </modifier>
        <modifier name="perf::mac80211:drv_sw_scan_start" desc="tracepoint, masks:drv_sw_scan_start"> </modifier>
        <modifier name="perf::mac80211:drv_sw_scan_complete" desc="tracepoint, masks:drv_sw_scan_complete"> </modifier>
        <modifier name="perf::mac80211:drv_get_stats" desc="tracepoint, masks:drv_get_stats"> </modifier>
        <modifier name="perf::mac80211:drv_get_key_seq" desc="tracepoint, masks:drv_get_key_seq"> </modifier>
        <modifier name="perf::mac80211:drv_set_frag_threshold" desc="tracepoint, masks:drv_set_frag_threshold"> </modifier>
        <modifier name="perf::mac80211:drv_set_rts_threshold" desc="tracepoint, masks:drv_set_rts_threshold"> </modifier>
        <modifier name="perf::mac80211:drv_set_coverage_class" desc="tracepoint, masks:drv_set_coverage_class"> </modifier>
        <modifier name="perf::mac80211:drv_sta_notify" desc="tracepoint, masks:drv_sta_notify"> </modifier>
        <modifier name="perf::mac80211:drv_sta_state" desc="tracepoint, masks:drv_sta_state"> </modifier>
        <modifier name="perf::mac80211:drv_sta_rc_update" desc="tracepoint, masks:drv_sta_rc_update"> </modifier>
        <modifier name="perf::mac80211:drv_sta_statistics" desc="tracepoint, masks:drv_sta_statistics"> </modifier>
        <modifier name="perf::mac80211:drv_sta_add" desc="tracepoint, masks:drv_sta_add"> </modifier>
        <modifier name="perf::mac80211:drv_sta_remove" desc="tracepoint, masks:drv_sta_remove"> </modifier>
        <modifier name="perf::mac80211:drv_sta_pre_rcu_remove" desc="tracepoint, masks:drv_sta_pre_rcu_remove"> </modifier>
        <modifier name="perf::mac80211:drv_sync_rx_queues" desc="tracepoint, masks:drv_sync_rx_queues"> </modifier>
        <modifier name="perf::mac80211:drv_sta_rate_tbl_update" desc="tracepoint, masks:drv_sta_rate_tbl_update"> </modifier>
        <modifier name="perf::mac80211:drv_conf_tx" desc="tracepoint, masks:drv_conf_tx"> </modifier>
        <modifier name="perf::mac80211:drv_get_tsf" desc="tracepoint, masks:drv_get_tsf"> </modifier>
        <modifier name="perf::mac80211:drv_set_tsf" desc="tracepoint, masks:drv_set_tsf"> </modifier>
        <modifier name="perf::mac80211:drv_offset_tsf" desc="tracepoint, masks:drv_offset_tsf"> </modifier>
        <modifier name="perf::mac80211:drv_reset_tsf" desc="tracepoint, masks:drv_reset_tsf"> </modifier>
        <modifier name="perf::mac80211:drv_tx_last_beacon" desc="tracepoint, masks:drv_tx_last_beacon"> </modifier>
        <modifier name="perf::mac80211:drv_ampdu_action" desc="tracepoint, masks:drv_ampdu_action"> </modifier>
        <modifier name="perf::mac80211:drv_get_survey" desc="tracepoint, masks:drv_get_survey"> </modifier>
        <modifier name="perf::mac80211:drv_flush" desc="tracepoint, masks:drv_flush"> </modifier>
        <modifier name="perf::mac80211:drv_channel_switch" desc="tracepoint, masks:drv_channel_switch"> </modifier>
        <modifier name="perf::mac80211:drv_set_antenna" desc="tracepoint, masks:drv_set_antenna"> </modifier>
        <modifier name="perf::mac80211:drv_get_antenna" desc="tracepoint, masks:drv_get_antenna"> </modifier>
        <modifier name="perf::mac80211:drv_remain_on_channel" desc="tracepoint, masks:drv_remain_on_channel"> </modifier>
        <modifier name="perf::mac80211:drv_cancel_remain_on_channel" desc="tracepoint, masks:drv_cancel_remain_on_channel"> </modifier>
        <modifier name="perf::mac80211:drv_set_ringparam" desc="tracepoint, masks:drv_set_ringparam"> </modifier>
        <modifier name="perf::mac80211:drv_get_ringparam" desc="tracepoint, masks:drv_get_ringparam"> </modifier>
        <modifier name="perf::mac80211:drv_tx_frames_pending" desc="tracepoint, masks:drv_tx_frames_pending"> </modifier>
        <modifier name="perf::mac80211:drv_offchannel_tx_cancel_wait" desc="tracepoint, masks:drv_offchannel_tx_cancel_wait"> </modifier>
        <modifier name="perf::mac80211:drv_set_bitrate_mask" desc="tracepoint, masks:drv_set_bitrate_mask"> </modifier>
        <modifier name="perf::mac80211:drv_set_rekey_data" desc="tracepoint, masks:drv_set_rekey_data"> </modifier>
        <modifier name="perf::mac80211:drv_event_callback" desc="tracepoint, masks:drv_event_callback"> </modifier>
        <modifier name="perf::mac80211:drv_release_buffered_frames" desc="tracepoint, masks:drv_release_buffered_frames"> </modifier>
        <modifier name="perf::mac80211:drv_allow_buffered_frames" desc="tracepoint, masks:drv_allow_buffered_frames"> </modifier>
        <modifier name="perf::mac80211:drv_mgd_prepare_tx" desc="tracepoint, masks:drv_mgd_prepare_tx"> </modifier>
        <modifier name="perf::mac80211:drv_mgd_protect_tdls_discover" desc="tracepoint, masks:drv_mgd_protect_tdls_discover"> </modifier>
        <modifier name="perf::mac80211:drv_add_chanctx" desc="tracepoint, masks:drv_add_chanctx"> </modifier>
        <modifier name="perf::mac80211:drv_remove_chanctx" desc="tracepoint, masks:drv_remove_chanctx"> </modifier>
        <modifier name="perf::mac80211:drv_change_chanctx" desc="tracepoint, masks:drv_change_chanctx"> </modifier>
        <modifier name="perf::mac80211:drv_switch_vif_chanctx" desc="tracepoint, masks:drv_switch_vif_chanctx"> </modifier>
        <modifier name="perf::mac80211:drv_assign_vif_chanctx" desc="tracepoint, masks:drv_assign_vif_chanctx"> </modifier>
        <modifier name="perf::mac80211:drv_unassign_vif_chanctx" desc="tracepoint, masks:drv_unassign_vif_chanctx"> </modifier>
        <modifier name="perf::mac80211:drv_start_ap" desc="tracepoint, masks:drv_start_ap"> </modifier>
        <modifier name="perf::mac80211:drv_stop_ap" desc="tracepoint, masks:drv_stop_ap"> </modifier>
        <modifier name="perf::mac80211:drv_reconfig_complete" desc="tracepoint, masks:drv_reconfig_complete"> </modifier>
        <modifier name="perf::mac80211:drv_ipv6_addr_change" desc="tracepoint, masks:drv_ipv6_addr_change"> </modifier>
        <modifier name="perf::mac80211:drv_join_ibss" desc="tracepoint, masks:drv_join_ibss"> </modifier>
        <modifier name="perf::mac80211:drv_leave_ibss" desc="tracepoint, masks:drv_leave_ibss"> </modifier>
        <modifier name="perf::mac80211:drv_get_expected_throughput" desc="tracepoint, masks:drv_get_expected_throughput"> </modifier>
        <modifier name="perf::mac80211:drv_start_nan" desc="tracepoint, masks:drv_start_nan"> </modifier>
        <modifier name="perf::mac80211:drv_stop_nan" desc="tracepoint, masks:drv_stop_nan"> </modifier>
        <modifier name="perf::mac80211:drv_nan_change_conf" desc="tracepoint, masks:drv_nan_change_conf"> </modifier>
        <modifier name="perf::mac80211:drv_add_nan_func" desc="tracepoint, masks:drv_add_nan_func"> </modifier>
        <modifier name="perf::mac80211:drv_del_nan_func" desc="tracepoint, masks:drv_del_nan_func"> </modifier>
        <modifier name="perf::mac80211:api_start_tx_ba_session" desc="tracepoint, masks:api_start_tx_ba_session"> </modifier>
        <modifier name="perf::mac80211:api_start_tx_ba_cb" desc="tracepoint, masks:api_start_tx_ba_cb"> </modifier>
        <modifier name="perf::mac80211:api_stop_tx_ba_session" desc="tracepoint, masks:api_stop_tx_ba_session"> </modifier>
        <modifier name="perf::mac80211:api_stop_tx_ba_cb" desc="tracepoint, masks:api_stop_tx_ba_cb"> </modifier>
        <modifier name="perf::mac80211:api_restart_hw" desc="tracepoint, masks:api_restart_hw"> </modifier>
        <modifier name="perf::mac80211:api_beacon_loss" desc="tracepoint, masks:api_beacon_loss"> </modifier>
        <modifier name="perf::mac80211:api_connection_loss" desc="tracepoint, masks:api_connection_loss"> </modifier>
        <modifier name="perf::mac80211:api_cqm_rssi_notify" desc="tracepoint, masks:api_cqm_rssi_notify"> </modifier>
        <modifier name="perf::mac80211:api_cqm_beacon_loss_notify" desc="tracepoint, masks:api_cqm_beacon_loss_notify"> </modifier>
        <modifier name="perf::mac80211:api_scan_completed" desc="tracepoint, masks:api_scan_completed"> </modifier>
        <modifier name="perf::mac80211:api_sched_scan_results" desc="tracepoint, masks:api_sched_scan_results"> </modifier>
        <modifier name="perf::mac80211:api_sched_scan_stopped" desc="tracepoint, masks:api_sched_scan_stopped"> </modifier>
        <modifier name="perf::mac80211:api_sta_block_awake" desc="tracepoint, masks:api_sta_block_awake"> </modifier>
        <modifier name="perf::mac80211:api_chswitch_done" desc="tracepoint, masks:api_chswitch_done"> </modifier>
        <modifier name="perf::mac80211:api_ready_on_channel" desc="tracepoint, masks:api_ready_on_channel"> </modifier>
        <modifier name="perf::mac80211:api_remain_on_channel_expired" desc="tracepoint, masks:api_remain_on_channel_expired"> </modifier>
        <modifier name="perf::mac80211:api_gtk_rekey_notify" desc="tracepoint, masks:api_gtk_rekey_notify"> </modifier>
        <modifier name="perf::mac80211:api_enable_rssi_reports" desc="tracepoint, masks:api_enable_rssi_reports"> </modifier>
        <modifier name="perf::mac80211:api_eosp" desc="tracepoint, masks:api_eosp"> </modifier>
        <modifier name="perf::mac80211:api_send_eosp_nullfunc" desc="tracepoint, masks:api_send_eosp_nullfunc"> </modifier>
        <modifier name="perf::mac80211:api_sta_set_buffered" desc="tracepoint, masks:api_sta_set_buffered"> </modifier>
        <modifier name="perf::mac80211:wake_queue" desc="tracepoint, masks:wake_queue"> </modifier>
        <modifier name="perf::mac80211:stop_queue" desc="tracepoint, masks:stop_queue"> </modifier>
        <modifier name="perf::mac80211:drv_set_default_unicast_key" desc="tracepoint, masks:drv_set_default_unicast_key"> </modifier>
        <modifier name="perf::mac80211:api_radar_detected" desc="tracepoint, masks:api_radar_detected"> </modifier>
        <modifier name="perf::mac80211:drv_channel_switch_beacon" desc="tracepoint, masks:drv_channel_switch_beacon"> </modifier>
        <modifier name="perf::mac80211:drv_pre_channel_switch" desc="tracepoint, masks:drv_pre_channel_switch"> </modifier>
        <modifier name="perf::mac80211:drv_post_channel_switch" desc="tracepoint, masks:drv_post_channel_switch"> </modifier>
        <modifier name="perf::mac80211:drv_get_txpower" desc="tracepoint, masks:drv_get_txpower"> </modifier>
        <modifier name="perf::mac80211:drv_tdls_channel_switch" desc="tracepoint, masks:drv_tdls_channel_switch"> </modifier>
        <modifier name="perf::mac80211:drv_tdls_cancel_channel_switch" desc="tracepoint, masks:drv_tdls_cancel_channel_switch"> </modifier>
        <modifier name="perf::mac80211:drv_tdls_recv_channel_switch" desc="tracepoint, masks:drv_tdls_recv_channel_switch"> </modifier>
        <modifier name="perf::mac80211:drv_wake_tx_queue" desc="tracepoint, masks:drv_wake_tx_queue"> </modifier>
    </event>
    <event index="95" name="perf::mac80211_msg" desc="tracepoint">
        <modifier name="perf::mac80211_msg:mac80211_info" desc="tracepoint, masks:mac80211_info"> </modifier>
        <modifier name="perf::mac80211_msg:mac80211_dbg" desc="tracepoint, masks:mac80211_dbg"> </modifier>
        <modifier name="perf::mac80211_msg:mac80211_err" desc="tracepoint, masks:mac80211_err"> </modifier>
    </event>
    <event index="96" name="perf::iwlwifi_io" desc="tracepoint">
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_ioread32" desc="tracepoint, masks:iwlwifi_dev_ioread32"> </modifier>
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_iowrite8" desc="tracepoint, masks:iwlwifi_dev_iowrite8"> </modifier>
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_iowrite32" desc="tracepoint, masks:iwlwifi_dev_iowrite32"> </modifier>
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_iowrite64" desc="tracepoint, masks:iwlwifi_dev_iowrite64"> </modifier>
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_iowrite_prph32" desc="tracepoint, masks:iwlwifi_dev_iowrite_prph32"> </modifier>
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_iowrite_prph64" desc="tracepoint, masks:iwlwifi_dev_iowrite_prph64"> </modifier>
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_ioread_prph32" desc="tracepoint, masks:iwlwifi_dev_ioread_prph32"> </modifier>
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_irq" desc="tracepoint, masks:iwlwifi_dev_irq"> </modifier>
        <modifier name="perf::iwlwifi_io:iwlwifi_dev_ict_read" desc="tracepoint, masks:iwlwifi_dev_ict_read"> </modifier>
    </event>
    <event index="97" name="perf::iwlwifi_ucode" desc="tracepoint">
        <modifier name="perf::iwlwifi_ucode:iwlwifi_dev_ucode_cont_event" desc="tracepoint, masks:iwlwifi_dev_ucode_cont_event"> </modifier>
        <modifier name="perf::iwlwifi_ucode:iwlwifi_dev_ucode_wrap_event" desc="tracepoint, masks:iwlwifi_dev_ucode_wrap_event"> </modifier>
    </event>
    <event index="98" name="perf::iwlwifi_msg" desc="tracepoint">
        <modifier name="perf::iwlwifi_msg:iwlwifi_err" desc="tracepoint, masks:iwlwifi_err"> </modifier>
        <modifier name="perf::iwlwifi_msg:iwlwifi_warn" desc="tracepoint, masks:iwlwifi_warn"> </modifier>
        <modifier name="perf::iwlwifi_msg:iwlwifi_info" desc="tracepoint, masks:iwlwifi_info"> </modifier>
        <modifier name="perf::iwlwifi_msg:iwlwifi_crit" desc="tracepoint, masks:iwlwifi_crit"> </modifier>
        <modifier name="perf::iwlwifi_msg:iwlwifi_dbg" desc="tracepoint, masks:iwlwifi_dbg"> </modifier>
    </event>
    <event index="99" name="perf::iwlwifi_data" desc="tracepoint">
        <modifier name="perf::iwlwifi_data:iwlwifi_dev_tx_data" desc="tracepoint, masks:iwlwifi_dev_tx_data"> </modifier>
        <modifier name="perf::iwlwifi_data:iwlwifi_dev_tx_tso_chunk" desc="tracepoint, masks:iwlwifi_dev_tx_tso_chunk"> </modifier>
        <modifier name="perf::iwlwifi_data:iwlwifi_dev_rx_data" desc="tracepoint, masks:iwlwifi_dev_rx_data"> </modifier>
    </event>
    <event index="100" name="perf::iwlwifi" desc="tracepoint">
        <modifier name="perf::iwlwifi:iwlwifi_dev_hcmd" desc="tracepoint, masks:iwlwifi_dev_hcmd"> </modifier>
        <modifier name="perf::iwlwifi:iwlwifi_dev_rx" desc="tracepoint, masks:iwlwifi_dev_rx"> </modifier>
        <modifier name="perf::iwlwifi:iwlwifi_dev_tx" desc="tracepoint, masks:iwlwifi_dev_tx"> </modifier>
        <modifier name="perf::iwlwifi:iwlwifi_dev_ucode_error" desc="tracepoint, masks:iwlwifi_dev_ucode_error"> </modifier>
        <modifier name="perf::iwlwifi:iwlwifi_dev_ucode_event" desc="tracepoint, masks:iwlwifi_dev_ucode_event"> </modifier>
    </event>
    <event index="101" name="perf::cfg80211" desc="tracepoint">
        <modifier name="perf::cfg80211:rdev_suspend" desc="tracepoint, masks:rdev_suspend"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_int" desc="tracepoint, masks:rdev_return_int"> </modifier>
        <modifier name="perf::cfg80211:rdev_scan" desc="tracepoint, masks:rdev_scan"> </modifier>
        <modifier name="perf::cfg80211:rdev_resume" desc="tracepoint, masks:rdev_resume"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_void" desc="tracepoint, masks:rdev_return_void"> </modifier>
        <modifier name="perf::cfg80211:rdev_get_antenna" desc="tracepoint, masks:rdev_get_antenna"> </modifier>
        <modifier name="perf::cfg80211:rdev_rfkill_poll" desc="tracepoint, masks:rdev_rfkill_poll"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_wakeup" desc="tracepoint, masks:rdev_set_wakeup"> </modifier>
        <modifier name="perf::cfg80211:rdev_add_virtual_intf" desc="tracepoint, masks:rdev_add_virtual_intf"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_wdev" desc="tracepoint, masks:rdev_return_wdev"> </modifier>
        <modifier name="perf::cfg80211:rdev_del_virtual_intf" desc="tracepoint, masks:rdev_del_virtual_intf"> </modifier>
        <modifier name="perf::cfg80211:rdev_change_virtual_intf" desc="tracepoint, masks:rdev_change_virtual_intf"> </modifier>
        <modifier name="perf::cfg80211:rdev_add_key" desc="tracepoint, masks:rdev_add_key"> </modifier>
        <modifier name="perf::cfg80211:rdev_get_key" desc="tracepoint, masks:rdev_get_key"> </modifier>
        <modifier name="perf::cfg80211:rdev_del_key" desc="tracepoint, masks:rdev_del_key"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_default_key" desc="tracepoint, masks:rdev_set_default_key"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_default_mgmt_key" desc="tracepoint, masks:rdev_set_default_mgmt_key"> </modifier>
        <modifier name="perf::cfg80211:rdev_start_ap" desc="tracepoint, masks:rdev_start_ap"> </modifier>
        <modifier name="perf::cfg80211:rdev_change_beacon" desc="tracepoint, masks:rdev_change_beacon"> </modifier>
        <modifier name="perf::cfg80211:rdev_stop_ap" desc="tracepoint, masks:rdev_stop_ap"> </modifier>
        <modifier name="perf::cfg80211:rdev_sched_scan_stop" desc="tracepoint, masks:rdev_sched_scan_stop"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_rekey_data" desc="tracepoint, masks:rdev_set_rekey_data"> </modifier>
        <modifier name="perf::cfg80211:rdev_get_mesh_config" desc="tracepoint, masks:rdev_get_mesh_config"> </modifier>
        <modifier name="perf::cfg80211:rdev_leave_mesh" desc="tracepoint, masks:rdev_leave_mesh"> </modifier>
        <modifier name="perf::cfg80211:rdev_leave_ibss" desc="tracepoint, masks:rdev_leave_ibss"> </modifier>
        <modifier name="perf::cfg80211:rdev_leave_ocb" desc="tracepoint, masks:rdev_leave_ocb"> </modifier>
        <modifier name="perf::cfg80211:rdev_flush_pmksa" desc="tracepoint, masks:rdev_flush_pmksa"> </modifier>
        <modifier name="perf::cfg80211:rdev_add_station" desc="tracepoint, masks:rdev_add_station"> </modifier>
        <modifier name="perf::cfg80211:rdev_change_station" desc="tracepoint, masks:rdev_change_station"> </modifier>
        <modifier name="perf::cfg80211:rdev_del_station" desc="tracepoint, masks:rdev_del_station"> </modifier>
        <modifier name="perf::cfg80211:rdev_get_station" desc="tracepoint, masks:rdev_get_station"> </modifier>
        <modifier name="perf::cfg80211:rdev_del_mpath" desc="tracepoint, masks:rdev_del_mpath"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_wds_peer" desc="tracepoint, masks:rdev_set_wds_peer"> </modifier>
        <modifier name="perf::cfg80211:rdev_dump_station" desc="tracepoint, masks:rdev_dump_station"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_int_station_info" desc="tracepoint, masks:rdev_return_int_station_info"> </modifier>
        <modifier name="perf::cfg80211:rdev_add_mpath" desc="tracepoint, masks:rdev_add_mpath"> </modifier>
        <modifier name="perf::cfg80211:rdev_change_mpath" desc="tracepoint, masks:rdev_change_mpath"> </modifier>
        <modifier name="perf::cfg80211:rdev_get_mpath" desc="tracepoint, masks:rdev_get_mpath"> </modifier>
        <modifier name="perf::cfg80211:rdev_dump_mpath" desc="tracepoint, masks:rdev_dump_mpath"> </modifier>
        <modifier name="perf::cfg80211:rdev_get_mpp" desc="tracepoint, masks:rdev_get_mpp"> </modifier>
        <modifier name="perf::cfg80211:rdev_dump_mpp" desc="tracepoint, masks:rdev_dump_mpp"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_int_mpath_info" desc="tracepoint, masks:rdev_return_int_mpath_info"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_int_mesh_config" desc="tracepoint, masks:rdev_return_int_mesh_config"> </modifier>
        <modifier name="perf::cfg80211:rdev_update_mesh_config" desc="tracepoint, masks:rdev_update_mesh_config"> </modifier>
        <modifier name="perf::cfg80211:rdev_join_mesh" desc="tracepoint, masks:rdev_join_mesh"> </modifier>
        <modifier name="perf::cfg80211:rdev_change_bss" desc="tracepoint, masks:rdev_change_bss"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_txq_params" desc="tracepoint, masks:rdev_set_txq_params"> </modifier>
        <modifier name="perf::cfg80211:rdev_libertas_set_mesh_channel" desc="tracepoint, masks:rdev_libertas_set_mesh_channel"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_monitor_channel" desc="tracepoint, masks:rdev_set_monitor_channel"> </modifier>
        <modifier name="perf::cfg80211:rdev_auth" desc="tracepoint, masks:rdev_auth"> </modifier>
        <modifier name="perf::cfg80211:rdev_assoc" desc="tracepoint, masks:rdev_assoc"> </modifier>
        <modifier name="perf::cfg80211:rdev_deauth" desc="tracepoint, masks:rdev_deauth"> </modifier>
        <modifier name="perf::cfg80211:rdev_disassoc" desc="tracepoint, masks:rdev_disassoc"> </modifier>
        <modifier name="perf::cfg80211:rdev_mgmt_tx_cancel_wait" desc="tracepoint, masks:rdev_mgmt_tx_cancel_wait"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_power_mgmt" desc="tracepoint, masks:rdev_set_power_mgmt"> </modifier>
        <modifier name="perf::cfg80211:rdev_connect" desc="tracepoint, masks:rdev_connect"> </modifier>
        <modifier name="perf::cfg80211:rdev_update_connect_params" desc="tracepoint, masks:rdev_update_connect_params"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_cqm_rssi_config" desc="tracepoint, masks:rdev_set_cqm_rssi_config"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_cqm_txe_config" desc="tracepoint, masks:rdev_set_cqm_txe_config"> </modifier>
        <modifier name="perf::cfg80211:rdev_disconnect" desc="tracepoint, masks:rdev_disconnect"> </modifier>
        <modifier name="perf::cfg80211:rdev_join_ibss" desc="tracepoint, masks:rdev_join_ibss"> </modifier>
        <modifier name="perf::cfg80211:rdev_join_ocb" desc="tracepoint, masks:rdev_join_ocb"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_wiphy_params" desc="tracepoint, masks:rdev_set_wiphy_params"> </modifier>
        <modifier name="perf::cfg80211:rdev_get_tx_power" desc="tracepoint, masks:rdev_get_tx_power"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_tx_power" desc="tracepoint, masks:rdev_set_tx_power"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_int_int" desc="tracepoint, masks:rdev_return_int_int"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_bitrate_mask" desc="tracepoint, masks:rdev_set_bitrate_mask"> </modifier>
        <modifier name="perf::cfg80211:rdev_mgmt_frame_register" desc="tracepoint, masks:rdev_mgmt_frame_register"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_int_tx_rx" desc="tracepoint, masks:rdev_return_int_tx_rx"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_void_tx_rx" desc="tracepoint, masks:rdev_return_void_tx_rx"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_antenna" desc="tracepoint, masks:rdev_set_antenna"> </modifier>
        <modifier name="perf::cfg80211:rdev_sched_scan_start" desc="tracepoint, masks:rdev_sched_scan_start"> </modifier>
        <modifier name="perf::cfg80211:rdev_tdls_mgmt" desc="tracepoint, masks:rdev_tdls_mgmt"> </modifier>
        <modifier name="perf::cfg80211:rdev_dump_survey" desc="tracepoint, masks:rdev_dump_survey"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_int_survey_info" desc="tracepoint, masks:rdev_return_int_survey_info"> </modifier>
        <modifier name="perf::cfg80211:rdev_tdls_oper" desc="tracepoint, masks:rdev_tdls_oper"> </modifier>
        <modifier name="perf::cfg80211:rdev_probe_client" desc="tracepoint, masks:rdev_probe_client"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_pmksa" desc="tracepoint, masks:rdev_set_pmksa"> </modifier>
        <modifier name="perf::cfg80211:rdev_del_pmksa" desc="tracepoint, masks:rdev_del_pmksa"> </modifier>
        <modifier name="perf::cfg80211:rdev_remain_on_channel" desc="tracepoint, masks:rdev_remain_on_channel"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_int_cookie" desc="tracepoint, masks:rdev_return_int_cookie"> </modifier>
        <modifier name="perf::cfg80211:rdev_cancel_remain_on_channel" desc="tracepoint, masks:rdev_cancel_remain_on_channel"> </modifier>
        <modifier name="perf::cfg80211:rdev_mgmt_tx" desc="tracepoint, masks:rdev_mgmt_tx"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_noack_map" desc="tracepoint, masks:rdev_set_noack_map"> </modifier>
        <modifier name="perf::cfg80211:rdev_get_channel" desc="tracepoint, masks:rdev_get_channel"> </modifier>
        <modifier name="perf::cfg80211:rdev_return_chandef" desc="tracepoint, masks:rdev_return_chandef"> </modifier>
        <modifier name="perf::cfg80211:rdev_start_p2p_device" desc="tracepoint, masks:rdev_start_p2p_device"> </modifier>
        <modifier name="perf::cfg80211:rdev_stop_p2p_device" desc="tracepoint, masks:rdev_stop_p2p_device"> </modifier>
        <modifier name="perf::cfg80211:rdev_start_nan" desc="tracepoint, masks:rdev_start_nan"> </modifier>
        <modifier name="perf::cfg80211:rdev_nan_change_conf" desc="tracepoint, masks:rdev_nan_change_conf"> </modifier>
        <modifier name="perf::cfg80211:rdev_stop_nan" desc="tracepoint, masks:rdev_stop_nan"> </modifier>
        <modifier name="perf::cfg80211:rdev_add_nan_func" desc="tracepoint, masks:rdev_add_nan_func"> </modifier>
        <modifier name="perf::cfg80211:rdev_del_nan_func" desc="tracepoint, masks:rdev_del_nan_func"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_mac_acl" desc="tracepoint, masks:rdev_set_mac_acl"> </modifier>
        <modifier name="perf::cfg80211:rdev_update_ft_ies" desc="tracepoint, masks:rdev_update_ft_ies"> </modifier>
        <modifier name="perf::cfg80211:rdev_crit_proto_start" desc="tracepoint, masks:rdev_crit_proto_start"> </modifier>
        <modifier name="perf::cfg80211:rdev_crit_proto_stop" desc="tracepoint, masks:rdev_crit_proto_stop"> </modifier>
        <modifier name="perf::cfg80211:rdev_channel_switch" desc="tracepoint, masks:rdev_channel_switch"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_qos_map" desc="tracepoint, masks:rdev_set_qos_map"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_ap_chanwidth" desc="tracepoint, masks:rdev_set_ap_chanwidth"> </modifier>
        <modifier name="perf::cfg80211:rdev_add_tx_ts" desc="tracepoint, masks:rdev_add_tx_ts"> </modifier>
        <modifier name="perf::cfg80211:rdev_del_tx_ts" desc="tracepoint, masks:rdev_del_tx_ts"> </modifier>
        <modifier name="perf::cfg80211:rdev_tdls_channel_switch" desc="tracepoint, masks:rdev_tdls_channel_switch"> </modifier>
        <modifier name="perf::cfg80211:rdev_tdls_cancel_channel_switch" desc="tracepoint, masks:rdev_tdls_cancel_channel_switch"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_return_bool" desc="tracepoint, masks:cfg80211_return_bool"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_notify_new_peer_candidate" desc="tracepoint, masks:cfg80211_notify_new_peer_candidate"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_send_rx_auth" desc="tracepoint, masks:cfg80211_send_rx_auth"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_send_rx_assoc" desc="tracepoint, masks:cfg80211_send_rx_assoc"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_rx_unprot_mlme_mgmt" desc="tracepoint, masks:cfg80211_rx_unprot_mlme_mgmt"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_rx_mlme_mgmt" desc="tracepoint, masks:cfg80211_rx_mlme_mgmt"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_tx_mlme_mgmt" desc="tracepoint, masks:cfg80211_tx_mlme_mgmt"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_send_auth_timeout" desc="tracepoint, masks:cfg80211_send_auth_timeout"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_send_assoc_timeout" desc="tracepoint, masks:cfg80211_send_assoc_timeout"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_michael_mic_failure" desc="tracepoint, masks:cfg80211_michael_mic_failure"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_ready_on_channel" desc="tracepoint, masks:cfg80211_ready_on_channel"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_ready_on_channel_expired" desc="tracepoint, masks:cfg80211_ready_on_channel_expired"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_new_sta" desc="tracepoint, masks:cfg80211_new_sta"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_del_sta" desc="tracepoint, masks:cfg80211_del_sta"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_rx_mgmt" desc="tracepoint, masks:cfg80211_rx_mgmt"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_mgmt_tx_status" desc="tracepoint, masks:cfg80211_mgmt_tx_status"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_cqm_rssi_notify" desc="tracepoint, masks:cfg80211_cqm_rssi_notify"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_reg_can_beacon" desc="tracepoint, masks:cfg80211_reg_can_beacon"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_chandef_dfs_required" desc="tracepoint, masks:cfg80211_chandef_dfs_required"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_ch_switch_notify" desc="tracepoint, masks:cfg80211_ch_switch_notify"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_ch_switch_started_notify" desc="tracepoint, masks:cfg80211_ch_switch_started_notify"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_radar_event" desc="tracepoint, masks:cfg80211_radar_event"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_cac_event" desc="tracepoint, masks:cfg80211_cac_event"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_rx_spurious_frame" desc="tracepoint, masks:cfg80211_rx_spurious_frame"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_rx_unexpected_4addr_frame" desc="tracepoint, masks:cfg80211_rx_unexpected_4addr_frame"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_ibss_joined" desc="tracepoint, masks:cfg80211_ibss_joined"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_probe_status" desc="tracepoint, masks:cfg80211_probe_status"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_cqm_pktloss_notify" desc="tracepoint, masks:cfg80211_cqm_pktloss_notify"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_gtk_rekey_notify" desc="tracepoint, masks:cfg80211_gtk_rekey_notify"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_pmksa_candidate_notify" desc="tracepoint, masks:cfg80211_pmksa_candidate_notify"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_report_obss_beacon" desc="tracepoint, masks:cfg80211_report_obss_beacon"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_tdls_oper_request" desc="tracepoint, masks:cfg80211_tdls_oper_request"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_scan_done" desc="tracepoint, masks:cfg80211_scan_done"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_sched_scan_results" desc="tracepoint, masks:cfg80211_sched_scan_results"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_sched_scan_stopped" desc="tracepoint, masks:cfg80211_sched_scan_stopped"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_get_bss" desc="tracepoint, masks:cfg80211_get_bss"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_inform_bss_frame" desc="tracepoint, masks:cfg80211_inform_bss_frame"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_return_bss" desc="tracepoint, masks:cfg80211_return_bss"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_return_uint" desc="tracepoint, masks:cfg80211_return_uint"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_return_u32" desc="tracepoint, masks:cfg80211_return_u32"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_report_wowlan_wakeup" desc="tracepoint, masks:cfg80211_report_wowlan_wakeup"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_ft_event" desc="tracepoint, masks:cfg80211_ft_event"> </modifier>
        <modifier name="perf::cfg80211:cfg80211_stop_iface" desc="tracepoint, masks:cfg80211_stop_iface"> </modifier>
        <modifier name="perf::cfg80211:rdev_start_radar_detection" desc="tracepoint, masks:rdev_start_radar_detection"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_mcast_rate" desc="tracepoint, masks:rdev_set_mcast_rate"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_coalesce" desc="tracepoint, masks:rdev_set_coalesce"> </modifier>
        <modifier name="perf::cfg80211:rdev_abort_scan" desc="tracepoint, masks:rdev_abort_scan"> </modifier>
        <modifier name="perf::cfg80211:rdev_set_multicast_to_unicast" desc="tracepoint, masks:rdev_set_multicast_to_unicast"> </modifier>
    </event>
    <event index="102" name="perf::mei" desc="tracepoint">
        <modifier name="perf::mei:mei_reg_read" desc="tracepoint, masks:mei_reg_read"> </modifier>
        <modifier name="perf::mei:mei_reg_write" desc="tracepoint, masks:mei_reg_write"> </modifier>
        <modifier name="perf::mei:mei_pci_cfg_read" desc="tracepoint, masks:mei_pci_cfg_read"> </modifier>
        <modifier name="perf::mei:mei_pci_cfg_write" desc="tracepoint, masks:mei_pci_cfg_write"> </modifier>
    </event>
    <event index="103" name="perf::drm" desc="tracepoint">
        <modifier name="perf::drm:drm_vblank_event" desc="tracepoint, masks:drm_vblank_event"> </modifier>
        <modifier name="perf::drm:drm_vblank_event_queued" desc="tracepoint, masks:drm_vblank_event_queued"> </modifier>
        <modifier name="perf::drm:drm_vblank_event_delivered" desc="tracepoint, masks:drm_vblank_event_delivered"> </modifier>
    </event>
    <event index="104" name="perf::fjes" desc="tracepoint">
        <modifier name="perf::fjes:fjes_hw_issue_request_command" desc="tracepoint, masks:fjes_hw_issue_request_command"> </modifier>
        <modifier name="perf::fjes:fjes_hw_request_info" desc="tracepoint, masks:fjes_hw_request_info"> </modifier>
        <modifier name="perf::fjes:fjes_hw_request_info_err" desc="tracepoint, masks:fjes_hw_request_info_err"> </modifier>
        <modifier name="perf::fjes:fjes_hw_register_buff_addr_req" desc="tracepoint, masks:fjes_hw_register_buff_addr_req"> </modifier>
        <modifier name="perf::fjes:fjes_hw_register_buff_addr" desc="tracepoint, masks:fjes_hw_register_buff_addr"> </modifier>
        <modifier name="perf::fjes:fjes_hw_register_buff_addr_err" desc="tracepoint, masks:fjes_hw_register_buff_addr_err"> </modifier>
        <modifier name="perf::fjes:fjes_hw_unregister_buff_addr_req" desc="tracepoint, masks:fjes_hw_unregister_buff_addr_req"> </modifier>
        <modifier name="perf::fjes:fjes_hw_unregister_buff_addr" desc="tracepoint, masks:fjes_hw_unregister_buff_addr"> </modifier>
        <modifier name="perf::fjes:fjes_hw_unregister_buff_addr_err" desc="tracepoint, masks:fjes_hw_unregister_buff_addr_err"> </modifier>
        <modifier name="perf::fjes:fjes_hw_start_debug_req" desc="tracepoint, masks:fjes_hw_start_debug_req"> </modifier>
        <modifier name="perf::fjes:fjes_hw_start_debug" desc="tracepoint, masks:fjes_hw_start_debug"> </modifier>
        <modifier name="perf::fjes:fjes_hw_start_debug_err" desc="tracepoint, masks:fjes_hw_start_debug_err"> </modifier>
        <modifier name="perf::fjes:fjes_hw_stop_debug" desc="tracepoint, masks:fjes_hw_stop_debug"> </modifier>
        <modifier name="perf::fjes:fjes_hw_stop_debug_err" desc="tracepoint, masks:fjes_hw_stop_debug_err"> </modifier>
        <modifier name="perf::fjes:fjes_txrx_stop_req_irq_pre" desc="tracepoint, masks:fjes_txrx_stop_req_irq_pre"> </modifier>
        <modifier name="perf::fjes:fjes_txrx_stop_req_irq_post" desc="tracepoint, masks:fjes_txrx_stop_req_irq_post"> </modifier>
        <modifier name="perf::fjes:fjes_stop_req_irq_pre" desc="tracepoint, masks:fjes_stop_req_irq_pre"> </modifier>
        <modifier name="perf::fjes:fjes_stop_req_irq_post" desc="tracepoint, masks:fjes_stop_req_irq_post"> </modifier>
    </event>
    <event index="105" name="perf::skb" desc="tracepoint">
        <modifier name="perf::skb:kfree_skb" desc="tracepoint, masks:kfree_skb"> </modifier>
        <modifier name="perf::skb:consume_skb" desc="tracepoint, masks:consume_skb"> </modifier>
        <modifier name="perf::skb:skb_copy_datagram_iovec" desc="tracepoint, masks:skb_copy_datagram_iovec"> </modifier>
    </event>
    <event index="106" name="perf::net" desc="tracepoint">
        <modifier name="perf::net:net_dev_start_xmit" desc="tracepoint, masks:net_dev_start_xmit"> </modifier>
        <modifier name="perf::net:net_dev_xmit" desc="tracepoint, masks:net_dev_xmit"> </modifier>
        <modifier name="perf::net:net_dev_queue" desc="tracepoint, masks:net_dev_queue"> </modifier>
        <modifier name="perf::net:netif_receive_skb" desc="tracepoint, masks:netif_receive_skb"> </modifier>
        <modifier name="perf::net:netif_rx" desc="tracepoint, masks:netif_rx"> </modifier>
        <modifier name="perf::net:napi_gro_frags_entry" desc="tracepoint, masks:napi_gro_frags_entry"> </modifier>
        <modifier name="perf::net:napi_gro_receive_entry" desc="tracepoint, masks:napi_gro_receive_entry"> </modifier>
        <modifier name="perf::net:netif_receive_skb_entry" desc="tracepoint, masks:netif_receive_skb_entry"> </modifier>
        <modifier name="perf::net:netif_rx_entry" desc="tracepoint, masks:netif_rx_entry"> </modifier>
        <modifier name="perf::net:netif_rx_ni_entry" desc="tracepoint, masks:netif_rx_ni_entry"> </modifier>
    </event>
    <event index="107" name="perf::napi" desc="tracepoint">
        <modifier name="perf::napi:napi_poll" desc="tracepoint, masks:napi_poll"> </modifier>
    </event>
    <event index="108" name="perf::sock" desc="tracepoint">
        <modifier name="perf::sock:sock_rcvqueue_full" desc="tracepoint, masks:sock_rcvqueue_full"> </modifier>
        <modifier name="perf::sock:sock_exceed_buf_limit" desc="tracepoint, masks:sock_exceed_buf_limit"> </modifier>
    </event>
    <event index="109" name="perf::udp" desc="tracepoint">
        <modifier name="perf::udp:udp_fail_queue_rcv_skb" desc="tracepoint, masks:udp_fail_queue_rcv_skb"> </modifier>
    </event>
    <event index="110" name="perf::fib" desc="tracepoint">
        <modifier name="perf::fib:fib_table_lookup" desc="tracepoint, masks:fib_table_lookup"> </modifier>
        <modifier name="perf::fib:fib_table_lookup_nh" desc="tracepoint, masks:fib_table_lookup_nh"> </modifier>
        <modifier name="perf::fib:fib_validate_source" desc="tracepoint, masks:fib_validate_source"> </modifier>
    </event>
    <event index="111" name="perf::fib6" desc="tracepoint">
        <modifier name="perf::fib6:fib6_table_lookup" desc="tracepoint, masks:fib6_table_lookup"> </modifier>
    </event>
    <event index="112" name="perf::ras" desc="tracepoint">
        <modifier name="perf::ras:extlog_mem_event" desc="tracepoint, masks:extlog_mem_event"> </modifier>
        <modifier name="perf::ras:mc_event" desc="tracepoint, masks:mc_event"> </modifier>
        <modifier name="perf::ras:aer_event" desc="tracepoint, masks:aer_event"> </modifier>
        <modifier name="perf::ras:memory_failure_event" desc="tracepoint, masks:memory_failure_event"> </modifier>
    </event>
    <event index="113" name="perf::mmc" desc="tracepoint">
        <modifier name="perf::mmc:mmc_request_start" desc="tracepoint, masks:mmc_request_start"> </modifier>
        <modifier name="perf::mmc:mmc_request_done" desc="tracepoint, masks:mmc_request_done"> </modifier>
    </event>
    <event index="114" name="perf::thermal_power_allocator" desc="tracepoint">
        <modifier name="perf::thermal_power_allocator:thermal_power_allocator" desc="tracepoint, masks:thermal_power_allocator"> </modifier>
        <modifier name="perf::thermal_power_allocator:thermal_power_allocator_pid" desc="tracepoint, masks:thermal_power_allocator_pid"> </modifier>
    </event>
    <event index="115" name="perf::thermal" desc="tracepoint">
        <modifier name="perf::thermal:thermal_temperature" desc="tracepoint, masks:thermal_temperature"> </modifier>
        <modifier name="perf::thermal:cdev_update" desc="tracepoint, masks:cdev_update"> </modifier>
        <modifier name="perf::thermal:thermal_zone_trip" desc="tracepoint, masks:thermal_zone_trip"> </modifier>
        <modifier name="perf::thermal:thermal_power_cpu_get_power" desc="tracepoint, masks:thermal_power_cpu_get_power"> </modifier>
        <modifier name="perf::thermal:thermal_power_cpu_limit" desc="tracepoint, masks:thermal_power_cpu_limit"> </modifier>
        <modifier name="perf::thermal:thermal_power_devfreq_get_power" desc="tracepoint, masks:thermal_power_devfreq_get_power"> </modifier>
        <modifier name="perf::thermal:thermal_power_devfreq_limit" desc="tracepoint, masks:thermal_power_devfreq_limit"> </modifier>
    </event>
    <event index="116" name="perf::i2c" desc="tracepoint">
        <modifier name="perf::i2c:i2c_write" desc="tracepoint, masks:i2c_write"> </modifier>
        <modifier name="perf::i2c:i2c_read" desc="tracepoint, masks:i2c_read"> </modifier>
        <modifier name="perf::i2c:i2c_reply" desc="tracepoint, masks:i2c_reply"> </modifier>
        <modifier name="perf::i2c:i2c_result" desc="tracepoint, masks:i2c_result"> </modifier>
        <modifier name="perf::i2c:smbus_write" desc="tracepoint, masks:smbus_write"> </modifier>
        <modifier name="perf::i2c:smbus_read" desc="tracepoint, masks:smbus_read"> </modifier>
        <modifier name="perf::i2c:smbus_reply" desc="tracepoint, masks:smbus_reply"> </modifier>
        <modifier name="perf::i2c:smbus_result" desc="tracepoint, masks:smbus_result"> </modifier>
    </event>
    <event index="117" name="perf::xhci-hcd" desc="tracepoint">
        <modifier name="perf::xhci-hcd:xhci_dbg_address" desc="tracepoint, masks:xhci_dbg_address"> </modifier>
        <modifier name="perf::xhci-hcd:xhci_dbg_context_change" desc="tracepoint, masks:xhci_dbg_context_change"> </modifier>
        <modifier name="perf::xhci-hcd:xhci_dbg_quirks" desc="tracepoint, masks:xhci_dbg_quirks"> </modifier>
        <modifier name="perf::xhci-hcd:xhci_dbg_reset_ep" desc="tracepoint, masks:xhci_dbg_reset_ep"> </modifier>
        <modifier name="perf::xhci-hcd:xhci_dbg_cancel_urb" desc="tracepoint, masks:xhci_dbg_cancel_urb"> </modifier>
        <modifier name="perf::xhci-hcd:xhci_dbg_init" desc="tracepoint, masks:xhci_dbg_init"> </modifier>
        <modifier name="perf::xhci-hcd:xhci_dbg_ring_expansion" desc="tracepoint, masks:xhci_dbg_ring_expansion"> </modifier>
        <modifier name="perf::xhci-hcd:xhci_address_ctx" desc="tracepoint, masks:xhci_address_ctx"> </modifier>
        <modifier name="perf::xhci-hcd:xhci_cmd_completion" desc="tracepoint, masks:xhci_cmd_completion"> </modifier>
    </event>
    <event index="118" name="perf::mdio" desc="tracepoint">
        <modifier name="perf::mdio:mdio_access" desc="tracepoint, masks:mdio_access"> </modifier>
    </event>
    <event index="119" name="perf::spi" desc="tracepoint">
        <modifier name="perf::spi:spi_master_idle" desc="tracepoint, masks:spi_master_idle"> </modifier>
        <modifier name="perf::spi:spi_master_busy" desc="tracepoint, masks:spi_master_busy"> </modifier>
        <modifier name="perf::spi:spi_message_submit" desc="tracepoint, masks:spi_message_submit"> </modifier>
        <modifier name="perf::spi:spi_message_start" desc="tracepoint, masks:spi_message_start"> </modifier>
        <modifier name="perf::spi:spi_message_done" desc="tracepoint, masks:spi_message_done"> </modifier>
        <modifier name="perf::spi:spi_transfer_start" desc="tracepoint, masks:spi_transfer_start"> </modifier>
        <modifier name="perf::spi:spi_transfer_stop" desc="tracepoint, masks:spi_transfer_stop"> </modifier>
    </event>
    <event index="120" name="perf::libata" desc="tracepoint">
        <modifier name="perf::libata:ata_qc_issue" desc="tracepoint, masks:ata_qc_issue"> </modifier>
        <modifier name="perf::libata:ata_qc_complete_internal" desc="tracepoint, masks:ata_qc_complete_internal"> </modifier>
        <modifier name="perf::libata:ata_qc_complete_failed" desc="tracepoint, masks:ata_qc_complete_failed"> </modifier>
        <modifier name="perf::libata:ata_qc_complete_done" desc="tracepoint, masks:ata_qc_complete_done"> </modifier>
        <modifier name="perf::libata:ata_eh_link_autopsy" desc="tracepoint, masks:ata_eh_link_autopsy"> </modifier>
        <modifier name="perf::libata:ata_eh_link_autopsy_qc" desc="tracepoint, masks:ata_eh_link_autopsy_qc"> </modifier>
    </event>
    <event index="121" name="perf::scsi" desc="tracepoint">
        <modifier name="perf::scsi:scsi_dispatch_cmd_start" desc="tracepoint, masks:scsi_dispatch_cmd_start"> </modifier>
        <modifier name="perf::scsi:scsi_dispatch_cmd_error" desc="tracepoint, masks:scsi_dispatch_cmd_error"> </modifier>
        <modifier name="perf::scsi:scsi_dispatch_cmd_done" desc="tracepoint, masks:scsi_dispatch_cmd_done"> </modifier>
        <modifier name="perf::scsi:scsi_dispatch_cmd_timeout" desc="tracepoint, masks:scsi_dispatch_cmd_timeout"> </modifier>
        <modifier name="perf::scsi:scsi_eh_wakeup" desc="tracepoint, masks:scsi_eh_wakeup"> </modifier>
    </event>
    <event index="122" name="perf::sync_trace" desc="tracepoint">
        <modifier name="perf::sync_trace:sync_timeline" desc="tracepoint, masks:sync_timeline"> </modifier>
    </event>
    <event index="123" name="perf::dma_fence" desc="tracepoint">
        <modifier name="perf::dma_fence:dma_fence_annotate_wait_on" desc="tracepoint, masks:dma_fence_annotate_wait_on"> </modifier>
        <modifier name="perf::dma_fence:dma_fence_emit" desc="tracepoint, masks:dma_fence_emit"> </modifier>
        <modifier name="perf::dma_fence:dma_fence_init" desc="tracepoint, masks:dma_fence_init"> </modifier>
        <modifier name="perf::dma_fence:dma_fence_destroy" desc="tracepoint, masks:dma_fence_destroy"> </modifier>
        <modifier name="perf::dma_fence:dma_fence_enable_signal" desc="tracepoint, masks:dma_fence_enable_signal"> </modifier>
        <modifier name="perf::dma_fence:dma_fence_signaled" desc="tracepoint, masks:dma_fence_signaled"> </modifier>
        <modifier name="perf::dma_fence:dma_fence_wait_start" desc="tracepoint, masks:dma_fence_wait_start"> </modifier>
        <modifier name="perf::dma_fence:dma_fence_wait_end" desc="tracepoint, masks:dma_fence_wait_end"> </modifier>
    </event>
    <event index="124" name="perf::regmap" desc="tracepoint">
        <modifier name="perf::regmap:regmap_reg_write" desc="tracepoint, masks:regmap_reg_write"> </modifier>
        <modifier name="perf::regmap:regmap_reg_read" desc="tracepoint, masks:regmap_reg_read"> </modifier>
        <modifier name="perf::regmap:regmap_reg_read_cache" desc="tracepoint, masks:regmap_reg_read_cache"> </modifier>
        <modifier name="perf::regmap:regmap_hw_read_start" desc="tracepoint, masks:regmap_hw_read_start"> </modifier>
        <modifier name="perf::regmap:regmap_hw_read_done" desc="tracepoint, masks:regmap_hw_read_done"> </modifier>
        <modifier name="perf::regmap:regmap_hw_write_start" desc="tracepoint, masks:regmap_hw_write_start"> </modifier>
        <modifier name="perf::regmap:regmap_hw_write_done" desc="tracepoint, masks:regmap_hw_write_done"> </modifier>
        <modifier name="perf::regmap:regcache_sync" desc="tracepoint, masks:regcache_sync"> </modifier>
        <modifier name="perf::regmap:regmap_cache_only" desc="tracepoint, masks:regmap_cache_only"> </modifier>
        <modifier name="perf::regmap:regmap_cache_bypass" desc="tracepoint, masks:regmap_cache_bypass"> </modifier>
        <modifier name="perf::regmap:regmap_async_write_start" desc="tracepoint, masks:regmap_async_write_start"> </modifier>
        <modifier name="perf::regmap:regmap_async_io_complete" desc="tracepoint, masks:regmap_async_io_complete"> </modifier>
        <modifier name="perf::regmap:regmap_async_complete_start" desc="tracepoint, masks:regmap_async_complete_start"> </modifier>
        <modifier name="perf::regmap:regmap_async_complete_done" desc="tracepoint, masks:regmap_async_complete_done"> </modifier>
        <modifier name="perf::regmap:regcache_drop_region" desc="tracepoint, masks:regcache_drop_region"> </modifier>
    </event>
    <event index="125" name="perf::iommu" desc="tracepoint">
        <modifier name="perf::iommu:add_device_to_group" desc="tracepoint, masks:add_device_to_group"> </modifier>
        <modifier name="perf::iommu:remove_device_from_group" desc="tracepoint, masks:remove_device_from_group"> </modifier>
        <modifier name="perf::iommu:attach_device_to_domain" desc="tracepoint, masks:attach_device_to_domain"> </modifier>
        <modifier name="perf::iommu:detach_device_from_domain" desc="tracepoint, masks:detach_device_from_domain"> </modifier>
        <modifier name="perf::iommu:map" desc="tracepoint, masks:map"> </modifier>
        <modifier name="perf::iommu:unmap" desc="tracepoint, masks:unmap"> </modifier>
        <modifier name="perf::iommu:io_page_fault" desc="tracepoint, masks:io_page_fault"> </modifier>
    </event>
    <event index="126" name="perf::random" desc="tracepoint">
        <modifier name="perf::random:add_device_randomness" desc="tracepoint, masks:add_device_randomness"> </modifier>
        <modifier name="perf::random:mix_pool_bytes" desc="tracepoint, masks:mix_pool_bytes"> </modifier>
        <modifier name="perf::random:mix_pool_bytes_nolock" desc="tracepoint, masks:mix_pool_bytes_nolock"> </modifier>
        <modifier name="perf::random:credit_entropy_bits" desc="tracepoint, masks:credit_entropy_bits"> </modifier>
        <modifier name="perf::random:push_to_pool" desc="tracepoint, masks:push_to_pool"> </modifier>
        <modifier name="perf::random:debit_entropy" desc="tracepoint, masks:debit_entropy"> </modifier>
        <modifier name="perf::random:add_input_randomness" desc="tracepoint, masks:add_input_randomness"> </modifier>
        <modifier name="perf::random:add_disk_randomness" desc="tracepoint, masks:add_disk_randomness"> </modifier>
        <modifier name="perf::random:xfer_secondary_pool" desc="tracepoint, masks:xfer_secondary_pool"> </modifier>
        <modifier name="perf::random:get_random_bytes" desc="tracepoint, masks:get_random_bytes"> </modifier>
        <modifier name="perf::random:get_random_bytes_arch" desc="tracepoint, masks:get_random_bytes_arch"> </modifier>
        <modifier name="perf::random:extract_entropy" desc="tracepoint, masks:extract_entropy"> </modifier>
        <modifier name="perf::random:extract_entropy_user" desc="tracepoint, masks:extract_entropy_user"> </modifier>
        <modifier name="perf::random:random_read" desc="tracepoint, masks:random_read"> </modifier>
        <modifier name="perf::random:urandom_read" desc="tracepoint, masks:urandom_read"> </modifier>
    </event>
    <event index="127" name="perf::regulator" desc="tracepoint">
        <modifier name="perf::regulator:regulator_enable" desc="tracepoint, masks:regulator_enable"> </modifier>
        <modifier name="perf::regulator:regulator_enable_delay" desc="tracepoint, masks:regulator_enable_delay"> </modifier>
        <modifier name="perf::regulator:regulator_enable_complete" desc="tracepoint, masks:regulator_enable_complete"> </modifier>
        <modifier name="perf::regulator:regulator_disable" desc="tracepoint, masks:regulator_disable"> </modifier>
        <modifier name="perf::regulator:regulator_disable_complete" desc="tracepoint, masks:regulator_disable_complete"> </modifier>
        <modifier name="perf::regulator:regulator_set_voltage" desc="tracepoint, masks:regulator_set_voltage"> </modifier>
        <modifier name="perf::regulator:regulator_set_voltage_complete" desc="tracepoint, masks:regulator_set_voltage_complete"> </modifier>
    </event>
    <event index="128" name="perf::clk" desc="tracepoint">
        <modifier name="perf::clk:clk_enable" desc="tracepoint, masks:clk_enable"> </modifier>
        <modifier name="perf::clk:clk_enable_complete" desc="tracepoint, masks:clk_enable_complete"> </modifier>
        <modifier name="perf::clk:clk_disable" desc="tracepoint, masks:clk_disable"> </modifier>
        <modifier name="perf::clk:clk_disable_complete" desc="tracepoint, masks:clk_disable_complete"> </modifier>
        <modifier name="perf::clk:clk_prepare" desc="tracepoint, masks:clk_prepare"> </modifier>
        <modifier name="perf::clk:clk_prepare_complete" desc="tracepoint, masks:clk_prepare_complete"> </modifier>
        <modifier name="perf::clk:clk_unprepare" desc="tracepoint, masks:clk_unprepare"> </modifier>
        <modifier name="perf::clk:clk_unprepare_complete" desc="tracepoint, masks:clk_unprepare_complete"> </modifier>
        <modifier name="perf::clk:clk_set_rate" desc="tracepoint, masks:clk_set_rate"> </modifier>
        <modifier name="perf::clk:clk_set_rate_complete" desc="tracepoint, masks:clk_set_rate_complete"> </modifier>
        <modifier name="perf::clk:clk_set_parent" desc="tracepoint, masks:clk_set_parent"> </modifier>
        <modifier name="perf::clk:clk_set_parent_complete" desc="tracepoint, masks:clk_set_parent_complete"> </modifier>
        <modifier name="perf::clk:clk_set_phase" desc="tracepoint, masks:clk_set_phase"> </modifier>
        <modifier name="perf::clk:clk_set_phase_complete" desc="tracepoint, masks:clk_set_phase_complete"> </modifier>
    </event>
    <event index="129" name="perf::gpio" desc="tracepoint">
        <modifier name="perf::gpio:gpio_direction" desc="tracepoint, masks:gpio_direction"> </modifier>
        <modifier name="perf::gpio:gpio_value" desc="tracepoint, masks:gpio_value"> </modifier>
    </event>
    <event index="130" name="perf::msr" desc="tracepoint">
        <modifier name="perf::msr:read_msr" desc="tracepoint, masks:read_msr"> </modifier>
        <modifier name="perf::msr:write_msr" desc="tracepoint, masks:write_msr"> </modifier>
        <modifier name="perf::msr:rdpmc" desc="tracepoint, masks:rdpmc"> </modifier>
    </event>
    <event index="131" name="perf::swiotlb" desc="tracepoint">
        <modifier name="perf::swiotlb:swiotlb_bounced" desc="tracepoint, masks:swiotlb_bounced"> </modifier>
    </event>
    <event index="132" name="perf::wbt" desc="tracepoint">
        <modifier name="perf::wbt:wbt_stat" desc="tracepoint, masks:wbt_stat"> </modifier>
        <modifier name="perf::wbt:wbt_lat" desc="tracepoint, masks:wbt_lat"> </modifier>
        <modifier name="perf::wbt:wbt_step" desc="tracepoint, masks:wbt_step"> </modifier>
        <modifier name="perf::wbt:wbt_timer" desc="tracepoint, masks:wbt_timer"> </modifier>
    </event>
    <event index="133" name="perf::block" desc="tracepoint">
        <modifier name="perf::block:block_touch_buffer" desc="tracepoint, masks:block_touch_buffer"> </modifier>
        <modifier name="perf::block:block_dirty_buffer" desc="tracepoint, masks:block_dirty_buffer"> </modifier>
        <modifier name="perf::block:block_rq_abort" desc="tracepoint, masks:block_rq_abort"> </modifier>
        <modifier name="perf::block:block_rq_requeue" desc="tracepoint, masks:block_rq_requeue"> </modifier>
        <modifier name="perf::block:block_rq_complete" desc="tracepoint, masks:block_rq_complete"> </modifier>
        <modifier name="perf::block:block_rq_insert" desc="tracepoint, masks:block_rq_insert"> </modifier>
        <modifier name="perf::block:block_rq_issue" desc="tracepoint, masks:block_rq_issue"> </modifier>
        <modifier name="perf::block:block_bio_bounce" desc="tracepoint, masks:block_bio_bounce"> </modifier>
        <modifier name="perf::block:block_bio_complete" desc="tracepoint, masks:block_bio_complete"> </modifier>
        <modifier name="perf::block:block_bio_backmerge" desc="tracepoint, masks:block_bio_backmerge"> </modifier>
        <modifier name="perf::block:block_bio_frontmerge" desc="tracepoint, masks:block_bio_frontmerge"> </modifier>
        <modifier name="perf::block:block_bio_queue" desc="tracepoint, masks:block_bio_queue"> </modifier>
        <modifier name="perf::block:block_getrq" desc="tracepoint, masks:block_getrq"> </modifier>
        <modifier name="perf::block:block_sleeprq" desc="tracepoint, masks:block_sleeprq"> </modifier>
        <modifier name="perf::block:block_plug" desc="tracepoint, masks:block_plug"> </modifier>
        <modifier name="perf::block:block_unplug" desc="tracepoint, masks:block_unplug"> </modifier>
        <modifier name="perf::block:block_split" desc="tracepoint, masks:block_split"> </modifier>
        <modifier name="perf::block:block_bio_remap" desc="tracepoint, masks:block_bio_remap"> </modifier>
        <modifier name="perf::block:block_rq_remap" desc="tracepoint, masks:block_rq_remap"> </modifier>
    </event>
    <event index="134" name="perf::jbd2" desc="tracepoint">
        <modifier name="perf::jbd2:jbd2_checkpoint" desc="tracepoint, masks:jbd2_checkpoint"> </modifier>
        <modifier name="perf::jbd2:jbd2_start_commit" desc="tracepoint, masks:jbd2_start_commit"> </modifier>
        <modifier name="perf::jbd2:jbd2_commit_locking" desc="tracepoint, masks:jbd2_commit_locking"> </modifier>
        <modifier name="perf::jbd2:jbd2_commit_flushing" desc="tracepoint, masks:jbd2_commit_flushing"> </modifier>
        <modifier name="perf::jbd2:jbd2_commit_logging" desc="tracepoint, masks:jbd2_commit_logging"> </modifier>
        <modifier name="perf::jbd2:jbd2_drop_transaction" desc="tracepoint, masks:jbd2_drop_transaction"> </modifier>
        <modifier name="perf::jbd2:jbd2_end_commit" desc="tracepoint, masks:jbd2_end_commit"> </modifier>
        <modifier name="perf::jbd2:jbd2_submit_inode_data" desc="tracepoint, masks:jbd2_submit_inode_data"> </modifier>
        <modifier name="perf::jbd2:jbd2_handle_start" desc="tracepoint, masks:jbd2_handle_start"> </modifier>
        <modifier name="perf::jbd2:jbd2_handle_extend" desc="tracepoint, masks:jbd2_handle_extend"> </modifier>
        <modifier name="perf::jbd2:jbd2_handle_stats" desc="tracepoint, masks:jbd2_handle_stats"> </modifier>
        <modifier name="perf::jbd2:jbd2_run_stats" desc="tracepoint, masks:jbd2_run_stats"> </modifier>
        <modifier name="perf::jbd2:jbd2_checkpoint_stats" desc="tracepoint, masks:jbd2_checkpoint_stats"> </modifier>
        <modifier name="perf::jbd2:jbd2_update_log_tail" desc="tracepoint, masks:jbd2_update_log_tail"> </modifier>
        <modifier name="perf::jbd2:jbd2_write_superblock" desc="tracepoint, masks:jbd2_write_superblock"> </modifier>
        <modifier name="perf::jbd2:jbd2_lock_buffer_stall" desc="tracepoint, masks:jbd2_lock_buffer_stall"> </modifier>
    </event>
    <event index="135" name="perf::ext4" desc="tracepoint">
        <modifier name="perf::ext4:ext4_other_inode_update_time" desc="tracepoint, masks:ext4_other_inode_update_time"> </modifier>
        <modifier name="perf::ext4:ext4_free_inode" desc="tracepoint, masks:ext4_free_inode"> </modifier>
        <modifier name="perf::ext4:ext4_request_inode" desc="tracepoint, masks:ext4_request_inode"> </modifier>
        <modifier name="perf::ext4:ext4_allocate_inode" desc="tracepoint, masks:ext4_allocate_inode"> </modifier>
        <modifier name="perf::ext4:ext4_evict_inode" desc="tracepoint, masks:ext4_evict_inode"> </modifier>
        <modifier name="perf::ext4:ext4_drop_inode" desc="tracepoint, masks:ext4_drop_inode"> </modifier>
        <modifier name="perf::ext4:ext4_mark_inode_dirty" desc="tracepoint, masks:ext4_mark_inode_dirty"> </modifier>
        <modifier name="perf::ext4:ext4_begin_ordered_truncate" desc="tracepoint, masks:ext4_begin_ordered_truncate"> </modifier>
        <modifier name="perf::ext4:ext4_write_begin" desc="tracepoint, masks:ext4_write_begin"> </modifier>
        <modifier name="perf::ext4:ext4_da_write_begin" desc="tracepoint, masks:ext4_da_write_begin"> </modifier>
        <modifier name="perf::ext4:ext4_write_end" desc="tracepoint, masks:ext4_write_end"> </modifier>
        <modifier name="perf::ext4:ext4_journalled_write_end" desc="tracepoint, masks:ext4_journalled_write_end"> </modifier>
        <modifier name="perf::ext4:ext4_da_write_end" desc="tracepoint, masks:ext4_da_write_end"> </modifier>
        <modifier name="perf::ext4:ext4_writepages" desc="tracepoint, masks:ext4_writepages"> </modifier>
        <modifier name="perf::ext4:ext4_da_write_pages" desc="tracepoint, masks:ext4_da_write_pages"> </modifier>
        <modifier name="perf::ext4:ext4_da_write_pages_extent" desc="tracepoint, masks:ext4_da_write_pages_extent"> </modifier>
        <modifier name="perf::ext4:ext4_writepages_result" desc="tracepoint, masks:ext4_writepages_result"> </modifier>
        <modifier name="perf::ext4:ext4_writepage" desc="tracepoint, masks:ext4_writepage"> </modifier>
        <modifier name="perf::ext4:ext4_readpage" desc="tracepoint, masks:ext4_readpage"> </modifier>
        <modifier name="perf::ext4:ext4_releasepage" desc="tracepoint, masks:ext4_releasepage"> </modifier>
        <modifier name="perf::ext4:ext4_invalidatepage" desc="tracepoint, masks:ext4_invalidatepage"> </modifier>
        <modifier name="perf::ext4:ext4_journalled_invalidatepage" desc="tracepoint, masks:ext4_journalled_invalidatepage"> </modifier>
        <modifier name="perf::ext4:ext4_discard_blocks" desc="tracepoint, masks:ext4_discard_blocks"> </modifier>
        <modifier name="perf::ext4:ext4_mb_new_inode_pa" desc="tracepoint, masks:ext4_mb_new_inode_pa"> </modifier>
        <modifier name="perf::ext4:ext4_mb_new_group_pa" desc="tracepoint, masks:ext4_mb_new_group_pa"> </modifier>
        <modifier name="perf::ext4:ext4_mb_release_inode_pa" desc="tracepoint, masks:ext4_mb_release_inode_pa"> </modifier>
        <modifier name="perf::ext4:ext4_mb_release_group_pa" desc="tracepoint, masks:ext4_mb_release_group_pa"> </modifier>
        <modifier name="perf::ext4:ext4_discard_preallocations" desc="tracepoint, masks:ext4_discard_preallocations"> </modifier>
        <modifier name="perf::ext4:ext4_mb_discard_preallocations" desc="tracepoint, masks:ext4_mb_discard_preallocations"> </modifier>
        <modifier name="perf::ext4:ext4_request_blocks" desc="tracepoint, masks:ext4_request_blocks"> </modifier>
        <modifier name="perf::ext4:ext4_allocate_blocks" desc="tracepoint, masks:ext4_allocate_blocks"> </modifier>
        <modifier name="perf::ext4:ext4_free_blocks" desc="tracepoint, masks:ext4_free_blocks"> </modifier>
        <modifier name="perf::ext4:ext4_sync_file_enter" desc="tracepoint, masks:ext4_sync_file_enter"> </modifier>
        <modifier name="perf::ext4:ext4_sync_file_exit" desc="tracepoint, masks:ext4_sync_file_exit"> </modifier>
        <modifier name="perf::ext4:ext4_sync_fs" desc="tracepoint, masks:ext4_sync_fs"> </modifier>
        <modifier name="perf::ext4:ext4_alloc_da_blocks" desc="tracepoint, masks:ext4_alloc_da_blocks"> </modifier>
        <modifier name="perf::ext4:ext4_mballoc_alloc" desc="tracepoint, masks:ext4_mballoc_alloc"> </modifier>
        <modifier name="perf::ext4:ext4_mballoc_prealloc" desc="tracepoint, masks:ext4_mballoc_prealloc"> </modifier>
        <modifier name="perf::ext4:ext4_mballoc_discard" desc="tracepoint, masks:ext4_mballoc_discard"> </modifier>
        <modifier name="perf::ext4:ext4_mballoc_free" desc="tracepoint, masks:ext4_mballoc_free"> </modifier>
        <modifier name="perf::ext4:ext4_forget" desc="tracepoint, masks:ext4_forget"> </modifier>
        <modifier name="perf::ext4:ext4_da_update_reserve_space" desc="tracepoint, masks:ext4_da_update_reserve_space"> </modifier>
        <modifier name="perf::ext4:ext4_da_reserve_space" desc="tracepoint, masks:ext4_da_reserve_space"> </modifier>
        <modifier name="perf::ext4:ext4_da_release_space" desc="tracepoint, masks:ext4_da_release_space"> </modifier>
        <modifier name="perf::ext4:ext4_mb_bitmap_load" desc="tracepoint, masks:ext4_mb_bitmap_load"> </modifier>
        <modifier name="perf::ext4:ext4_mb_buddy_bitmap_load" desc="tracepoint, masks:ext4_mb_buddy_bitmap_load"> </modifier>
        <modifier name="perf::ext4:ext4_read_block_bitmap_load" desc="tracepoint, masks:ext4_read_block_bitmap_load"> </modifier>
        <modifier name="perf::ext4:ext4_load_inode_bitmap" desc="tracepoint, masks:ext4_load_inode_bitmap"> </modifier>
        <modifier name="perf::ext4:ext4_direct_IO_enter" desc="tracepoint, masks:ext4_direct_IO_enter"> </modifier>
        <modifier name="perf::ext4:ext4_direct_IO_exit" desc="tracepoint, masks:ext4_direct_IO_exit"> </modifier>
        <modifier name="perf::ext4:ext4_fallocate_enter" desc="tracepoint, masks:ext4_fallocate_enter"> </modifier>
        <modifier name="perf::ext4:ext4_punch_hole" desc="tracepoint, masks:ext4_punch_hole"> </modifier>
        <modifier name="perf::ext4:ext4_zero_range" desc="tracepoint, masks:ext4_zero_range"> </modifier>
        <modifier name="perf::ext4:ext4_fallocate_exit" desc="tracepoint, masks:ext4_fallocate_exit"> </modifier>
        <modifier name="perf::ext4:ext4_unlink_enter" desc="tracepoint, masks:ext4_unlink_enter"> </modifier>
        <modifier name="perf::ext4:ext4_unlink_exit" desc="tracepoint, masks:ext4_unlink_exit"> </modifier>
        <modifier name="perf::ext4:ext4_truncate_enter" desc="tracepoint, masks:ext4_truncate_enter"> </modifier>
        <modifier name="perf::ext4:ext4_truncate_exit" desc="tracepoint, masks:ext4_truncate_exit"> </modifier>
        <modifier name="perf::ext4:ext4_ext_convert_to_initialized_enter" desc="tracepoint, masks:ext4_ext_convert_to_initialized_enter"> </modifier>
        <modifier name="perf::ext4:ext4_ext_convert_to_initialized_fastpath" desc="tracepoint, masks:ext4_ext_convert_to_initialized_fastpath"> </modifier>
        <modifier name="perf::ext4:ext4_ext_map_blocks_enter" desc="tracepoint, masks:ext4_ext_map_blocks_enter"> </modifier>
        <modifier name="perf::ext4:ext4_ind_map_blocks_enter" desc="tracepoint, masks:ext4_ind_map_blocks_enter"> </modifier>
        <modifier name="perf::ext4:ext4_ext_map_blocks_exit" desc="tracepoint, masks:ext4_ext_map_blocks_exit"> </modifier>
        <modifier name="perf::ext4:ext4_ind_map_blocks_exit" desc="tracepoint, masks:ext4_ind_map_blocks_exit"> </modifier>
        <modifier name="perf::ext4:ext4_ext_load_extent" desc="tracepoint, masks:ext4_ext_load_extent"> </modifier>
        <modifier name="perf::ext4:ext4_load_inode" desc="tracepoint, masks:ext4_load_inode"> </modifier>
        <modifier name="perf::ext4:ext4_journal_start" desc="tracepoint, masks:ext4_journal_start"> </modifier>
        <modifier name="perf::ext4:ext4_journal_start_reserved" desc="tracepoint, masks:ext4_journal_start_reserved"> </modifier>
        <modifier name="perf::ext4:ext4_trim_extent" desc="tracepoint, masks:ext4_trim_extent"> </modifier>
        <modifier name="perf::ext4:ext4_trim_all_free" desc="tracepoint, masks:ext4_trim_all_free"> </modifier>
        <modifier name="perf::ext4:ext4_ext_handle_unwritten_extents" desc="tracepoint, masks:ext4_ext_handle_unwritten_extents"> </modifier>
        <modifier name="perf::ext4:ext4_get_implied_cluster_alloc_exit" desc="tracepoint, masks:ext4_get_implied_cluster_alloc_exit"> </modifier>
        <modifier name="perf::ext4:ext4_ext_put_in_cache" desc="tracepoint, masks:ext4_ext_put_in_cache"> </modifier>
        <modifier name="perf::ext4:ext4_ext_in_cache" desc="tracepoint, masks:ext4_ext_in_cache"> </modifier>
        <modifier name="perf::ext4:ext4_find_delalloc_range" desc="tracepoint, masks:ext4_find_delalloc_range"> </modifier>
        <modifier name="perf::ext4:ext4_get_reserved_cluster_alloc" desc="tracepoint, masks:ext4_get_reserved_cluster_alloc"> </modifier>
        <modifier name="perf::ext4:ext4_ext_show_extent" desc="tracepoint, masks:ext4_ext_show_extent"> </modifier>
        <modifier name="perf::ext4:ext4_remove_blocks" desc="tracepoint, masks:ext4_remove_blocks"> </modifier>
        <modifier name="perf::ext4:ext4_ext_rm_leaf" desc="tracepoint, masks:ext4_ext_rm_leaf"> </modifier>
        <modifier name="perf::ext4:ext4_ext_rm_idx" desc="tracepoint, masks:ext4_ext_rm_idx"> </modifier>
        <modifier name="perf::ext4:ext4_ext_remove_space" desc="tracepoint, masks:ext4_ext_remove_space"> </modifier>
        <modifier name="perf::ext4:ext4_ext_remove_space_done" desc="tracepoint, masks:ext4_ext_remove_space_done"> </modifier>
        <modifier name="perf::ext4:ext4_es_insert_extent" desc="tracepoint, masks:ext4_es_insert_extent"> </modifier>
        <modifier name="perf::ext4:ext4_es_cache_extent" desc="tracepoint, masks:ext4_es_cache_extent"> </modifier>
        <modifier name="perf::ext4:ext4_es_remove_extent" desc="tracepoint, masks:ext4_es_remove_extent"> </modifier>
        <modifier name="perf::ext4:ext4_es_find_delayed_extent_range_enter" desc="tracepoint, masks:ext4_es_find_delayed_extent_range_enter"> </modifier>
        <modifier name="perf::ext4:ext4_es_find_delayed_extent_range_exit" desc="tracepoint, masks:ext4_es_find_delayed_extent_range_exit"> </modifier>
        <modifier name="perf::ext4:ext4_es_lookup_extent_enter" desc="tracepoint, masks:ext4_es_lookup_extent_enter"> </modifier>
        <modifier name="perf::ext4:ext4_es_lookup_extent_exit" desc="tracepoint, masks:ext4_es_lookup_extent_exit"> </modifier>
        <modifier name="perf::ext4:ext4_es_shrink_count" desc="tracepoint, masks:ext4_es_shrink_count"> </modifier>
        <modifier name="perf::ext4:ext4_es_shrink_scan_enter" desc="tracepoint, masks:ext4_es_shrink_scan_enter"> </modifier>
        <modifier name="perf::ext4:ext4_es_shrink_scan_exit" desc="tracepoint, masks:ext4_es_shrink_scan_exit"> </modifier>
        <modifier name="perf::ext4:ext4_collapse_range" desc="tracepoint, masks:ext4_collapse_range"> </modifier>
        <modifier name="perf::ext4:ext4_insert_range" desc="tracepoint, masks:ext4_insert_range"> </modifier>
        <modifier name="perf::ext4:ext4_es_shrink" desc="tracepoint, masks:ext4_es_shrink"> </modifier>
    </event>
    <event index="136" name="perf::filelock" desc="tracepoint">
        <modifier name="perf::filelock:locks_get_lock_context" desc="tracepoint, masks:locks_get_lock_context"> </modifier>
        <modifier name="perf::filelock:posix_lock_inode" desc="tracepoint, masks:posix_lock_inode"> </modifier>
        <modifier name="perf::filelock:fcntl_setlk" desc="tracepoint, masks:fcntl_setlk"> </modifier>
        <modifier name="perf::filelock:locks_remove_posix" desc="tracepoint, masks:locks_remove_posix"> </modifier>
        <modifier name="perf::filelock:break_lease_noblock" desc="tracepoint, masks:break_lease_noblock"> </modifier>
        <modifier name="perf::filelock:break_lease_block" desc="tracepoint, masks:break_lease_block"> </modifier>
        <modifier name="perf::filelock:break_lease_unblock" desc="tracepoint, masks:break_lease_unblock"> </modifier>
        <modifier name="perf::filelock:generic_delete_lease" desc="tracepoint, masks:generic_delete_lease"> </modifier>
        <modifier name="perf::filelock:time_out_leases" desc="tracepoint, masks:time_out_leases"> </modifier>
        <modifier name="perf::filelock:generic_add_lease" desc="tracepoint, masks:generic_add_lease"> </modifier>
    </event>
    <event index="137" name="perf::writeback" desc="tracepoint">
        <modifier name="perf::writeback:writeback_dirty_page" desc="tracepoint, masks:writeback_dirty_page"> </modifier>
        <modifier name="perf::writeback:writeback_mark_inode_dirty" desc="tracepoint, masks:writeback_mark_inode_dirty"> </modifier>
        <modifier name="perf::writeback:writeback_dirty_inode_start" desc="tracepoint, masks:writeback_dirty_inode_start"> </modifier>
        <modifier name="perf::writeback:writeback_dirty_inode" desc="tracepoint, masks:writeback_dirty_inode"> </modifier>
        <modifier name="perf::writeback:writeback_write_inode_start" desc="tracepoint, masks:writeback_write_inode_start"> </modifier>
        <modifier name="perf::writeback:writeback_write_inode" desc="tracepoint, masks:writeback_write_inode"> </modifier>
        <modifier name="perf::writeback:writeback_queue" desc="tracepoint, masks:writeback_queue"> </modifier>
        <modifier name="perf::writeback:writeback_exec" desc="tracepoint, masks:writeback_exec"> </modifier>
        <modifier name="perf::writeback:writeback_start" desc="tracepoint, masks:writeback_start"> </modifier>
        <modifier name="perf::writeback:writeback_written" desc="tracepoint, masks:writeback_written"> </modifier>
        <modifier name="perf::writeback:writeback_wait" desc="tracepoint, masks:writeback_wait"> </modifier>
        <modifier name="perf::writeback:writeback_pages_written" desc="tracepoint, masks:writeback_pages_written"> </modifier>
        <modifier name="perf::writeback:writeback_nowork" desc="tracepoint, masks:writeback_nowork"> </modifier>
        <modifier name="perf::writeback:writeback_wake_background" desc="tracepoint, masks:writeback_wake_background"> </modifier>
        <modifier name="perf::writeback:writeback_bdi_register" desc="tracepoint, masks:writeback_bdi_register"> </modifier>
        <modifier name="perf::writeback:wbc_writepage" desc="tracepoint, masks:wbc_writepage"> </modifier>
        <modifier name="perf::writeback:writeback_queue_io" desc="tracepoint, masks:writeback_queue_io"> </modifier>
        <modifier name="perf::writeback:global_dirty_state" desc="tracepoint, masks:global_dirty_state"> </modifier>
        <modifier name="perf::writeback:bdi_dirty_ratelimit" desc="tracepoint, masks:bdi_dirty_ratelimit"> </modifier>
        <modifier name="perf::writeback:balance_dirty_pages" desc="tracepoint, masks:balance_dirty_pages"> </modifier>
        <modifier name="perf::writeback:writeback_sb_inodes_requeue" desc="tracepoint, masks:writeback_sb_inodes_requeue"> </modifier>
        <modifier name="perf::writeback:writeback_congestion_wait" desc="tracepoint, masks:writeback_congestion_wait"> </modifier>
        <modifier name="perf::writeback:writeback_wait_iff_congested" desc="tracepoint, masks:writeback_wait_iff_congested"> </modifier>
        <modifier name="perf::writeback:writeback_single_inode_start" desc="tracepoint, masks:writeback_single_inode_start"> </modifier>
        <modifier name="perf::writeback:writeback_single_inode" desc="tracepoint, masks:writeback_single_inode"> </modifier>
        <modifier name="perf::writeback:writeback_lazytime" desc="tracepoint, masks:writeback_lazytime"> </modifier>
        <modifier name="perf::writeback:writeback_lazytime_iput" desc="tracepoint, masks:writeback_lazytime_iput"> </modifier>
        <modifier name="perf::writeback:writeback_dirty_inode_enqueue" desc="tracepoint, masks:writeback_dirty_inode_enqueue"> </modifier>
        <modifier name="perf::writeback:sb_mark_inode_writeback" desc="tracepoint, masks:sb_mark_inode_writeback"> </modifier>
        <modifier name="perf::writeback:sb_clear_inode_writeback" desc="tracepoint, masks:sb_clear_inode_writeback"> </modifier>
    </event>
    <event index="138" name="perf::fs" desc="tracepoint">
        <modifier name="perf::fs:do_sys_open" desc="tracepoint, masks:do_sys_open"> </modifier>
        <modifier name="perf::fs:open_exec" desc="tracepoint, masks:open_exec"> </modifier>
    </event>
    <event index="139" name="perf::cma" desc="tracepoint">
        <modifier name="perf::cma:cma_alloc" desc="tracepoint, masks:cma_alloc"> </modifier>
        <modifier name="perf::cma:cma_release" desc="tracepoint, masks:cma_release"> </modifier>
    </event>
    <event index="140" name="perf::page_isolation" desc="tracepoint">
        <modifier name="perf::page_isolation:test_pages_isolated" desc="tracepoint, masks:test_pages_isolated"> </modifier>
    </event>
    <event index="141" name="perf::huge_memory" desc="tracepoint">
        <modifier name="perf::huge_memory:mm_khugepaged_scan_pmd" desc="tracepoint, masks:mm_khugepaged_scan_pmd"> </modifier>
        <modifier name="perf::huge_memory:mm_collapse_huge_page" desc="tracepoint, masks:mm_collapse_huge_page"> </modifier>
        <modifier name="perf::huge_memory:mm_collapse_huge_page_isolate" desc="tracepoint, masks:mm_collapse_huge_page_isolate"> </modifier>
        <modifier name="perf::huge_memory:mm_collapse_huge_page_swapin" desc="tracepoint, masks:mm_collapse_huge_page_swapin"> </modifier>
    </event>
    <event index="142" name="perf::migrate" desc="tracepoint">
        <modifier name="perf::migrate:mm_migrate_pages" desc="tracepoint, masks:mm_migrate_pages"> </modifier>
        <modifier name="perf::migrate:mm_numa_migrate_ratelimit" desc="tracepoint, masks:mm_numa_migrate_ratelimit"> </modifier>
    </event>
    <event index="143" name="perf::compaction" desc="tracepoint">
        <modifier name="perf::compaction:mm_compaction_isolate_migratepages" desc="tracepoint, masks:mm_compaction_isolate_migratepages"> </modifier>
        <modifier name="perf::compaction:mm_compaction_isolate_freepages" desc="tracepoint, masks:mm_compaction_isolate_freepages"> </modifier>
        <modifier name="perf::compaction:mm_compaction_migratepages" desc="tracepoint, masks:mm_compaction_migratepages"> </modifier>
        <modifier name="perf::compaction:mm_compaction_begin" desc="tracepoint, masks:mm_compaction_begin"> </modifier>
        <modifier name="perf::compaction:mm_compaction_end" desc="tracepoint, masks:mm_compaction_end"> </modifier>
        <modifier name="perf::compaction:mm_compaction_try_to_compact_pages" desc="tracepoint, masks:mm_compaction_try_to_compact_pages"> </modifier>
        <modifier name="perf::compaction:mm_compaction_finished" desc="tracepoint, masks:mm_compaction_finished"> </modifier>
        <modifier name="perf::compaction:mm_compaction_suitable" desc="tracepoint, masks:mm_compaction_suitable"> </modifier>
        <modifier name="perf::compaction:mm_compaction_deferred" desc="tracepoint, masks:mm_compaction_deferred"> </modifier>
        <modifier name="perf::compaction:mm_compaction_defer_compaction" desc="tracepoint, masks:mm_compaction_defer_compaction"> </modifier>
        <modifier name="perf::compaction:mm_compaction_defer_reset" desc="tracepoint, masks:mm_compaction_defer_reset"> </modifier>
        <modifier name="perf::compaction:mm_compaction_kcompactd_sleep" desc="tracepoint, masks:mm_compaction_kcompactd_sleep"> </modifier>
        <modifier name="perf::compaction:mm_compaction_wakeup_kcompactd" desc="tracepoint, masks:mm_compaction_wakeup_kcompactd"> </modifier>
        <modifier name="perf::compaction:mm_compaction_kcompactd_wake" desc="tracepoint, masks:mm_compaction_kcompactd_wake"> </modifier>
    </event>
    <event index="144" name="perf::kmem" desc="tracepoint">
        <modifier name="perf::kmem:kmalloc" desc="tracepoint, masks:kmalloc"> </modifier>
        <modifier name="perf::kmem:kmem_cache_alloc" desc="tracepoint, masks:kmem_cache_alloc"> </modifier>
        <modifier name="perf::kmem:kmalloc_node" desc="tracepoint, masks:kmalloc_node"> </modifier>
        <modifier name="perf::kmem:kmem_cache_alloc_node" desc="tracepoint, masks:kmem_cache_alloc_node"> </modifier>
        <modifier name="perf::kmem:kfree" desc="tracepoint, masks:kfree"> </modifier>
        <modifier name="perf::kmem:kmem_cache_free" desc="tracepoint, masks:kmem_cache_free"> </modifier>
        <modifier name="perf::kmem:mm_page_free" desc="tracepoint, masks:mm_page_free"> </modifier>
        <modifier name="perf::kmem:mm_page_free_batched" desc="tracepoint, masks:mm_page_free_batched"> </modifier>
        <modifier name="perf::kmem:mm_page_alloc" desc="tracepoint, masks:mm_page_alloc"> </modifier>
        <modifier name="perf::kmem:mm_page_alloc_zone_locked" desc="tracepoint, masks:mm_page_alloc_zone_locked"> </modifier>
        <modifier name="perf::kmem:mm_page_pcpu_drain" desc="tracepoint, masks:mm_page_pcpu_drain"> </modifier>
        <modifier name="perf::kmem:mm_page_alloc_extfrag" desc="tracepoint, masks:mm_page_alloc_extfrag"> </modifier>
    </event>
    <event index="145" name="perf::vmscan" desc="tracepoint">
        <modifier name="perf::vmscan:mm_vmscan_kswapd_sleep" desc="tracepoint, masks:mm_vmscan_kswapd_sleep"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_kswapd_wake" desc="tracepoint, masks:mm_vmscan_kswapd_wake"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_wakeup_kswapd" desc="tracepoint, masks:mm_vmscan_wakeup_kswapd"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_direct_reclaim_begin" desc="tracepoint, masks:mm_vmscan_direct_reclaim_begin"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_memcg_reclaim_begin" desc="tracepoint, masks:mm_vmscan_memcg_reclaim_begin"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_memcg_softlimit_reclaim_begin" desc="tracepoint, masks:mm_vmscan_memcg_softlimit_reclaim_begin"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_direct_reclaim_end" desc="tracepoint, masks:mm_vmscan_direct_reclaim_end"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_memcg_reclaim_end" desc="tracepoint, masks:mm_vmscan_memcg_reclaim_end"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_memcg_softlimit_reclaim_end" desc="tracepoint, masks:mm_vmscan_memcg_softlimit_reclaim_end"> </modifier>
        <modifier name="perf::vmscan:mm_shrink_slab_start" desc="tracepoint, masks:mm_shrink_slab_start"> </modifier>
        <modifier name="perf::vmscan:mm_shrink_slab_end" desc="tracepoint, masks:mm_shrink_slab_end"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_lru_isolate" desc="tracepoint, masks:mm_vmscan_lru_isolate"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_memcg_isolate" desc="tracepoint, masks:mm_vmscan_memcg_isolate"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_writepage" desc="tracepoint, masks:mm_vmscan_writepage"> </modifier>
        <modifier name="perf::vmscan:mm_vmscan_lru_shrink_inactive" desc="tracepoint, masks:mm_vmscan_lru_shrink_inactive"> </modifier>
    </event>
    <event index="146" name="perf::pagemap" desc="tracepoint">
        <modifier name="perf::pagemap:mm_lru_insertion" desc="tracepoint, masks:mm_lru_insertion"> </modifier>
        <modifier name="perf::pagemap:mm_lru_activate" desc="tracepoint, masks:mm_lru_activate"> </modifier>
    </event>
    <event index="147" name="perf::oom" desc="tracepoint">
        <modifier name="perf::oom:oom_score_adj_update" desc="tracepoint, masks:oom_score_adj_update"> </modifier>
    </event>
    <event index="148" name="perf::filemap" desc="tracepoint">
        <modifier name="perf::filemap:mm_filemap_delete_from_page_cache" desc="tracepoint, masks:mm_filemap_delete_from_page_cache"> </modifier>
        <modifier name="perf::filemap:mm_filemap_add_to_page_cache" desc="tracepoint, masks:mm_filemap_add_to_page_cache"> </modifier>
    </event>
    <event index="149" name="perf::rpm" desc="tracepoint">
        <modifier name="perf::rpm:rpm_suspend" desc="tracepoint, masks:rpm_suspend"> </modifier>
        <modifier name="perf::rpm:rpm_resume" desc="tracepoint, masks:rpm_resume"> </modifier>
        <modifier name="perf::rpm:rpm_idle" desc="tracepoint, masks:rpm_idle"> </modifier>
        <modifier name="perf::rpm:rpm_return_int" desc="tracepoint, masks:rpm_return_int"> </modifier>
    </event>
    <event index="150" name="perf::power" desc="tracepoint">
        <modifier name="perf::power:cpu_idle" desc="tracepoint, masks:cpu_idle"> </modifier>
        <modifier name="perf::power:powernv_throttle" desc="tracepoint, masks:powernv_throttle"> </modifier>
        <modifier name="perf::power:pstate_sample" desc="tracepoint, masks:pstate_sample"> </modifier>
        <modifier name="perf::power:cpu_frequency" desc="tracepoint, masks:cpu_frequency"> </modifier>
        <modifier name="perf::power:device_pm_callback_start" desc="tracepoint, masks:device_pm_callback_start"> </modifier>
        <modifier name="perf::power:device_pm_callback_end" desc="tracepoint, masks:device_pm_callback_end"> </modifier>
        <modifier name="perf::power:suspend_resume" desc="tracepoint, masks:suspend_resume"> </modifier>
        <modifier name="perf::power:wakeup_source_activate" desc="tracepoint, masks:wakeup_source_activate"> </modifier>
        <modifier name="perf::power:wakeup_source_deactivate" desc="tracepoint, masks:wakeup_source_deactivate"> </modifier>
        <modifier name="perf::power:clock_enable" desc="tracepoint, masks:clock_enable"> </modifier>
        <modifier name="perf::power:clock_disable" desc="tracepoint, masks:clock_disable"> </modifier>
        <modifier name="perf::power:clock_set_rate" desc="tracepoint, masks:clock_set_rate"> </modifier>
        <modifier name="perf::power:power_domain_target" desc="tracepoint, masks:power_domain_target"> </modifier>
        <modifier name="perf::power:pm_qos_add_request" desc="tracepoint, masks:pm_qos_add_request"> </modifier>
        <modifier name="perf::power:pm_qos_update_request" desc="tracepoint, masks:pm_qos_update_request"> </modifier>
        <modifier name="perf::power:pm_qos_remove_request" desc="tracepoint, masks:pm_qos_remove_request"> </modifier>
        <modifier name="perf::power:pm_qos_update_request_timeout" desc="tracepoint, masks:pm_qos_update_request_timeout"> </modifier>
        <modifier name="perf::power:pm_qos_update_target" desc="tracepoint, masks:pm_qos_update_target"> </modifier>
        <modifier name="perf::power:pm_qos_update_flags" desc="tracepoint, masks:pm_qos_update_flags"> </modifier>
        <modifier name="perf::power:dev_pm_qos_add_request" desc="tracepoint, masks:dev_pm_qos_add_request"> </modifier>
        <modifier name="perf::power:dev_pm_qos_update_request" desc="tracepoint, masks:dev_pm_qos_update_request"> </modifier>
        <modifier name="perf::power:dev_pm_qos_remove_request" desc="tracepoint, masks:dev_pm_qos_remove_request"> </modifier>
    </event>
    <event index="151" name="perf::ftrace" desc="tracepoint">
        <modifier name="perf::ftrace:function" desc="tracepoint, masks:function"> </modifier>
    </event>
    <event index="152" name="perf::cgroup" desc="tracepoint">
        <modifier name="perf::cgroup:cgroup_setup_root" desc="tracepoint, masks:cgroup_setup_root"> </modifier>
        <modifier name="perf::cgroup:cgroup_destroy_root" desc="tracepoint, masks:cgroup_destroy_root"> </modifier>
        <modifier name="perf::cgroup:cgroup_remount" desc="tracepoint, masks:cgroup_remount"> </modifier>
        <modifier name="perf::cgroup:cgroup_mkdir" desc="tracepoint, masks:cgroup_mkdir"> </modifier>
        <modifier name="perf::cgroup:cgroup_rmdir" desc="tracepoint, masks:cgroup_rmdir"> </modifier>
        <modifier name="perf::cgroup:cgroup_release" desc="tracepoint, masks:cgroup_release"> </modifier>
        <modifier name="perf::cgroup:cgroup_rename" desc="tracepoint, masks:cgroup_rename"> </modifier>
        <modifier name="perf::cgroup:cgroup_attach_task" desc="tracepoint, masks:cgroup_attach_task"> </modifier>
        <modifier name="perf::cgroup:cgroup_transfer_tasks" desc="tracepoint, masks:cgroup_transfer_tasks"> </modifier>
    </event>
    <event index="153" name="perf::module" desc="tracepoint">
        <modifier name="perf::module:module_load" desc="tracepoint, masks:module_load"> </modifier>
        <modifier name="perf::module:module_free" desc="tracepoint, masks:module_free"> </modifier>
        <modifier name="perf::module:module_get" desc="tracepoint, masks:module_get"> </modifier>
        <modifier name="perf::module:module_put" desc="tracepoint, masks:module_put"> </modifier>
        <modifier name="perf::module:module_request" desc="tracepoint, masks:module_request"> </modifier>
    </event>
    <event index="154" name="perf::alarmtimer" desc="tracepoint">
        <modifier name="perf::alarmtimer:alarmtimer_suspend" desc="tracepoint, masks:alarmtimer_suspend"> </modifier>
        <modifier name="perf::alarmtimer:alarmtimer_fired" desc="tracepoint, masks:alarmtimer_fired"> </modifier>
        <modifier name="perf::alarmtimer:alarmtimer_start" desc="tracepoint, masks:alarmtimer_start"> </modifier>
        <modifier name="perf::alarmtimer:alarmtimer_cancel" desc="tracepoint, masks:alarmtimer_cancel"> </modifier>
    </event>
    <event index="155" name="perf::timer" desc="tracepoint">
        <modifier name="perf::timer:timer_init" desc="tracepoint, masks:timer_init"> </modifier>
        <modifier name="perf::timer:timer_start" desc="tracepoint, masks:timer_start"> </modifier>
        <modifier name="perf::timer:timer_expire_entry" desc="tracepoint, masks:timer_expire_entry"> </modifier>
        <modifier name="perf::timer:timer_expire_exit" desc="tracepoint, masks:timer_expire_exit"> </modifier>
        <modifier name="perf::timer:timer_cancel" desc="tracepoint, masks:timer_cancel"> </modifier>
        <modifier name="perf::timer:hrtimer_init" desc="tracepoint, masks:hrtimer_init"> </modifier>
        <modifier name="perf::timer:hrtimer_start" desc="tracepoint, masks:hrtimer_start"> </modifier>
        <modifier name="perf::timer:hrtimer_expire_entry" desc="tracepoint, masks:hrtimer_expire_entry"> </modifier>
        <modifier name="perf::timer:hrtimer_expire_exit" desc="tracepoint, masks:hrtimer_expire_exit"> </modifier>
        <modifier name="perf::timer:hrtimer_cancel" desc="tracepoint, masks:hrtimer_cancel"> </modifier>
        <modifier name="perf::timer:itimer_state" desc="tracepoint, masks:itimer_state"> </modifier>
        <modifier name="perf::timer:itimer_expire" desc="tracepoint, masks:itimer_expire"> </modifier>
        <modifier name="perf::timer:tick_stop" desc="tracepoint, masks:tick_stop"> </modifier>
    </event>
    <event index="156" name="perf::rcu" desc="tracepoint">
        <modifier name="perf::rcu:rcu_utilization" desc="tracepoint, masks:rcu_utilization"> </modifier>
    </event>
    <event index="157" name="perf::printk" desc="tracepoint">
        <modifier name="perf::printk:console" desc="tracepoint, masks:console"> </modifier>
    </event>
    <event index="158" name="perf::sched" desc="tracepoint">
        <modifier name="perf::sched:sched_kthread_stop" desc="tracepoint, masks:sched_kthread_stop"> </modifier>
        <modifier name="perf::sched:sched_kthread_stop_ret" desc="tracepoint, masks:sched_kthread_stop_ret"> </modifier>
        <modifier name="perf::sched:sched_waking" desc="tracepoint, masks:sched_waking"> </modifier>
        <modifier name="perf::sched:sched_wakeup" desc="tracepoint, masks:sched_wakeup"> </modifier>
        <modifier name="perf::sched:sched_wakeup_new" desc="tracepoint, masks:sched_wakeup_new"> </modifier>
        <modifier name="perf::sched:sched_switch" desc="tracepoint, masks:sched_switch"> </modifier>
        <modifier name="perf::sched:sched_migrate_task" desc="tracepoint, masks:sched_migrate_task"> </modifier>
        <modifier name="perf::sched:sched_process_free" desc="tracepoint, masks:sched_process_free"> </modifier>
        <modifier name="perf::sched:sched_process_exit" desc="tracepoint, masks:sched_process_exit"> </modifier>
        <modifier name="perf::sched:sched_wait_task" desc="tracepoint, masks:sched_wait_task"> </modifier>
        <modifier name="perf::sched:sched_process_wait" desc="tracepoint, masks:sched_process_wait"> </modifier>
        <modifier name="perf::sched:sched_process_fork" desc="tracepoint, masks:sched_process_fork"> </modifier>
        <modifier name="perf::sched:sched_process_exec" desc="tracepoint, masks:sched_process_exec"> </modifier>
        <modifier name="perf::sched:sched_stat_wait" desc="tracepoint, masks:sched_stat_wait"> </modifier>
        <modifier name="perf::sched:sched_stat_sleep" desc="tracepoint, masks:sched_stat_sleep"> </modifier>
        <modifier name="perf::sched:sched_stat_iowait" desc="tracepoint, masks:sched_stat_iowait"> </modifier>
        <modifier name="perf::sched:sched_stat_blocked" desc="tracepoint, masks:sched_stat_blocked"> </modifier>
        <modifier name="perf::sched:sched_stat_runtime" desc="tracepoint, masks:sched_stat_runtime"> </modifier>
        <modifier name="perf::sched:sched_pi_setprio" desc="tracepoint, masks:sched_pi_setprio"> </modifier>
        <modifier name="perf::sched:sched_process_hang" desc="tracepoint, masks:sched_process_hang"> </modifier>
        <modifier name="perf::sched:sched_move_numa" desc="tracepoint, masks:sched_move_numa"> </modifier>
        <modifier name="perf::sched:sched_stick_numa" desc="tracepoint, masks:sched_stick_numa"> </modifier>
        <modifier name="perf::sched:sched_swap_numa" desc="tracepoint, masks:sched_swap_numa"> </modifier>
        <modifier name="perf::sched:sched_wake_idle_without_ipi" desc="tracepoint, masks:sched_wake_idle_without_ipi"> </modifier>
    </event>
    <event index="159" name="perf::workqueue" desc="tracepoint">
        <modifier name="perf::workqueue:workqueue_queue_work" desc="tracepoint, masks:workqueue_queue_work"> </modifier>
        <modifier name="perf::workqueue:workqueue_activate_work" desc="tracepoint, masks:workqueue_activate_work"> </modifier>
        <modifier name="perf::workqueue:workqueue_execute_start" desc="tracepoint, masks:workqueue_execute_start"> </modifier>
        <modifier name="perf::workqueue:workqueue_execute_end" desc="tracepoint, masks:workqueue_execute_end"> </modifier>
    </event>
    <event index="160" name="perf::signal" desc="tracepoint">
        <modifier name="perf::signal:signal_generate" desc="tracepoint, masks:signal_generate"> </modifier>
        <modifier name="perf::signal:signal_deliver" desc="tracepoint, masks:signal_deliver"> </modifier>
    </event>
    <event index="161" name="perf::irq" desc="tracepoint">
        <modifier name="perf::irq:irq_handler_entry" desc="tracepoint, masks:irq_handler_entry"> </modifier>
        <modifier name="perf::irq:irq_handler_exit" desc="tracepoint, masks:irq_handler_exit"> </modifier>
        <modifier name="perf::irq:softirq_entry" desc="tracepoint, masks:softirq_entry"> </modifier>
        <modifier name="perf::irq:softirq_exit" desc="tracepoint, masks:softirq_exit"> </modifier>
        <modifier name="perf::irq:softirq_raise" desc="tracepoint, masks:softirq_raise"> </modifier>
    </event>
    <event index="162" name="perf::cpuhp" desc="tracepoint">
        <modifier name="perf::cpuhp:cpuhp_enter" desc="tracepoint, masks:cpuhp_enter"> </modifier>
        <modifier name="perf::cpuhp:cpuhp_multi_enter" desc="tracepoint, masks:cpuhp_multi_enter"> </modifier>
        <modifier name="perf::cpuhp:cpuhp_exit" desc="tracepoint, masks:cpuhp_exit"> </modifier>
    </event>
    <event index="163" name="perf::task" desc="tracepoint">
        <modifier name="perf::task:task_newtask" desc="tracepoint, masks:task_newtask"> </modifier>
        <modifier name="perf::task:task_rename" desc="tracepoint, masks:task_rename"> </modifier>
    </event>
    <event index="164" name="perf::mpx" desc="tracepoint">
        <modifier name="perf::mpx:mpx_bounds_register_exception" desc="tracepoint, masks:mpx_bounds_register_exception"> </modifier>
        <modifier name="perf::mpx:bounds_exception_mpx" desc="tracepoint, masks:bounds_exception_mpx"> </modifier>
        <modifier name="perf::mpx:mpx_unmap_zap" desc="tracepoint, masks:mpx_unmap_zap"> </modifier>
        <modifier name="perf::mpx:mpx_unmap_search" desc="tracepoint, masks:mpx_unmap_search"> </modifier>
        <modifier name="perf::mpx:mpx_new_bounds_table" desc="tracepoint, masks:mpx_new_bounds_table"> </modifier>
    </event>
    <event index="165" name="perf::exceptions" desc="tracepoint">
        <modifier name="perf::exceptions:page_fault_user" desc="tracepoint, masks:page_fault_user"> </modifier>
        <modifier name="perf::exceptions:page_fault_kernel" desc="tracepoint, masks:page_fault_kernel"> </modifier>
    </event>
    <event index="166" name="perf::tlb" desc="tracepoint">
        <modifier name="perf::tlb:tlb_flush" desc="tracepoint, masks:tlb_flush"> </modifier>
    </event>
    <event index="167" name="perf::mce" desc="tracepoint">
        <modifier name="perf::mce:mce_record" desc="tracepoint, masks:mce_record"> </modifier>
    </event>
    <event index="168" name="perf::x86_fpu" desc="tracepoint">
        <modifier name="perf::x86_fpu:x86_fpu_state" desc="tracepoint, masks:x86_fpu_state"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_before_save" desc="tracepoint, masks:x86_fpu_before_save"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_after_save" desc="tracepoint, masks:x86_fpu_after_save"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_before_restore" desc="tracepoint, masks:x86_fpu_before_restore"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_after_restore" desc="tracepoint, masks:x86_fpu_after_restore"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_regs_activated" desc="tracepoint, masks:x86_fpu_regs_activated"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_regs_deactivated" desc="tracepoint, masks:x86_fpu_regs_deactivated"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_activate_state" desc="tracepoint, masks:x86_fpu_activate_state"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_deactivate_state" desc="tracepoint, masks:x86_fpu_deactivate_state"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_init_state" desc="tracepoint, masks:x86_fpu_init_state"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_dropped" desc="tracepoint, masks:x86_fpu_dropped"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_copy_src" desc="tracepoint, masks:x86_fpu_copy_src"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_copy_dst" desc="tracepoint, masks:x86_fpu_copy_dst"> </modifier>
        <modifier name="perf::x86_fpu:x86_fpu_xstate_check_failed" desc="tracepoint, masks:x86_fpu_xstate_check_failed"> </modifier>
    </event>
    <event index="169" name="perf::syscalls" desc="tracepoint">
        <modifier name="perf::syscalls:sys_enter_socket" desc="tracepoint, masks:sys_enter_socket"> </modifier>
        <modifier name="perf::syscalls:sys_exit_socket" desc="tracepoint, masks:sys_exit_socket"> </modifier>
        <modifier name="perf::syscalls:sys_enter_socketpair" desc="tracepoint, masks:sys_enter_socketpair"> </modifier>
        <modifier name="perf::syscalls:sys_exit_socketpair" desc="tracepoint, masks:sys_exit_socketpair"> </modifier>
        <modifier name="perf::syscalls:sys_enter_bind" desc="tracepoint, masks:sys_enter_bind"> </modifier>
        <modifier name="perf::syscalls:sys_exit_bind" desc="tracepoint, masks:sys_exit_bind"> </modifier>
        <modifier name="perf::syscalls:sys_enter_listen" desc="tracepoint, masks:sys_enter_listen"> </modifier>
        <modifier name="perf::syscalls:sys_exit_listen" desc="tracepoint, masks:sys_exit_listen"> </modifier>
        <modifier name="perf::syscalls:sys_enter_accept4" desc="tracepoint, masks:sys_enter_accept4"> </modifier>
        <modifier name="perf::syscalls:sys_exit_accept4" desc="tracepoint, masks:sys_exit_accept4"> </modifier>
        <modifier name="perf::syscalls:sys_enter_accept" desc="tracepoint, masks:sys_enter_accept"> </modifier>
        <modifier name="perf::syscalls:sys_exit_accept" desc="tracepoint, masks:sys_exit_accept"> </modifier>
        <modifier name="perf::syscalls:sys_enter_connect" desc="tracepoint, masks:sys_enter_connect"> </modifier>
        <modifier name="perf::syscalls:sys_exit_connect" desc="tracepoint, masks:sys_exit_connect"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getsockname" desc="tracepoint, masks:sys_enter_getsockname"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getsockname" desc="tracepoint, masks:sys_exit_getsockname"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getpeername" desc="tracepoint, masks:sys_enter_getpeername"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getpeername" desc="tracepoint, masks:sys_exit_getpeername"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sendto" desc="tracepoint, masks:sys_enter_sendto"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sendto" desc="tracepoint, masks:sys_exit_sendto"> </modifier>
        <modifier name="perf::syscalls:sys_enter_recvfrom" desc="tracepoint, masks:sys_enter_recvfrom"> </modifier>
        <modifier name="perf::syscalls:sys_exit_recvfrom" desc="tracepoint, masks:sys_exit_recvfrom"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setsockopt" desc="tracepoint, masks:sys_enter_setsockopt"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setsockopt" desc="tracepoint, masks:sys_exit_setsockopt"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getsockopt" desc="tracepoint, masks:sys_enter_getsockopt"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getsockopt" desc="tracepoint, masks:sys_exit_getsockopt"> </modifier>
        <modifier name="perf::syscalls:sys_enter_shutdown" desc="tracepoint, masks:sys_enter_shutdown"> </modifier>
        <modifier name="perf::syscalls:sys_exit_shutdown" desc="tracepoint, masks:sys_exit_shutdown"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sendmsg" desc="tracepoint, masks:sys_enter_sendmsg"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sendmsg" desc="tracepoint, masks:sys_exit_sendmsg"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sendmmsg" desc="tracepoint, masks:sys_enter_sendmmsg"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sendmmsg" desc="tracepoint, masks:sys_exit_sendmmsg"> </modifier>
        <modifier name="perf::syscalls:sys_enter_recvmsg" desc="tracepoint, masks:sys_enter_recvmsg"> </modifier>
        <modifier name="perf::syscalls:sys_exit_recvmsg" desc="tracepoint, masks:sys_exit_recvmsg"> </modifier>
        <modifier name="perf::syscalls:sys_enter_recvmmsg" desc="tracepoint, masks:sys_enter_recvmmsg"> </modifier>
        <modifier name="perf::syscalls:sys_exit_recvmmsg" desc="tracepoint, masks:sys_exit_recvmmsg"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getrandom" desc="tracepoint, masks:sys_enter_getrandom"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getrandom" desc="tracepoint, masks:sys_exit_getrandom"> </modifier>
        <modifier name="perf::syscalls:sys_enter_ioprio_set" desc="tracepoint, masks:sys_enter_ioprio_set"> </modifier>
        <modifier name="perf::syscalls:sys_exit_ioprio_set" desc="tracepoint, masks:sys_exit_ioprio_set"> </modifier>
        <modifier name="perf::syscalls:sys_enter_ioprio_get" desc="tracepoint, masks:sys_enter_ioprio_get"> </modifier>
        <modifier name="perf::syscalls:sys_exit_ioprio_get" desc="tracepoint, masks:sys_exit_ioprio_get"> </modifier>
        <modifier name="perf::syscalls:sys_enter_add_key" desc="tracepoint, masks:sys_enter_add_key"> </modifier>
        <modifier name="perf::syscalls:sys_exit_add_key" desc="tracepoint, masks:sys_exit_add_key"> </modifier>
        <modifier name="perf::syscalls:sys_enter_request_key" desc="tracepoint, masks:sys_enter_request_key"> </modifier>
        <modifier name="perf::syscalls:sys_exit_request_key" desc="tracepoint, masks:sys_exit_request_key"> </modifier>
        <modifier name="perf::syscalls:sys_enter_keyctl" desc="tracepoint, masks:sys_enter_keyctl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_keyctl" desc="tracepoint, masks:sys_exit_keyctl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mq_open" desc="tracepoint, masks:sys_enter_mq_open"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mq_open" desc="tracepoint, masks:sys_exit_mq_open"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mq_unlink" desc="tracepoint, masks:sys_enter_mq_unlink"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mq_unlink" desc="tracepoint, masks:sys_exit_mq_unlink"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mq_timedsend" desc="tracepoint, masks:sys_enter_mq_timedsend"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mq_timedsend" desc="tracepoint, masks:sys_exit_mq_timedsend"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mq_timedreceive" desc="tracepoint, masks:sys_enter_mq_timedreceive"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mq_timedreceive" desc="tracepoint, masks:sys_exit_mq_timedreceive"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mq_notify" desc="tracepoint, masks:sys_enter_mq_notify"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mq_notify" desc="tracepoint, masks:sys_exit_mq_notify"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mq_getsetattr" desc="tracepoint, masks:sys_enter_mq_getsetattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mq_getsetattr" desc="tracepoint, masks:sys_exit_mq_getsetattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_shmget" desc="tracepoint, masks:sys_enter_shmget"> </modifier>
        <modifier name="perf::syscalls:sys_exit_shmget" desc="tracepoint, masks:sys_exit_shmget"> </modifier>
        <modifier name="perf::syscalls:sys_enter_shmctl" desc="tracepoint, masks:sys_enter_shmctl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_shmctl" desc="tracepoint, masks:sys_exit_shmctl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_shmat" desc="tracepoint, masks:sys_enter_shmat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_shmat" desc="tracepoint, masks:sys_exit_shmat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_shmdt" desc="tracepoint, masks:sys_enter_shmdt"> </modifier>
        <modifier name="perf::syscalls:sys_exit_shmdt" desc="tracepoint, masks:sys_exit_shmdt"> </modifier>
        <modifier name="perf::syscalls:sys_enter_semget" desc="tracepoint, masks:sys_enter_semget"> </modifier>
        <modifier name="perf::syscalls:sys_exit_semget" desc="tracepoint, masks:sys_exit_semget"> </modifier>
        <modifier name="perf::syscalls:sys_enter_semctl" desc="tracepoint, masks:sys_enter_semctl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_semctl" desc="tracepoint, masks:sys_exit_semctl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_semtimedop" desc="tracepoint, masks:sys_enter_semtimedop"> </modifier>
        <modifier name="perf::syscalls:sys_exit_semtimedop" desc="tracepoint, masks:sys_exit_semtimedop"> </modifier>
        <modifier name="perf::syscalls:sys_enter_semop" desc="tracepoint, masks:sys_enter_semop"> </modifier>
        <modifier name="perf::syscalls:sys_exit_semop" desc="tracepoint, masks:sys_exit_semop"> </modifier>
        <modifier name="perf::syscalls:sys_enter_msgget" desc="tracepoint, masks:sys_enter_msgget"> </modifier>
        <modifier name="perf::syscalls:sys_exit_msgget" desc="tracepoint, masks:sys_exit_msgget"> </modifier>
        <modifier name="perf::syscalls:sys_enter_msgctl" desc="tracepoint, masks:sys_enter_msgctl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_msgctl" desc="tracepoint, masks:sys_exit_msgctl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_msgsnd" desc="tracepoint, masks:sys_enter_msgsnd"> </modifier>
        <modifier name="perf::syscalls:sys_exit_msgsnd" desc="tracepoint, masks:sys_exit_msgsnd"> </modifier>
        <modifier name="perf::syscalls:sys_enter_msgrcv" desc="tracepoint, masks:sys_enter_msgrcv"> </modifier>
        <modifier name="perf::syscalls:sys_exit_msgrcv" desc="tracepoint, masks:sys_exit_msgrcv"> </modifier>
        <modifier name="perf::syscalls:sys_enter_lookup_dcookie" desc="tracepoint, masks:sys_enter_lookup_dcookie"> </modifier>
        <modifier name="perf::syscalls:sys_exit_lookup_dcookie" desc="tracepoint, masks:sys_exit_lookup_dcookie"> </modifier>
        <modifier name="perf::syscalls:sys_enter_quotactl" desc="tracepoint, masks:sys_enter_quotactl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_quotactl" desc="tracepoint, masks:sys_exit_quotactl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_name_to_handle_at" desc="tracepoint, masks:sys_enter_name_to_handle_at"> </modifier>
        <modifier name="perf::syscalls:sys_exit_name_to_handle_at" desc="tracepoint, masks:sys_exit_name_to_handle_at"> </modifier>
        <modifier name="perf::syscalls:sys_enter_open_by_handle_at" desc="tracepoint, masks:sys_enter_open_by_handle_at"> </modifier>
        <modifier name="perf::syscalls:sys_exit_open_by_handle_at" desc="tracepoint, masks:sys_exit_open_by_handle_at"> </modifier>
        <modifier name="perf::syscalls:sys_enter_flock" desc="tracepoint, masks:sys_enter_flock"> </modifier>
        <modifier name="perf::syscalls:sys_exit_flock" desc="tracepoint, masks:sys_exit_flock"> </modifier>
        <modifier name="perf::syscalls:sys_enter_io_setup" desc="tracepoint, masks:sys_enter_io_setup"> </modifier>
        <modifier name="perf::syscalls:sys_exit_io_setup" desc="tracepoint, masks:sys_exit_io_setup"> </modifier>
        <modifier name="perf::syscalls:sys_enter_io_destroy" desc="tracepoint, masks:sys_enter_io_destroy"> </modifier>
        <modifier name="perf::syscalls:sys_exit_io_destroy" desc="tracepoint, masks:sys_exit_io_destroy"> </modifier>
        <modifier name="perf::syscalls:sys_enter_io_submit" desc="tracepoint, masks:sys_enter_io_submit"> </modifier>
        <modifier name="perf::syscalls:sys_exit_io_submit" desc="tracepoint, masks:sys_exit_io_submit"> </modifier>
        <modifier name="perf::syscalls:sys_enter_io_cancel" desc="tracepoint, masks:sys_enter_io_cancel"> </modifier>
        <modifier name="perf::syscalls:sys_exit_io_cancel" desc="tracepoint, masks:sys_exit_io_cancel"> </modifier>
        <modifier name="perf::syscalls:sys_enter_io_getevents" desc="tracepoint, masks:sys_enter_io_getevents"> </modifier>
        <modifier name="perf::syscalls:sys_exit_io_getevents" desc="tracepoint, masks:sys_exit_io_getevents"> </modifier>
        <modifier name="perf::syscalls:sys_enter_userfaultfd" desc="tracepoint, masks:sys_enter_userfaultfd"> </modifier>
        <modifier name="perf::syscalls:sys_exit_userfaultfd" desc="tracepoint, masks:sys_exit_userfaultfd"> </modifier>
        <modifier name="perf::syscalls:sys_enter_eventfd2" desc="tracepoint, masks:sys_enter_eventfd2"> </modifier>
        <modifier name="perf::syscalls:sys_exit_eventfd2" desc="tracepoint, masks:sys_exit_eventfd2"> </modifier>
        <modifier name="perf::syscalls:sys_enter_eventfd" desc="tracepoint, masks:sys_enter_eventfd"> </modifier>
        <modifier name="perf::syscalls:sys_exit_eventfd" desc="tracepoint, masks:sys_exit_eventfd"> </modifier>
        <modifier name="perf::syscalls:sys_enter_timerfd_create" desc="tracepoint, masks:sys_enter_timerfd_create"> </modifier>
        <modifier name="perf::syscalls:sys_exit_timerfd_create" desc="tracepoint, masks:sys_exit_timerfd_create"> </modifier>
        <modifier name="perf::syscalls:sys_enter_timerfd_settime" desc="tracepoint, masks:sys_enter_timerfd_settime"> </modifier>
        <modifier name="perf::syscalls:sys_exit_timerfd_settime" desc="tracepoint, masks:sys_exit_timerfd_settime"> </modifier>
        <modifier name="perf::syscalls:sys_enter_timerfd_gettime" desc="tracepoint, masks:sys_enter_timerfd_gettime"> </modifier>
        <modifier name="perf::syscalls:sys_exit_timerfd_gettime" desc="tracepoint, masks:sys_exit_timerfd_gettime"> </modifier>
        <modifier name="perf::syscalls:sys_enter_signalfd4" desc="tracepoint, masks:sys_enter_signalfd4"> </modifier>
        <modifier name="perf::syscalls:sys_exit_signalfd4" desc="tracepoint, masks:sys_exit_signalfd4"> </modifier>
        <modifier name="perf::syscalls:sys_enter_signalfd" desc="tracepoint, masks:sys_enter_signalfd"> </modifier>
        <modifier name="perf::syscalls:sys_exit_signalfd" desc="tracepoint, masks:sys_exit_signalfd"> </modifier>
        <modifier name="perf::syscalls:sys_enter_epoll_create1" desc="tracepoint, masks:sys_enter_epoll_create1"> </modifier>
        <modifier name="perf::syscalls:sys_exit_epoll_create1" desc="tracepoint, masks:sys_exit_epoll_create1"> </modifier>
        <modifier name="perf::syscalls:sys_enter_epoll_create" desc="tracepoint, masks:sys_enter_epoll_create"> </modifier>
        <modifier name="perf::syscalls:sys_exit_epoll_create" desc="tracepoint, masks:sys_exit_epoll_create"> </modifier>
        <modifier name="perf::syscalls:sys_enter_epoll_ctl" desc="tracepoint, masks:sys_enter_epoll_ctl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_epoll_ctl" desc="tracepoint, masks:sys_exit_epoll_ctl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_epoll_wait" desc="tracepoint, masks:sys_enter_epoll_wait"> </modifier>
        <modifier name="perf::syscalls:sys_exit_epoll_wait" desc="tracepoint, masks:sys_exit_epoll_wait"> </modifier>
        <modifier name="perf::syscalls:sys_enter_epoll_pwait" desc="tracepoint, masks:sys_enter_epoll_pwait"> </modifier>
        <modifier name="perf::syscalls:sys_exit_epoll_pwait" desc="tracepoint, masks:sys_exit_epoll_pwait"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fanotify_init" desc="tracepoint, masks:sys_enter_fanotify_init"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fanotify_init" desc="tracepoint, masks:sys_exit_fanotify_init"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fanotify_mark" desc="tracepoint, masks:sys_enter_fanotify_mark"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fanotify_mark" desc="tracepoint, masks:sys_exit_fanotify_mark"> </modifier>
        <modifier name="perf::syscalls:sys_enter_inotify_init1" desc="tracepoint, masks:sys_enter_inotify_init1"> </modifier>
        <modifier name="perf::syscalls:sys_exit_inotify_init1" desc="tracepoint, masks:sys_exit_inotify_init1"> </modifier>
        <modifier name="perf::syscalls:sys_enter_inotify_init" desc="tracepoint, masks:sys_enter_inotify_init"> </modifier>
        <modifier name="perf::syscalls:sys_exit_inotify_init" desc="tracepoint, masks:sys_exit_inotify_init"> </modifier>
        <modifier name="perf::syscalls:sys_enter_inotify_add_watch" desc="tracepoint, masks:sys_enter_inotify_add_watch"> </modifier>
        <modifier name="perf::syscalls:sys_exit_inotify_add_watch" desc="tracepoint, masks:sys_exit_inotify_add_watch"> </modifier>
        <modifier name="perf::syscalls:sys_enter_inotify_rm_watch" desc="tracepoint, masks:sys_enter_inotify_rm_watch"> </modifier>
        <modifier name="perf::syscalls:sys_exit_inotify_rm_watch" desc="tracepoint, masks:sys_exit_inotify_rm_watch"> </modifier>
        <modifier name="perf::syscalls:sys_enter_statfs" desc="tracepoint, masks:sys_enter_statfs"> </modifier>
        <modifier name="perf::syscalls:sys_exit_statfs" desc="tracepoint, masks:sys_exit_statfs"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fstatfs" desc="tracepoint, masks:sys_enter_fstatfs"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fstatfs" desc="tracepoint, masks:sys_exit_fstatfs"> </modifier>
        <modifier name="perf::syscalls:sys_enter_ustat" desc="tracepoint, masks:sys_enter_ustat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_ustat" desc="tracepoint, masks:sys_exit_ustat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_utime" desc="tracepoint, masks:sys_enter_utime"> </modifier>
        <modifier name="perf::syscalls:sys_exit_utime" desc="tracepoint, masks:sys_exit_utime"> </modifier>
        <modifier name="perf::syscalls:sys_enter_utimensat" desc="tracepoint, masks:sys_enter_utimensat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_utimensat" desc="tracepoint, masks:sys_exit_utimensat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_futimesat" desc="tracepoint, masks:sys_enter_futimesat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_futimesat" desc="tracepoint, masks:sys_exit_futimesat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_utimes" desc="tracepoint, masks:sys_enter_utimes"> </modifier>
        <modifier name="perf::syscalls:sys_exit_utimes" desc="tracepoint, masks:sys_exit_utimes"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sync" desc="tracepoint, masks:sys_enter_sync"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sync" desc="tracepoint, masks:sys_exit_sync"> </modifier>
        <modifier name="perf::syscalls:sys_enter_syncfs" desc="tracepoint, masks:sys_enter_syncfs"> </modifier>
        <modifier name="perf::syscalls:sys_exit_syncfs" desc="tracepoint, masks:sys_exit_syncfs"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fsync" desc="tracepoint, masks:sys_enter_fsync"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fsync" desc="tracepoint, masks:sys_exit_fsync"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fdatasync" desc="tracepoint, masks:sys_enter_fdatasync"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fdatasync" desc="tracepoint, masks:sys_exit_fdatasync"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sync_file_range" desc="tracepoint, masks:sys_enter_sync_file_range"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sync_file_range" desc="tracepoint, masks:sys_exit_sync_file_range"> </modifier>
        <modifier name="perf::syscalls:sys_enter_vmsplice" desc="tracepoint, masks:sys_enter_vmsplice"> </modifier>
        <modifier name="perf::syscalls:sys_exit_vmsplice" desc="tracepoint, masks:sys_exit_vmsplice"> </modifier>
        <modifier name="perf::syscalls:sys_enter_splice" desc="tracepoint, masks:sys_enter_splice"> </modifier>
        <modifier name="perf::syscalls:sys_exit_splice" desc="tracepoint, masks:sys_exit_splice"> </modifier>
        <modifier name="perf::syscalls:sys_enter_tee" desc="tracepoint, masks:sys_enter_tee"> </modifier>
        <modifier name="perf::syscalls:sys_exit_tee" desc="tracepoint, masks:sys_exit_tee"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setxattr" desc="tracepoint, masks:sys_enter_setxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setxattr" desc="tracepoint, masks:sys_exit_setxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_lsetxattr" desc="tracepoint, masks:sys_enter_lsetxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_lsetxattr" desc="tracepoint, masks:sys_exit_lsetxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fsetxattr" desc="tracepoint, masks:sys_enter_fsetxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fsetxattr" desc="tracepoint, masks:sys_exit_fsetxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getxattr" desc="tracepoint, masks:sys_enter_getxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getxattr" desc="tracepoint, masks:sys_exit_getxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_lgetxattr" desc="tracepoint, masks:sys_enter_lgetxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_lgetxattr" desc="tracepoint, masks:sys_exit_lgetxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fgetxattr" desc="tracepoint, masks:sys_enter_fgetxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fgetxattr" desc="tracepoint, masks:sys_exit_fgetxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_listxattr" desc="tracepoint, masks:sys_enter_listxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_listxattr" desc="tracepoint, masks:sys_exit_listxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_llistxattr" desc="tracepoint, masks:sys_enter_llistxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_llistxattr" desc="tracepoint, masks:sys_exit_llistxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_flistxattr" desc="tracepoint, masks:sys_enter_flistxattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_flistxattr" desc="tracepoint, masks:sys_exit_flistxattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_removexattr" desc="tracepoint, masks:sys_enter_removexattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_removexattr" desc="tracepoint, masks:sys_exit_removexattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_lremovexattr" desc="tracepoint, masks:sys_enter_lremovexattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_lremovexattr" desc="tracepoint, masks:sys_exit_lremovexattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fremovexattr" desc="tracepoint, masks:sys_enter_fremovexattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fremovexattr" desc="tracepoint, masks:sys_exit_fremovexattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_umount" desc="tracepoint, masks:sys_enter_umount"> </modifier>
        <modifier name="perf::syscalls:sys_exit_umount" desc="tracepoint, masks:sys_exit_umount"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mount" desc="tracepoint, masks:sys_enter_mount"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mount" desc="tracepoint, masks:sys_exit_mount"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pivot_root" desc="tracepoint, masks:sys_enter_pivot_root"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pivot_root" desc="tracepoint, masks:sys_exit_pivot_root"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sysfs" desc="tracepoint, masks:sys_enter_sysfs"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sysfs" desc="tracepoint, masks:sys_exit_sysfs"> </modifier>
        <modifier name="perf::syscalls:sys_enter_dup3" desc="tracepoint, masks:sys_enter_dup3"> </modifier>
        <modifier name="perf::syscalls:sys_exit_dup3" desc="tracepoint, masks:sys_exit_dup3"> </modifier>
        <modifier name="perf::syscalls:sys_enter_dup2" desc="tracepoint, masks:sys_enter_dup2"> </modifier>
        <modifier name="perf::syscalls:sys_exit_dup2" desc="tracepoint, masks:sys_exit_dup2"> </modifier>
        <modifier name="perf::syscalls:sys_enter_dup" desc="tracepoint, masks:sys_enter_dup"> </modifier>
        <modifier name="perf::syscalls:sys_exit_dup" desc="tracepoint, masks:sys_exit_dup"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getcwd" desc="tracepoint, masks:sys_enter_getcwd"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getcwd" desc="tracepoint, masks:sys_exit_getcwd"> </modifier>
        <modifier name="perf::syscalls:sys_enter_select" desc="tracepoint, masks:sys_enter_select"> </modifier>
        <modifier name="perf::syscalls:sys_exit_select" desc="tracepoint, masks:sys_exit_select"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pselect6" desc="tracepoint, masks:sys_enter_pselect6"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pselect6" desc="tracepoint, masks:sys_exit_pselect6"> </modifier>
        <modifier name="perf::syscalls:sys_enter_poll" desc="tracepoint, masks:sys_enter_poll"> </modifier>
        <modifier name="perf::syscalls:sys_exit_poll" desc="tracepoint, masks:sys_exit_poll"> </modifier>
        <modifier name="perf::syscalls:sys_enter_ppoll" desc="tracepoint, masks:sys_enter_ppoll"> </modifier>
        <modifier name="perf::syscalls:sys_exit_ppoll" desc="tracepoint, masks:sys_exit_ppoll"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getdents" desc="tracepoint, masks:sys_enter_getdents"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getdents" desc="tracepoint, masks:sys_exit_getdents"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getdents64" desc="tracepoint, masks:sys_enter_getdents64"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getdents64" desc="tracepoint, masks:sys_exit_getdents64"> </modifier>
        <modifier name="perf::syscalls:sys_enter_ioctl" desc="tracepoint, masks:sys_enter_ioctl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_ioctl" desc="tracepoint, masks:sys_exit_ioctl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fcntl" desc="tracepoint, masks:sys_enter_fcntl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fcntl" desc="tracepoint, masks:sys_exit_fcntl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mknodat" desc="tracepoint, masks:sys_enter_mknodat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mknodat" desc="tracepoint, masks:sys_exit_mknodat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mknod" desc="tracepoint, masks:sys_enter_mknod"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mknod" desc="tracepoint, masks:sys_exit_mknod"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mkdirat" desc="tracepoint, masks:sys_enter_mkdirat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mkdirat" desc="tracepoint, masks:sys_exit_mkdirat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mkdir" desc="tracepoint, masks:sys_enter_mkdir"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mkdir" desc="tracepoint, masks:sys_exit_mkdir"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rmdir" desc="tracepoint, masks:sys_enter_rmdir"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rmdir" desc="tracepoint, masks:sys_exit_rmdir"> </modifier>
        <modifier name="perf::syscalls:sys_enter_unlinkat" desc="tracepoint, masks:sys_enter_unlinkat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_unlinkat" desc="tracepoint, masks:sys_exit_unlinkat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_unlink" desc="tracepoint, masks:sys_enter_unlink"> </modifier>
        <modifier name="perf::syscalls:sys_exit_unlink" desc="tracepoint, masks:sys_exit_unlink"> </modifier>
        <modifier name="perf::syscalls:sys_enter_symlinkat" desc="tracepoint, masks:sys_enter_symlinkat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_symlinkat" desc="tracepoint, masks:sys_exit_symlinkat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_symlink" desc="tracepoint, masks:sys_enter_symlink"> </modifier>
        <modifier name="perf::syscalls:sys_exit_symlink" desc="tracepoint, masks:sys_exit_symlink"> </modifier>
        <modifier name="perf::syscalls:sys_enter_linkat" desc="tracepoint, masks:sys_enter_linkat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_linkat" desc="tracepoint, masks:sys_exit_linkat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_link" desc="tracepoint, masks:sys_enter_link"> </modifier>
        <modifier name="perf::syscalls:sys_exit_link" desc="tracepoint, masks:sys_exit_link"> </modifier>
        <modifier name="perf::syscalls:sys_enter_renameat2" desc="tracepoint, masks:sys_enter_renameat2"> </modifier>
        <modifier name="perf::syscalls:sys_exit_renameat2" desc="tracepoint, masks:sys_exit_renameat2"> </modifier>
        <modifier name="perf::syscalls:sys_enter_renameat" desc="tracepoint, masks:sys_enter_renameat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_renameat" desc="tracepoint, masks:sys_exit_renameat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rename" desc="tracepoint, masks:sys_enter_rename"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rename" desc="tracepoint, masks:sys_exit_rename"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pipe2" desc="tracepoint, masks:sys_enter_pipe2"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pipe2" desc="tracepoint, masks:sys_exit_pipe2"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pipe" desc="tracepoint, masks:sys_enter_pipe"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pipe" desc="tracepoint, masks:sys_exit_pipe"> </modifier>
        <modifier name="perf::syscalls:sys_enter_newstat" desc="tracepoint, masks:sys_enter_newstat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_newstat" desc="tracepoint, masks:sys_exit_newstat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_newlstat" desc="tracepoint, masks:sys_enter_newlstat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_newlstat" desc="tracepoint, masks:sys_exit_newlstat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_newfstatat" desc="tracepoint, masks:sys_enter_newfstatat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_newfstatat" desc="tracepoint, masks:sys_exit_newfstatat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_newfstat" desc="tracepoint, masks:sys_enter_newfstat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_newfstat" desc="tracepoint, masks:sys_exit_newfstat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_readlinkat" desc="tracepoint, masks:sys_enter_readlinkat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_readlinkat" desc="tracepoint, masks:sys_exit_readlinkat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_readlink" desc="tracepoint, masks:sys_enter_readlink"> </modifier>
        <modifier name="perf::syscalls:sys_exit_readlink" desc="tracepoint, masks:sys_exit_readlink"> </modifier>
        <modifier name="perf::syscalls:sys_enter_lseek" desc="tracepoint, masks:sys_enter_lseek"> </modifier>
        <modifier name="perf::syscalls:sys_exit_lseek" desc="tracepoint, masks:sys_exit_lseek"> </modifier>
        <modifier name="perf::syscalls:sys_enter_read" desc="tracepoint, masks:sys_enter_read"> </modifier>
        <modifier name="perf::syscalls:sys_exit_read" desc="tracepoint, masks:sys_exit_read"> </modifier>
        <modifier name="perf::syscalls:sys_enter_write" desc="tracepoint, masks:sys_enter_write"> </modifier>
        <modifier name="perf::syscalls:sys_exit_write" desc="tracepoint, masks:sys_exit_write"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pread64" desc="tracepoint, masks:sys_enter_pread64"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pread64" desc="tracepoint, masks:sys_exit_pread64"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pwrite64" desc="tracepoint, masks:sys_enter_pwrite64"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pwrite64" desc="tracepoint, masks:sys_exit_pwrite64"> </modifier>
        <modifier name="perf::syscalls:sys_enter_readv" desc="tracepoint, masks:sys_enter_readv"> </modifier>
        <modifier name="perf::syscalls:sys_exit_readv" desc="tracepoint, masks:sys_exit_readv"> </modifier>
        <modifier name="perf::syscalls:sys_enter_writev" desc="tracepoint, masks:sys_enter_writev"> </modifier>
        <modifier name="perf::syscalls:sys_exit_writev" desc="tracepoint, masks:sys_exit_writev"> </modifier>
        <modifier name="perf::syscalls:sys_enter_preadv" desc="tracepoint, masks:sys_enter_preadv"> </modifier>
        <modifier name="perf::syscalls:sys_exit_preadv" desc="tracepoint, masks:sys_exit_preadv"> </modifier>
        <modifier name="perf::syscalls:sys_enter_preadv2" desc="tracepoint, masks:sys_enter_preadv2"> </modifier>
        <modifier name="perf::syscalls:sys_exit_preadv2" desc="tracepoint, masks:sys_exit_preadv2"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pwritev" desc="tracepoint, masks:sys_enter_pwritev"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pwritev" desc="tracepoint, masks:sys_exit_pwritev"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pwritev2" desc="tracepoint, masks:sys_enter_pwritev2"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pwritev2" desc="tracepoint, masks:sys_exit_pwritev2"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sendfile64" desc="tracepoint, masks:sys_enter_sendfile64"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sendfile64" desc="tracepoint, masks:sys_exit_sendfile64"> </modifier>
        <modifier name="perf::syscalls:sys_enter_copy_file_range" desc="tracepoint, masks:sys_enter_copy_file_range"> </modifier>
        <modifier name="perf::syscalls:sys_exit_copy_file_range" desc="tracepoint, masks:sys_exit_copy_file_range"> </modifier>
        <modifier name="perf::syscalls:sys_enter_truncate" desc="tracepoint, masks:sys_enter_truncate"> </modifier>
        <modifier name="perf::syscalls:sys_exit_truncate" desc="tracepoint, masks:sys_exit_truncate"> </modifier>
        <modifier name="perf::syscalls:sys_enter_ftruncate" desc="tracepoint, masks:sys_enter_ftruncate"> </modifier>
        <modifier name="perf::syscalls:sys_exit_ftruncate" desc="tracepoint, masks:sys_exit_ftruncate"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fallocate" desc="tracepoint, masks:sys_enter_fallocate"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fallocate" desc="tracepoint, masks:sys_exit_fallocate"> </modifier>
        <modifier name="perf::syscalls:sys_enter_faccessat" desc="tracepoint, masks:sys_enter_faccessat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_faccessat" desc="tracepoint, masks:sys_exit_faccessat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_access" desc="tracepoint, masks:sys_enter_access"> </modifier>
        <modifier name="perf::syscalls:sys_exit_access" desc="tracepoint, masks:sys_exit_access"> </modifier>
        <modifier name="perf::syscalls:sys_enter_chdir" desc="tracepoint, masks:sys_enter_chdir"> </modifier>
        <modifier name="perf::syscalls:sys_exit_chdir" desc="tracepoint, masks:sys_exit_chdir"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fchdir" desc="tracepoint, masks:sys_enter_fchdir"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fchdir" desc="tracepoint, masks:sys_exit_fchdir"> </modifier>
        <modifier name="perf::syscalls:sys_enter_chroot" desc="tracepoint, masks:sys_enter_chroot"> </modifier>
        <modifier name="perf::syscalls:sys_exit_chroot" desc="tracepoint, masks:sys_exit_chroot"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fchmod" desc="tracepoint, masks:sys_enter_fchmod"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fchmod" desc="tracepoint, masks:sys_exit_fchmod"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fchmodat" desc="tracepoint, masks:sys_enter_fchmodat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fchmodat" desc="tracepoint, masks:sys_exit_fchmodat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_chmod" desc="tracepoint, masks:sys_enter_chmod"> </modifier>
        <modifier name="perf::syscalls:sys_exit_chmod" desc="tracepoint, masks:sys_exit_chmod"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fchownat" desc="tracepoint, masks:sys_enter_fchownat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fchownat" desc="tracepoint, masks:sys_exit_fchownat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_chown" desc="tracepoint, masks:sys_enter_chown"> </modifier>
        <modifier name="perf::syscalls:sys_exit_chown" desc="tracepoint, masks:sys_exit_chown"> </modifier>
        <modifier name="perf::syscalls:sys_enter_lchown" desc="tracepoint, masks:sys_enter_lchown"> </modifier>
        <modifier name="perf::syscalls:sys_exit_lchown" desc="tracepoint, masks:sys_exit_lchown"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fchown" desc="tracepoint, masks:sys_enter_fchown"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fchown" desc="tracepoint, masks:sys_exit_fchown"> </modifier>
        <modifier name="perf::syscalls:sys_enter_open" desc="tracepoint, masks:sys_enter_open"> </modifier>
        <modifier name="perf::syscalls:sys_exit_open" desc="tracepoint, masks:sys_exit_open"> </modifier>
        <modifier name="perf::syscalls:sys_enter_openat" desc="tracepoint, masks:sys_enter_openat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_openat" desc="tracepoint, masks:sys_exit_openat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_creat" desc="tracepoint, masks:sys_enter_creat"> </modifier>
        <modifier name="perf::syscalls:sys_exit_creat" desc="tracepoint, masks:sys_exit_creat"> </modifier>
        <modifier name="perf::syscalls:sys_enter_close" desc="tracepoint, masks:sys_enter_close"> </modifier>
        <modifier name="perf::syscalls:sys_exit_close" desc="tracepoint, masks:sys_exit_close"> </modifier>
        <modifier name="perf::syscalls:sys_enter_vhangup" desc="tracepoint, masks:sys_enter_vhangup"> </modifier>
        <modifier name="perf::syscalls:sys_exit_vhangup" desc="tracepoint, masks:sys_exit_vhangup"> </modifier>
        <modifier name="perf::syscalls:sys_enter_move_pages" desc="tracepoint, masks:sys_enter_move_pages"> </modifier>
        <modifier name="perf::syscalls:sys_exit_move_pages" desc="tracepoint, masks:sys_exit_move_pages"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mbind" desc="tracepoint, masks:sys_enter_mbind"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mbind" desc="tracepoint, masks:sys_exit_mbind"> </modifier>
        <modifier name="perf::syscalls:sys_enter_set_mempolicy" desc="tracepoint, masks:sys_enter_set_mempolicy"> </modifier>
        <modifier name="perf::syscalls:sys_exit_set_mempolicy" desc="tracepoint, masks:sys_exit_set_mempolicy"> </modifier>
        <modifier name="perf::syscalls:sys_enter_migrate_pages" desc="tracepoint, masks:sys_enter_migrate_pages"> </modifier>
        <modifier name="perf::syscalls:sys_exit_migrate_pages" desc="tracepoint, masks:sys_exit_migrate_pages"> </modifier>
        <modifier name="perf::syscalls:sys_enter_get_mempolicy" desc="tracepoint, masks:sys_enter_get_mempolicy"> </modifier>
        <modifier name="perf::syscalls:sys_exit_get_mempolicy" desc="tracepoint, masks:sys_exit_get_mempolicy"> </modifier>
        <modifier name="perf::syscalls:sys_enter_swapoff" desc="tracepoint, masks:sys_enter_swapoff"> </modifier>
        <modifier name="perf::syscalls:sys_exit_swapoff" desc="tracepoint, masks:sys_exit_swapoff"> </modifier>
        <modifier name="perf::syscalls:sys_enter_swapon" desc="tracepoint, masks:sys_enter_swapon"> </modifier>
        <modifier name="perf::syscalls:sys_exit_swapon" desc="tracepoint, masks:sys_exit_swapon"> </modifier>
        <modifier name="perf::syscalls:sys_enter_madvise" desc="tracepoint, masks:sys_enter_madvise"> </modifier>
        <modifier name="perf::syscalls:sys_exit_madvise" desc="tracepoint, masks:sys_exit_madvise"> </modifier>
        <modifier name="perf::syscalls:sys_enter_fadvise64" desc="tracepoint, masks:sys_enter_fadvise64"> </modifier>
        <modifier name="perf::syscalls:sys_exit_fadvise64" desc="tracepoint, masks:sys_exit_fadvise64"> </modifier>
        <modifier name="perf::syscalls:sys_enter_process_vm_readv" desc="tracepoint, masks:sys_enter_process_vm_readv"> </modifier>
        <modifier name="perf::syscalls:sys_exit_process_vm_readv" desc="tracepoint, masks:sys_exit_process_vm_readv"> </modifier>
        <modifier name="perf::syscalls:sys_enter_process_vm_writev" desc="tracepoint, masks:sys_enter_process_vm_writev"> </modifier>
        <modifier name="perf::syscalls:sys_exit_process_vm_writev" desc="tracepoint, masks:sys_exit_process_vm_writev"> </modifier>
        <modifier name="perf::syscalls:sys_enter_msync" desc="tracepoint, masks:sys_enter_msync"> </modifier>
        <modifier name="perf::syscalls:sys_exit_msync" desc="tracepoint, masks:sys_exit_msync"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mremap" desc="tracepoint, masks:sys_enter_mremap"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mremap" desc="tracepoint, masks:sys_exit_mremap"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mprotect" desc="tracepoint, masks:sys_enter_mprotect"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mprotect" desc="tracepoint, masks:sys_exit_mprotect"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pkey_mprotect" desc="tracepoint, masks:sys_enter_pkey_mprotect"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pkey_mprotect" desc="tracepoint, masks:sys_exit_pkey_mprotect"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pkey_alloc" desc="tracepoint, masks:sys_enter_pkey_alloc"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pkey_alloc" desc="tracepoint, masks:sys_exit_pkey_alloc"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pkey_free" desc="tracepoint, masks:sys_enter_pkey_free"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pkey_free" desc="tracepoint, masks:sys_exit_pkey_free"> </modifier>
        <modifier name="perf::syscalls:sys_enter_brk" desc="tracepoint, masks:sys_enter_brk"> </modifier>
        <modifier name="perf::syscalls:sys_exit_brk" desc="tracepoint, masks:sys_exit_brk"> </modifier>
        <modifier name="perf::syscalls:sys_enter_munmap" desc="tracepoint, masks:sys_enter_munmap"> </modifier>
        <modifier name="perf::syscalls:sys_exit_munmap" desc="tracepoint, masks:sys_exit_munmap"> </modifier>
        <modifier name="perf::syscalls:sys_enter_remap_file_pages" desc="tracepoint, masks:sys_enter_remap_file_pages"> </modifier>
        <modifier name="perf::syscalls:sys_exit_remap_file_pages" desc="tracepoint, masks:sys_exit_remap_file_pages"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mlock" desc="tracepoint, masks:sys_enter_mlock"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mlock" desc="tracepoint, masks:sys_exit_mlock"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mlock2" desc="tracepoint, masks:sys_enter_mlock2"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mlock2" desc="tracepoint, masks:sys_exit_mlock2"> </modifier>
        <modifier name="perf::syscalls:sys_enter_munlock" desc="tracepoint, masks:sys_enter_munlock"> </modifier>
        <modifier name="perf::syscalls:sys_exit_munlock" desc="tracepoint, masks:sys_exit_munlock"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mlockall" desc="tracepoint, masks:sys_enter_mlockall"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mlockall" desc="tracepoint, masks:sys_exit_mlockall"> </modifier>
        <modifier name="perf::syscalls:sys_enter_munlockall" desc="tracepoint, masks:sys_enter_munlockall"> </modifier>
        <modifier name="perf::syscalls:sys_exit_munlockall" desc="tracepoint, masks:sys_exit_munlockall"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mincore" desc="tracepoint, masks:sys_enter_mincore"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mincore" desc="tracepoint, masks:sys_exit_mincore"> </modifier>
        <modifier name="perf::syscalls:sys_enter_memfd_create" desc="tracepoint, masks:sys_enter_memfd_create"> </modifier>
        <modifier name="perf::syscalls:sys_exit_memfd_create" desc="tracepoint, masks:sys_exit_memfd_create"> </modifier>
        <modifier name="perf::syscalls:sys_enter_readahead" desc="tracepoint, masks:sys_enter_readahead"> </modifier>
        <modifier name="perf::syscalls:sys_exit_readahead" desc="tracepoint, masks:sys_exit_readahead"> </modifier>
        <modifier name="perf::syscalls:sys_enter_membarrier" desc="tracepoint, masks:sys_enter_membarrier"> </modifier>
        <modifier name="perf::syscalls:sys_exit_membarrier" desc="tracepoint, masks:sys_exit_membarrier"> </modifier>
        <modifier name="perf::syscalls:sys_enter_perf_event_open" desc="tracepoint, masks:sys_enter_perf_event_open"> </modifier>
        <modifier name="perf::syscalls:sys_exit_perf_event_open" desc="tracepoint, masks:sys_exit_perf_event_open"> </modifier>
        <modifier name="perf::syscalls:sys_enter_bpf" desc="tracepoint, masks:sys_enter_bpf"> </modifier>
        <modifier name="perf::syscalls:sys_exit_bpf" desc="tracepoint, masks:sys_exit_bpf"> </modifier>
        <modifier name="perf::syscalls:sys_enter_seccomp" desc="tracepoint, masks:sys_enter_seccomp"> </modifier>
        <modifier name="perf::syscalls:sys_exit_seccomp" desc="tracepoint, masks:sys_exit_seccomp"> </modifier>
        <modifier name="perf::syscalls:sys_enter_kexec_file_load" desc="tracepoint, masks:sys_enter_kexec_file_load"> </modifier>
        <modifier name="perf::syscalls:sys_exit_kexec_file_load" desc="tracepoint, masks:sys_exit_kexec_file_load"> </modifier>
        <modifier name="perf::syscalls:sys_enter_kexec_load" desc="tracepoint, masks:sys_enter_kexec_load"> </modifier>
        <modifier name="perf::syscalls:sys_exit_kexec_load" desc="tracepoint, masks:sys_exit_kexec_load"> </modifier>
        <modifier name="perf::syscalls:sys_enter_acct" desc="tracepoint, masks:sys_enter_acct"> </modifier>
        <modifier name="perf::syscalls:sys_exit_acct" desc="tracepoint, masks:sys_exit_acct"> </modifier>
        <modifier name="perf::syscalls:sys_enter_delete_module" desc="tracepoint, masks:sys_enter_delete_module"> </modifier>
        <modifier name="perf::syscalls:sys_exit_delete_module" desc="tracepoint, masks:sys_exit_delete_module"> </modifier>
        <modifier name="perf::syscalls:sys_enter_init_module" desc="tracepoint, masks:sys_enter_init_module"> </modifier>
        <modifier name="perf::syscalls:sys_exit_init_module" desc="tracepoint, masks:sys_exit_init_module"> </modifier>
        <modifier name="perf::syscalls:sys_enter_finit_module" desc="tracepoint, masks:sys_enter_finit_module"> </modifier>
        <modifier name="perf::syscalls:sys_exit_finit_module" desc="tracepoint, masks:sys_exit_finit_module"> </modifier>
        <modifier name="perf::syscalls:sys_enter_set_robust_list" desc="tracepoint, masks:sys_enter_set_robust_list"> </modifier>
        <modifier name="perf::syscalls:sys_exit_set_robust_list" desc="tracepoint, masks:sys_exit_set_robust_list"> </modifier>
        <modifier name="perf::syscalls:sys_enter_get_robust_list" desc="tracepoint, masks:sys_enter_get_robust_list"> </modifier>
        <modifier name="perf::syscalls:sys_exit_get_robust_list" desc="tracepoint, masks:sys_exit_get_robust_list"> </modifier>
        <modifier name="perf::syscalls:sys_enter_futex" desc="tracepoint, masks:sys_enter_futex"> </modifier>
        <modifier name="perf::syscalls:sys_exit_futex" desc="tracepoint, masks:sys_exit_futex"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getitimer" desc="tracepoint, masks:sys_enter_getitimer"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getitimer" desc="tracepoint, masks:sys_exit_getitimer"> </modifier>
        <modifier name="perf::syscalls:sys_enter_alarm" desc="tracepoint, masks:sys_enter_alarm"> </modifier>
        <modifier name="perf::syscalls:sys_exit_alarm" desc="tracepoint, masks:sys_exit_alarm"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setitimer" desc="tracepoint, masks:sys_enter_setitimer"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setitimer" desc="tracepoint, masks:sys_exit_setitimer"> </modifier>
        <modifier name="perf::syscalls:sys_enter_timer_create" desc="tracepoint, masks:sys_enter_timer_create"> </modifier>
        <modifier name="perf::syscalls:sys_exit_timer_create" desc="tracepoint, masks:sys_exit_timer_create"> </modifier>
        <modifier name="perf::syscalls:sys_enter_timer_gettime" desc="tracepoint, masks:sys_enter_timer_gettime"> </modifier>
        <modifier name="perf::syscalls:sys_exit_timer_gettime" desc="tracepoint, masks:sys_exit_timer_gettime"> </modifier>
        <modifier name="perf::syscalls:sys_enter_timer_getoverrun" desc="tracepoint, masks:sys_enter_timer_getoverrun"> </modifier>
        <modifier name="perf::syscalls:sys_exit_timer_getoverrun" desc="tracepoint, masks:sys_exit_timer_getoverrun"> </modifier>
        <modifier name="perf::syscalls:sys_enter_timer_settime" desc="tracepoint, masks:sys_enter_timer_settime"> </modifier>
        <modifier name="perf::syscalls:sys_exit_timer_settime" desc="tracepoint, masks:sys_exit_timer_settime"> </modifier>
        <modifier name="perf::syscalls:sys_enter_timer_delete" desc="tracepoint, masks:sys_enter_timer_delete"> </modifier>
        <modifier name="perf::syscalls:sys_exit_timer_delete" desc="tracepoint, masks:sys_exit_timer_delete"> </modifier>
        <modifier name="perf::syscalls:sys_enter_clock_settime" desc="tracepoint, masks:sys_enter_clock_settime"> </modifier>
        <modifier name="perf::syscalls:sys_exit_clock_settime" desc="tracepoint, masks:sys_exit_clock_settime"> </modifier>
        <modifier name="perf::syscalls:sys_enter_clock_gettime" desc="tracepoint, masks:sys_enter_clock_gettime"> </modifier>
        <modifier name="perf::syscalls:sys_exit_clock_gettime" desc="tracepoint, masks:sys_exit_clock_gettime"> </modifier>
        <modifier name="perf::syscalls:sys_enter_clock_adjtime" desc="tracepoint, masks:sys_enter_clock_adjtime"> </modifier>
        <modifier name="perf::syscalls:sys_exit_clock_adjtime" desc="tracepoint, masks:sys_exit_clock_adjtime"> </modifier>
        <modifier name="perf::syscalls:sys_enter_clock_getres" desc="tracepoint, masks:sys_enter_clock_getres"> </modifier>
        <modifier name="perf::syscalls:sys_exit_clock_getres" desc="tracepoint, masks:sys_exit_clock_getres"> </modifier>
        <modifier name="perf::syscalls:sys_enter_clock_nanosleep" desc="tracepoint, masks:sys_enter_clock_nanosleep"> </modifier>
        <modifier name="perf::syscalls:sys_exit_clock_nanosleep" desc="tracepoint, masks:sys_exit_clock_nanosleep"> </modifier>
        <modifier name="perf::syscalls:sys_enter_nanosleep" desc="tracepoint, masks:sys_enter_nanosleep"> </modifier>
        <modifier name="perf::syscalls:sys_exit_nanosleep" desc="tracepoint, masks:sys_exit_nanosleep"> </modifier>
        <modifier name="perf::syscalls:sys_enter_time" desc="tracepoint, masks:sys_enter_time"> </modifier>
        <modifier name="perf::syscalls:sys_exit_time" desc="tracepoint, masks:sys_exit_time"> </modifier>
        <modifier name="perf::syscalls:sys_enter_gettimeofday" desc="tracepoint, masks:sys_enter_gettimeofday"> </modifier>
        <modifier name="perf::syscalls:sys_exit_gettimeofday" desc="tracepoint, masks:sys_exit_gettimeofday"> </modifier>
        <modifier name="perf::syscalls:sys_enter_settimeofday" desc="tracepoint, masks:sys_enter_settimeofday"> </modifier>
        <modifier name="perf::syscalls:sys_exit_settimeofday" desc="tracepoint, masks:sys_exit_settimeofday"> </modifier>
        <modifier name="perf::syscalls:sys_enter_adjtimex" desc="tracepoint, masks:sys_enter_adjtimex"> </modifier>
        <modifier name="perf::syscalls:sys_exit_adjtimex" desc="tracepoint, masks:sys_exit_adjtimex"> </modifier>
        <modifier name="perf::syscalls:sys_enter_kcmp" desc="tracepoint, masks:sys_enter_kcmp"> </modifier>
        <modifier name="perf::syscalls:sys_exit_kcmp" desc="tracepoint, masks:sys_exit_kcmp"> </modifier>
        <modifier name="perf::syscalls:sys_enter_syslog" desc="tracepoint, masks:sys_enter_syslog"> </modifier>
        <modifier name="perf::syscalls:sys_exit_syslog" desc="tracepoint, masks:sys_exit_syslog"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_setscheduler" desc="tracepoint, masks:sys_enter_sched_setscheduler"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_setscheduler" desc="tracepoint, masks:sys_exit_sched_setscheduler"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_setparam" desc="tracepoint, masks:sys_enter_sched_setparam"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_setparam" desc="tracepoint, masks:sys_exit_sched_setparam"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_setattr" desc="tracepoint, masks:sys_enter_sched_setattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_setattr" desc="tracepoint, masks:sys_exit_sched_setattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_getscheduler" desc="tracepoint, masks:sys_enter_sched_getscheduler"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_getscheduler" desc="tracepoint, masks:sys_exit_sched_getscheduler"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_getparam" desc="tracepoint, masks:sys_enter_sched_getparam"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_getparam" desc="tracepoint, masks:sys_exit_sched_getparam"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_getattr" desc="tracepoint, masks:sys_enter_sched_getattr"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_getattr" desc="tracepoint, masks:sys_exit_sched_getattr"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_setaffinity" desc="tracepoint, masks:sys_enter_sched_setaffinity"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_setaffinity" desc="tracepoint, masks:sys_exit_sched_setaffinity"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_getaffinity" desc="tracepoint, masks:sys_enter_sched_getaffinity"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_getaffinity" desc="tracepoint, masks:sys_exit_sched_getaffinity"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_yield" desc="tracepoint, masks:sys_enter_sched_yield"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_yield" desc="tracepoint, masks:sys_exit_sched_yield"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_get_priority_max" desc="tracepoint, masks:sys_enter_sched_get_priority_max"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_get_priority_max" desc="tracepoint, masks:sys_exit_sched_get_priority_max"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_get_priority_min" desc="tracepoint, masks:sys_enter_sched_get_priority_min"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_get_priority_min" desc="tracepoint, masks:sys_exit_sched_get_priority_min"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sched_rr_get_interval" desc="tracepoint, masks:sys_enter_sched_rr_get_interval"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sched_rr_get_interval" desc="tracepoint, masks:sys_exit_sched_rr_get_interval"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getgroups" desc="tracepoint, masks:sys_enter_getgroups"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getgroups" desc="tracepoint, masks:sys_exit_getgroups"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setgroups" desc="tracepoint, masks:sys_enter_setgroups"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setgroups" desc="tracepoint, masks:sys_exit_setgroups"> </modifier>
        <modifier name="perf::syscalls:sys_enter_reboot" desc="tracepoint, masks:sys_enter_reboot"> </modifier>
        <modifier name="perf::syscalls:sys_exit_reboot" desc="tracepoint, masks:sys_exit_reboot"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setns" desc="tracepoint, masks:sys_enter_setns"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setns" desc="tracepoint, masks:sys_exit_setns"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setpriority" desc="tracepoint, masks:sys_enter_setpriority"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setpriority" desc="tracepoint, masks:sys_exit_setpriority"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getpriority" desc="tracepoint, masks:sys_enter_getpriority"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getpriority" desc="tracepoint, masks:sys_exit_getpriority"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setregid" desc="tracepoint, masks:sys_enter_setregid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setregid" desc="tracepoint, masks:sys_exit_setregid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setgid" desc="tracepoint, masks:sys_enter_setgid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setgid" desc="tracepoint, masks:sys_exit_setgid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setreuid" desc="tracepoint, masks:sys_enter_setreuid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setreuid" desc="tracepoint, masks:sys_exit_setreuid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setuid" desc="tracepoint, masks:sys_enter_setuid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setuid" desc="tracepoint, masks:sys_exit_setuid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setresuid" desc="tracepoint, masks:sys_enter_setresuid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setresuid" desc="tracepoint, masks:sys_exit_setresuid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getresuid" desc="tracepoint, masks:sys_enter_getresuid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getresuid" desc="tracepoint, masks:sys_exit_getresuid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setresgid" desc="tracepoint, masks:sys_enter_setresgid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setresgid" desc="tracepoint, masks:sys_exit_setresgid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getresgid" desc="tracepoint, masks:sys_enter_getresgid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getresgid" desc="tracepoint, masks:sys_exit_getresgid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setfsuid" desc="tracepoint, masks:sys_enter_setfsuid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setfsuid" desc="tracepoint, masks:sys_exit_setfsuid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setfsgid" desc="tracepoint, masks:sys_enter_setfsgid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setfsgid" desc="tracepoint, masks:sys_exit_setfsgid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getpid" desc="tracepoint, masks:sys_enter_getpid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getpid" desc="tracepoint, masks:sys_exit_getpid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_gettid" desc="tracepoint, masks:sys_enter_gettid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_gettid" desc="tracepoint, masks:sys_exit_gettid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getppid" desc="tracepoint, masks:sys_enter_getppid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getppid" desc="tracepoint, masks:sys_exit_getppid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getuid" desc="tracepoint, masks:sys_enter_getuid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getuid" desc="tracepoint, masks:sys_exit_getuid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_geteuid" desc="tracepoint, masks:sys_enter_geteuid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_geteuid" desc="tracepoint, masks:sys_exit_geteuid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getgid" desc="tracepoint, masks:sys_enter_getgid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getgid" desc="tracepoint, masks:sys_exit_getgid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getegid" desc="tracepoint, masks:sys_enter_getegid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getegid" desc="tracepoint, masks:sys_exit_getegid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_times" desc="tracepoint, masks:sys_enter_times"> </modifier>
        <modifier name="perf::syscalls:sys_exit_times" desc="tracepoint, masks:sys_exit_times"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setpgid" desc="tracepoint, masks:sys_enter_setpgid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setpgid" desc="tracepoint, masks:sys_exit_setpgid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getpgid" desc="tracepoint, masks:sys_enter_getpgid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getpgid" desc="tracepoint, masks:sys_exit_getpgid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getpgrp" desc="tracepoint, masks:sys_enter_getpgrp"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getpgrp" desc="tracepoint, masks:sys_exit_getpgrp"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getsid" desc="tracepoint, masks:sys_enter_getsid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getsid" desc="tracepoint, masks:sys_exit_getsid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setsid" desc="tracepoint, masks:sys_enter_setsid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setsid" desc="tracepoint, masks:sys_exit_setsid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_newuname" desc="tracepoint, masks:sys_enter_newuname"> </modifier>
        <modifier name="perf::syscalls:sys_exit_newuname" desc="tracepoint, masks:sys_exit_newuname"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sethostname" desc="tracepoint, masks:sys_enter_sethostname"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sethostname" desc="tracepoint, masks:sys_exit_sethostname"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setdomainname" desc="tracepoint, masks:sys_enter_setdomainname"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setdomainname" desc="tracepoint, masks:sys_exit_setdomainname"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getrlimit" desc="tracepoint, masks:sys_enter_getrlimit"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getrlimit" desc="tracepoint, masks:sys_exit_getrlimit"> </modifier>
        <modifier name="perf::syscalls:sys_enter_prlimit64" desc="tracepoint, masks:sys_enter_prlimit64"> </modifier>
        <modifier name="perf::syscalls:sys_exit_prlimit64" desc="tracepoint, masks:sys_exit_prlimit64"> </modifier>
        <modifier name="perf::syscalls:sys_enter_setrlimit" desc="tracepoint, masks:sys_enter_setrlimit"> </modifier>
        <modifier name="perf::syscalls:sys_exit_setrlimit" desc="tracepoint, masks:sys_exit_setrlimit"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getrusage" desc="tracepoint, masks:sys_enter_getrusage"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getrusage" desc="tracepoint, masks:sys_exit_getrusage"> </modifier>
        <modifier name="perf::syscalls:sys_enter_umask" desc="tracepoint, masks:sys_enter_umask"> </modifier>
        <modifier name="perf::syscalls:sys_exit_umask" desc="tracepoint, masks:sys_exit_umask"> </modifier>
        <modifier name="perf::syscalls:sys_enter_prctl" desc="tracepoint, masks:sys_enter_prctl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_prctl" desc="tracepoint, masks:sys_exit_prctl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_getcpu" desc="tracepoint, masks:sys_enter_getcpu"> </modifier>
        <modifier name="perf::syscalls:sys_exit_getcpu" desc="tracepoint, masks:sys_exit_getcpu"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sysinfo" desc="tracepoint, masks:sys_enter_sysinfo"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sysinfo" desc="tracepoint, masks:sys_exit_sysinfo"> </modifier>
        <modifier name="perf::syscalls:sys_enter_restart_syscall" desc="tracepoint, masks:sys_enter_restart_syscall"> </modifier>
        <modifier name="perf::syscalls:sys_exit_restart_syscall" desc="tracepoint, masks:sys_exit_restart_syscall"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rt_sigprocmask" desc="tracepoint, masks:sys_enter_rt_sigprocmask"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rt_sigprocmask" desc="tracepoint, masks:sys_exit_rt_sigprocmask"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rt_sigpending" desc="tracepoint, masks:sys_enter_rt_sigpending"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rt_sigpending" desc="tracepoint, masks:sys_exit_rt_sigpending"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rt_sigtimedwait" desc="tracepoint, masks:sys_enter_rt_sigtimedwait"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rt_sigtimedwait" desc="tracepoint, masks:sys_exit_rt_sigtimedwait"> </modifier>
        <modifier name="perf::syscalls:sys_enter_kill" desc="tracepoint, masks:sys_enter_kill"> </modifier>
        <modifier name="perf::syscalls:sys_exit_kill" desc="tracepoint, masks:sys_exit_kill"> </modifier>
        <modifier name="perf::syscalls:sys_enter_tgkill" desc="tracepoint, masks:sys_enter_tgkill"> </modifier>
        <modifier name="perf::syscalls:sys_exit_tgkill" desc="tracepoint, masks:sys_exit_tgkill"> </modifier>
        <modifier name="perf::syscalls:sys_enter_tkill" desc="tracepoint, masks:sys_enter_tkill"> </modifier>
        <modifier name="perf::syscalls:sys_exit_tkill" desc="tracepoint, masks:sys_exit_tkill"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rt_sigqueueinfo" desc="tracepoint, masks:sys_enter_rt_sigqueueinfo"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rt_sigqueueinfo" desc="tracepoint, masks:sys_exit_rt_sigqueueinfo"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rt_tgsigqueueinfo" desc="tracepoint, masks:sys_enter_rt_tgsigqueueinfo"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rt_tgsigqueueinfo" desc="tracepoint, masks:sys_exit_rt_tgsigqueueinfo"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sigaltstack" desc="tracepoint, masks:sys_enter_sigaltstack"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sigaltstack" desc="tracepoint, masks:sys_exit_sigaltstack"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rt_sigaction" desc="tracepoint, masks:sys_enter_rt_sigaction"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rt_sigaction" desc="tracepoint, masks:sys_exit_rt_sigaction"> </modifier>
        <modifier name="perf::syscalls:sys_enter_pause" desc="tracepoint, masks:sys_enter_pause"> </modifier>
        <modifier name="perf::syscalls:sys_exit_pause" desc="tracepoint, masks:sys_exit_pause"> </modifier>
        <modifier name="perf::syscalls:sys_enter_rt_sigsuspend" desc="tracepoint, masks:sys_enter_rt_sigsuspend"> </modifier>
        <modifier name="perf::syscalls:sys_exit_rt_sigsuspend" desc="tracepoint, masks:sys_exit_rt_sigsuspend"> </modifier>
        <modifier name="perf::syscalls:sys_enter_ptrace" desc="tracepoint, masks:sys_enter_ptrace"> </modifier>
        <modifier name="perf::syscalls:sys_exit_ptrace" desc="tracepoint, masks:sys_exit_ptrace"> </modifier>
        <modifier name="perf::syscalls:sys_enter_capget" desc="tracepoint, masks:sys_enter_capget"> </modifier>
        <modifier name="perf::syscalls:sys_exit_capget" desc="tracepoint, masks:sys_exit_capget"> </modifier>
        <modifier name="perf::syscalls:sys_enter_capset" desc="tracepoint, masks:sys_enter_capset"> </modifier>
        <modifier name="perf::syscalls:sys_exit_capset" desc="tracepoint, masks:sys_exit_capset"> </modifier>
        <modifier name="perf::syscalls:sys_enter_sysctl" desc="tracepoint, masks:sys_enter_sysctl"> </modifier>
        <modifier name="perf::syscalls:sys_exit_sysctl" desc="tracepoint, masks:sys_exit_sysctl"> </modifier>
        <modifier name="perf::syscalls:sys_enter_exit" desc="tracepoint, masks:sys_enter_exit"> </modifier>
        <modifier name="perf::syscalls:sys_exit_exit" desc="tracepoint, masks:sys_exit_exit"> </modifier>
        <modifier name="perf::syscalls:sys_enter_exit_group" desc="tracepoint, masks:sys_enter_exit_group"> </modifier>
        <modifier name="perf::syscalls:sys_exit_exit_group" desc="tracepoint, masks:sys_exit_exit_group"> </modifier>
        <modifier name="perf::syscalls:sys_enter_waitid" desc="tracepoint, masks:sys_enter_waitid"> </modifier>
        <modifier name="perf::syscalls:sys_exit_waitid" desc="tracepoint, masks:sys_exit_waitid"> </modifier>
        <modifier name="perf::syscalls:sys_enter_wait4" desc="tracepoint, masks:sys_enter_wait4"> </modifier>
        <modifier name="perf::syscalls:sys_exit_wait4" desc="tracepoint, masks:sys_exit_wait4"> </modifier>
        <modifier name="perf::syscalls:sys_enter_personality" desc="tracepoint, masks:sys_enter_personality"> </modifier>
        <modifier name="perf::syscalls:sys_exit_personality" desc="tracepoint, masks:sys_exit_personality"> </modifier>
        <modifier name="perf::syscalls:sys_enter_set_tid_address" desc="tracepoint, masks:sys_enter_set_tid_address"> </modifier>
        <modifier name="perf::syscalls:sys_exit_set_tid_address" desc="tracepoint, masks:sys_exit_set_tid_address"> </modifier>
        <modifier name="perf::syscalls:sys_enter_unshare" desc="tracepoint, masks:sys_enter_unshare"> </modifier>
        <modifier name="perf::syscalls:sys_exit_unshare" desc="tracepoint, masks:sys_exit_unshare"> </modifier>
        <modifier name="perf::syscalls:sys_enter_mmap" desc="tracepoint, masks:sys_enter_mmap"> </modifier>
        <modifier name="perf::syscalls:sys_exit_mmap" desc="tracepoint, masks:sys_exit_mmap"> </modifier>
    </event>
    <event index="170" name="perf::nmi" desc="tracepoint">
        <modifier name="perf::nmi:nmi_handler" desc="tracepoint, masks:nmi_handler"> </modifier>
    </event>
    <event index="171" name="perf::irq_vectors" desc="tracepoint">
        <modifier name="perf::irq_vectors:local_timer_entry" desc="tracepoint, masks:local_timer_entry"> </modifier>
        <modifier name="perf::irq_vectors:local_timer_exit" desc="tracepoint, masks:local_timer_exit"> </modifier>
        <modifier name="perf::irq_vectors:reschedule_entry" desc="tracepoint, masks:reschedule_entry"> </modifier>
        <modifier name="perf::irq_vectors:reschedule_exit" desc="tracepoint, masks:reschedule_exit"> </modifier>
        <modifier name="perf::irq_vectors:spurious_apic_entry" desc="tracepoint, masks:spurious_apic_entry"> </modifier>
        <modifier name="perf::irq_vectors:spurious_apic_exit" desc="tracepoint, masks:spurious_apic_exit"> </modifier>
        <modifier name="perf::irq_vectors:error_apic_entry" desc="tracepoint, masks:error_apic_entry"> </modifier>
        <modifier name="perf::irq_vectors:error_apic_exit" desc="tracepoint, masks:error_apic_exit"> </modifier>
        <modifier name="perf::irq_vectors:x86_platform_ipi_entry" desc="tracepoint, masks:x86_platform_ipi_entry"> </modifier>
        <modifier name="perf::irq_vectors:x86_platform_ipi_exit" desc="tracepoint, masks:x86_platform_ipi_exit"> </modifier>
        <modifier name="perf::irq_vectors:irq_work_entry" desc="tracepoint, masks:irq_work_entry"> </modifier>
        <modifier name="perf::irq_vectors:irq_work_exit" desc="tracepoint, masks:irq_work_exit"> </modifier>
        <modifier name="perf::irq_vectors:call_function_entry" desc="tracepoint, masks:call_function_entry"> </modifier>
        <modifier name="perf::irq_vectors:call_function_exit" desc="tracepoint, masks:call_function_exit"> </modifier>
        <modifier name="perf::irq_vectors:call_function_single_entry" desc="tracepoint, masks:call_function_single_entry"> </modifier>
        <modifier name="perf::irq_vectors:call_function_single_exit" desc="tracepoint, masks:call_function_single_exit"> </modifier>
        <modifier name="perf::irq_vectors:threshold_apic_entry" desc="tracepoint, masks:threshold_apic_entry"> </modifier>
        <modifier name="perf::irq_vectors:threshold_apic_exit" desc="tracepoint, masks:threshold_apic_exit"> </modifier>
        <modifier name="perf::irq_vectors:deferred_error_apic_entry" desc="tracepoint, masks:deferred_error_apic_entry"> </modifier>
        <modifier name="perf::irq_vectors:deferred_error_apic_exit" desc="tracepoint, masks:deferred_error_apic_exit"> </modifier>
        <modifier name="perf::irq_vectors:thermal_apic_entry" desc="tracepoint, masks:thermal_apic_entry"> </modifier>
        <modifier name="perf::irq_vectors:thermal_apic_exit" desc="tracepoint, masks:thermal_apic_exit"> </modifier>
    </event>
    <event index="172" name="perf::xen" desc="tracepoint">
        <modifier name="perf::xen:xen_mc_batch" desc="tracepoint, masks:xen_mc_batch"> </modifier>
        <modifier name="perf::xen:xen_mc_issue" desc="tracepoint, masks:xen_mc_issue"> </modifier>
        <modifier name="perf::xen:xen_mc_entry" desc="tracepoint, masks:xen_mc_entry"> </modifier>
        <modifier name="perf::xen:xen_mc_entry_alloc" desc="tracepoint, masks:xen_mc_entry_alloc"> </modifier>
        <modifier name="perf::xen:xen_mc_callback" desc="tracepoint, masks:xen_mc_callback"> </modifier>
        <modifier name="perf::xen:xen_mc_flush_reason" desc="tracepoint, masks:xen_mc_flush_reason"> </modifier>
        <modifier name="perf::xen:xen_mc_flush" desc="tracepoint, masks:xen_mc_flush"> </modifier>
        <modifier name="perf::xen:xen_mc_extend_args" desc="tracepoint, masks:xen_mc_extend_args"> </modifier>
        <modifier name="perf::xen:xen_mmu_set_pte" desc="tracepoint, masks:xen_mmu_set_pte"> </modifier>
        <modifier name="perf::xen:xen_mmu_set_pte_atomic" desc="tracepoint, masks:xen_mmu_set_pte_atomic"> </modifier>
        <modifier name="perf::xen:xen_mmu_set_domain_pte" desc="tracepoint, masks:xen_mmu_set_domain_pte"> </modifier>
        <modifier name="perf::xen:xen_mmu_set_pte_at" desc="tracepoint, masks:xen_mmu_set_pte_at"> </modifier>
        <modifier name="perf::xen:xen_mmu_pte_clear" desc="tracepoint, masks:xen_mmu_pte_clear"> </modifier>
        <modifier name="perf::xen:xen_mmu_set_pmd" desc="tracepoint, masks:xen_mmu_set_pmd"> </modifier>
        <modifier name="perf::xen:xen_mmu_pmd_clear" desc="tracepoint, masks:xen_mmu_pmd_clear"> </modifier>
        <modifier name="perf::xen:xen_mmu_set_pud" desc="tracepoint, masks:xen_mmu_set_pud"> </modifier>
        <modifier name="perf::xen:xen_mmu_set_pgd" desc="tracepoint, masks:xen_mmu_set_pgd"> </modifier>
        <modifier name="perf::xen:xen_mmu_pud_clear" desc="tracepoint, masks:xen_mmu_pud_clear"> </modifier>
        <modifier name="perf::xen:xen_mmu_pgd_clear" desc="tracepoint, masks:xen_mmu_pgd_clear"> </modifier>
        <modifier name="perf::xen:xen_mmu_ptep_modify_prot_start" desc="tracepoint, masks:xen_mmu_ptep_modify_prot_start"> </modifier>
        <modifier name="perf::xen:xen_mmu_ptep_modify_prot_commit" desc="tracepoint, masks:xen_mmu_ptep_modify_prot_commit"> </modifier>
        <modifier name="perf::xen:xen_mmu_alloc_ptpage" desc="tracepoint, masks:xen_mmu_alloc_ptpage"> </modifier>
        <modifier name="perf::xen:xen_mmu_release_ptpage" desc="tracepoint, masks:xen_mmu_release_ptpage"> </modifier>
        <modifier name="perf::xen:xen_mmu_pgd_pin" desc="tracepoint, masks:xen_mmu_pgd_pin"> </modifier>
        <modifier name="perf::xen:xen_mmu_pgd_unpin" desc="tracepoint, masks:xen_mmu_pgd_unpin"> </modifier>
        <modifier name="perf::xen:xen_mmu_flush_tlb_all" desc="tracepoint, masks:xen_mmu_flush_tlb_all"> </modifier>
        <modifier name="perf::xen:xen_mmu_flush_tlb" desc="tracepoint, masks:xen_mmu_flush_tlb"> </modifier>
        <modifier name="perf::xen:xen_mmu_flush_tlb_single" desc="tracepoint, masks:xen_mmu_flush_tlb_single"> </modifier>
        <modifier name="perf::xen:xen_mmu_flush_tlb_others" desc="tracepoint, masks:xen_mmu_flush_tlb_others"> </modifier>
        <modifier name="perf::xen:xen_mmu_write_cr3" desc="tracepoint, masks:xen_mmu_write_cr3"> </modifier>
        <modifier name="perf::xen:xen_cpu_write_ldt_entry" desc="tracepoint, masks:xen_cpu_write_ldt_entry"> </modifier>
        <modifier name="perf::xen:xen_cpu_write_idt_entry" desc="tracepoint, masks:xen_cpu_write_idt_entry"> </modifier>
        <modifier name="perf::xen:xen_cpu_load_idt" desc="tracepoint, masks:xen_cpu_load_idt"> </modifier>
        <modifier name="perf::xen:xen_cpu_write_gdt_entry" desc="tracepoint, masks:xen_cpu_write_gdt_entry"> </modifier>
        <modifier name="perf::xen:xen_cpu_set_ldt" desc="tracepoint, masks:xen_cpu_set_ldt"> </modifier>
    </event>
    <event index="173" name="perf::vsyscall" desc="tracepoint">
        <modifier name="perf::vsyscall:emulate_vsyscall" desc="tracepoint, masks:emulate_vsyscall"> </modifier>
    </event>
    <event index="174" name="perf::raw_syscalls" desc="tracepoint">
        <modifier name="perf::raw_syscalls:sys_enter" desc="tracepoint, masks:sys_enter"> </modifier>
        <modifier name="perf::raw_syscalls:sys_exit" desc="tracepoint, masks:sys_exit"> </modifier>
    </event>
    <event index="175" name="perf_raw::r0000" desc="perf_events raw event syntax: r[0-9a-fA-F]+">
        <modifier name="perf_raw::r0000:u=0" desc="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at user level"> </modifier>
        <modifier name="perf_raw::r0000:k=0" desc="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at kernel level"> </modifier>
        <modifier name="perf_raw::r0000:h=0" desc="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at hypervisor level"> </modifier>
    </event>
    <event index="176" name="UNHALTED_CORE_CYCLES" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted)">
        <modifier name="UNHALTED_CORE_CYCLES:e=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="UNHALTED_CORE_CYCLES:i=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert"> </modifier>
        <modifier name="UNHALTED_CORE_CYCLES:c=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="UNHALTED_CORE_CYCLES:t=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread"> </modifier>
        <modifier name="UNHALTED_CORE_CYCLES:intx=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="UNHALTED_CORE_CYCLES:intxcp=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="UNHALTED_CORE_CYCLES:u=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level"> </modifier>
        <modifier name="UNHALTED_CORE_CYCLES:k=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="177" name="UNHALTED_REFERENCE_CYCLES" desc="Unhalted reference cycles">
        <modifier name="UNHALTED_REFERENCE_CYCLES:t=0" desc="Unhalted reference cycles, masks:measure any thread"> </modifier>
        <modifier name="UNHALTED_REFERENCE_CYCLES:u=0" desc="Unhalted reference cycles, masks:monitor at user level"> </modifier>
        <modifier name="UNHALTED_REFERENCE_CYCLES:k=0" desc="Unhalted reference cycles, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="178" name="INSTRUCTION_RETIRED" desc="Number of instructions at retirement">
        <modifier name="INSTRUCTION_RETIRED:e=0" desc="Number of instructions at retirement, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="INSTRUCTION_RETIRED:i=0" desc="Number of instructions at retirement, masks:invert"> </modifier>
        <modifier name="INSTRUCTION_RETIRED:c=0" desc="Number of instructions at retirement, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="INSTRUCTION_RETIRED:t=0" desc="Number of instructions at retirement, masks:measure any thread"> </modifier>
        <modifier name="INSTRUCTION_RETIRED:intx=0" desc="Number of instructions at retirement, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="INSTRUCTION_RETIRED:intxcp=0" desc="Number of instructions at retirement, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="INSTRUCTION_RETIRED:u=0" desc="Number of instructions at retirement, masks:monitor at user level"> </modifier>
        <modifier name="INSTRUCTION_RETIRED:k=0" desc="Number of instructions at retirement, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="179" name="INSTRUCTIONS_RETIRED" desc="This is an alias for INSTRUCTION_RETIRED">
        <modifier name="INSTRUCTIONS_RETIRED:e=0" desc="This is an alias for INSTRUCTION_RETIRED, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="INSTRUCTIONS_RETIRED:i=0" desc="This is an alias for INSTRUCTION_RETIRED, masks:invert"> </modifier>
        <modifier name="INSTRUCTIONS_RETIRED:c=0" desc="This is an alias for INSTRUCTION_RETIRED, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="INSTRUCTIONS_RETIRED:t=0" desc="This is an alias for INSTRUCTION_RETIRED, masks:measure any thread"> </modifier>
        <modifier name="INSTRUCTIONS_RETIRED:intx=0" desc="This is an alias for INSTRUCTION_RETIRED, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="INSTRUCTIONS_RETIRED:intxcp=0" desc="This is an alias for INSTRUCTION_RETIRED, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="INSTRUCTIONS_RETIRED:u=0" desc="This is an alias for INSTRUCTION_RETIRED, masks:monitor at user level"> </modifier>
        <modifier name="INSTRUCTIONS_RETIRED:k=0" desc="This is an alias for INSTRUCTION_RETIRED, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="180" name="BRANCH_INSTRUCTIONS_RETIRED" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction">
        <modifier name="BRANCH_INSTRUCTIONS_RETIRED:e=0" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="BRANCH_INSTRUCTIONS_RETIRED:i=0" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:invert"> </modifier>
        <modifier name="BRANCH_INSTRUCTIONS_RETIRED:c=0" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="BRANCH_INSTRUCTIONS_RETIRED:t=0" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:measure any thread"> </modifier>
        <modifier name="BRANCH_INSTRUCTIONS_RETIRED:intx=0" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="BRANCH_INSTRUCTIONS_RETIRED:intxcp=0" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="BRANCH_INSTRUCTIONS_RETIRED:u=0" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor at user level"> </modifier>
        <modifier name="BRANCH_INSTRUCTIONS_RETIRED:k=0" desc="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="181" name="MISPREDICTED_BRANCH_RETIRED" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware">
        <modifier name="MISPREDICTED_BRANCH_RETIRED:e=0" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="MISPREDICTED_BRANCH_RETIRED:i=0" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:invert"> </modifier>
        <modifier name="MISPREDICTED_BRANCH_RETIRED:c=0" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="MISPREDICTED_BRANCH_RETIRED:t=0" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:measure any thread"> </modifier>
        <modifier name="MISPREDICTED_BRANCH_RETIRED:intx=0" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="MISPREDICTED_BRANCH_RETIRED:intxcp=0" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="MISPREDICTED_BRANCH_RETIRED:u=0" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor at user level"> </modifier>
        <modifier name="MISPREDICTED_BRANCH_RETIRED:k=0" desc="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="182" name="BACLEARS" desc="Branch re-steered">
        <modifier name="BACLEARS:ANY" desc="Branch re-steered, masks:Number of front-end re-steers due to BPU misprediction"> </modifier>
        <modifier name="BACLEARS:e=0" desc="Branch re-steered, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="BACLEARS:i=0" desc="Branch re-steered, masks:invert"> </modifier>
        <modifier name="BACLEARS:c=0" desc="Branch re-steered, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="BACLEARS:t=0" desc="Branch re-steered, masks:measure any thread"> </modifier>
        <modifier name="BACLEARS:intx=0" desc="Branch re-steered, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="BACLEARS:intxcp=0" desc="Branch re-steered, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="BACLEARS:u=0" desc="Branch re-steered, masks:monitor at user level"> </modifier>
        <modifier name="BACLEARS:k=0" desc="Branch re-steered, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="183" name="BR_INST_RETIRED" desc="Branch instructions retired (Precise Event)">
        <modifier name="BR_INST_RETIRED:CONDITIONAL" desc="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro conditional branch instructions"> </modifier>
        <modifier name="BR_INST_RETIRED:COND" desc="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro conditional branch instructions"> </modifier>
        <modifier name="BR_INST_RETIRED:NEAR_CALL" desc="Branch instructions retired (Precise Event), masks:Counts all macro direct and indirect near calls"> </modifier>
        <modifier name="BR_INST_RETIRED:ALL_BRANCHES" desc="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro branches including far branches (architectural event)"> </modifier>
        <modifier name="BR_INST_RETIRED:NEAR_RETURN" desc="Branch instructions retired (Precise Event), masks:Counts the number of near ret instructions retired"> </modifier>
        <modifier name="BR_INST_RETIRED:NOT_TAKEN" desc="Branch instructions retired (Precise Event), masks:Counts all not taken macro branch instructions retired"> </modifier>
        <modifier name="BR_INST_RETIRED:NEAR_TAKEN" desc="Branch instructions retired (Precise Event), masks:Counts the number of near branch taken instructions retired"> </modifier>
        <modifier name="BR_INST_RETIRED:FAR_BRANCH" desc="Branch instructions retired (Precise Event), masks:Counts the number of far branch instructions retired"> </modifier>
        <modifier name="BR_INST_RETIRED:e=0" desc="Branch instructions retired (Precise Event), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="BR_INST_RETIRED:i=0" desc="Branch instructions retired (Precise Event), masks:invert"> </modifier>
        <modifier name="BR_INST_RETIRED:c=0" desc="Branch instructions retired (Precise Event), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="BR_INST_RETIRED:t=0" desc="Branch instructions retired (Precise Event), masks:measure any thread"> </modifier>
        <modifier name="BR_INST_RETIRED:intx=0" desc="Branch instructions retired (Precise Event), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="BR_INST_RETIRED:intxcp=0" desc="Branch instructions retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="BR_INST_RETIRED:u=0" desc="Branch instructions retired (Precise Event), masks:monitor at user level"> </modifier>
        <modifier name="BR_INST_RETIRED:k=0" desc="Branch instructions retired (Precise Event), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="184" name="BR_MISP_RETIRED" desc="Mispredicted retired branches (Precise Event)">
        <modifier name="BR_MISP_RETIRED:CONDITIONAL" desc="Mispredicted retired branches (Precise Event), masks:All mispredicted macro conditional branch instructions"> </modifier>
        <modifier name="BR_MISP_RETIRED:COND" desc="Mispredicted retired branches (Precise Event), masks:All mispredicted macro conditional branch instructions"> </modifier>
        <modifier name="BR_MISP_RETIRED:ALL_BRANCHES" desc="Mispredicted retired branches (Precise Event), masks:All mispredicted macro branches (architectural event)"> </modifier>
        <modifier name="BR_MISP_RETIRED:NEAR_TAKEN" desc="Mispredicted retired branches (Precise Event), masks:Number of near branch instructions retired that were mispredicted and taken"> </modifier>
        <modifier name="BR_MISP_RETIRED:NEAR_CALL" desc="Mispredicted retired branches (Precise Event), masks:Counts both taken and not taken retired mispredicted direct and indirect near calls, including both register and memory indirect."> </modifier>
        <modifier name="BR_MISP_RETIRED:e=0" desc="Mispredicted retired branches (Precise Event), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="BR_MISP_RETIRED:i=0" desc="Mispredicted retired branches (Precise Event), masks:invert"> </modifier>
        <modifier name="BR_MISP_RETIRED:c=0" desc="Mispredicted retired branches (Precise Event), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="BR_MISP_RETIRED:t=0" desc="Mispredicted retired branches (Precise Event), masks:measure any thread"> </modifier>
        <modifier name="BR_MISP_RETIRED:intx=0" desc="Mispredicted retired branches (Precise Event), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="BR_MISP_RETIRED:intxcp=0" desc="Mispredicted retired branches (Precise Event), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="BR_MISP_RETIRED:u=0" desc="Mispredicted retired branches (Precise Event), masks:monitor at user level"> </modifier>
        <modifier name="BR_MISP_RETIRED:k=0" desc="Mispredicted retired branches (Precise Event), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="185" name="CPU_CLK_THREAD_UNHALTED" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted)">
        <modifier name="CPU_CLK_THREAD_UNHALTED:REF_XCLK" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Count Xclk pulses (100Mhz) when the core is unhalted"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:REF_XCLK_ANY" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Count Xclk pulses (100Mhz) when the at least one thread on the physical core is unhalted"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:REF_P" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Cycles when the core is unhalted (count at 100 Mhz)"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:THREAD_P" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Cycles when thread is not halted"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:ONE_THREAD_ACTIVE" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Counts Xclk (100Mhz) pulses when this thread is unhalted and the other thread is halted"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:RING0_TRANS" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Counts when the current privilege level transitions from ring 1, 2 or 3 to ring 0 (kernel)"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:e=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:i=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:c=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:t=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:intx=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:intxcp=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:u=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level"> </modifier>
        <modifier name="CPU_CLK_THREAD_UNHALTED:k=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="186" name="CPU_CLK_UNHALTED" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted)">
        <modifier name="CPU_CLK_UNHALTED:e=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="CPU_CLK_UNHALTED:i=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert"> </modifier>
        <modifier name="CPU_CLK_UNHALTED:c=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="CPU_CLK_UNHALTED:t=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread"> </modifier>
        <modifier name="CPU_CLK_UNHALTED:intx=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="CPU_CLK_UNHALTED:intxcp=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="CPU_CLK_UNHALTED:u=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level"> </modifier>
        <modifier name="CPU_CLK_UNHALTED:k=0" desc="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="187" name="CYCLE_ACTIVITY" desc="Stalled cycles">
        <modifier name="CYCLE_ACTIVITY:CYCLES_L2_MISS" desc="Stalled cycles, masks:Cycles with pending L2 miss demand loads outstanding"> </modifier>
        <modifier name="CYCLE_ACTIVITY:CYCLES_L2_PENDING" desc="Stalled cycles, masks:Cycles with pending L2 miss demand loads outstanding"> </modifier>
        <modifier name="CYCLE_ACTIVITY:CYCLES_L3_MISS" desc="Stalled cycles, masks:Cycles with L3 cache miss demand loads outstanding"> </modifier>
        <modifier name="CYCLE_ACTIVITY:CYCLES_LDM_PENDING" desc="Stalled cycles, masks:Cycles with L3 cache miss demand loads outstanding"> </modifier>
        <modifier name="CYCLE_ACTIVITY:CYCLES_L1D_MISS" desc="Stalled cycles, masks:Cycles with pending L1D load cache misses"> </modifier>
        <modifier name="CYCLE_ACTIVITY:CYCLES_L1D_PENDING" desc="Stalled cycles, masks:Cycles with pending L1D load cache misses"> </modifier>
        <modifier name="CYCLE_ACTIVITY:CYCLES_MEM_ANY" desc="Stalled cycles, masks:Cycles when memory subsystem has at least one outstanding load"> </modifier>
        <modifier name="CYCLE_ACTIVITY:STALLS_L1D_MISS" desc="Stalled cycles, masks:Execution stalls while at least one L1D demand load cache miss is outstanding"> </modifier>
        <modifier name="CYCLE_ACTIVITY:STALLS_L2_MISS" desc="Stalled cycles, masks:Execution stalls while at least one L2 demand load is outstanding"> </modifier>
        <modifier name="CYCLE_ACTIVITY:STALLS_L3_MISS" desc="Stalled cycles, masks:Execution stalls while at least one L3 demand load is outstanding"> </modifier>
        <modifier name="CYCLE_ACTIVITY:STALLS_MEM_ANY" desc="Stalled cycles, masks:Execution stalls while at least one demand load is outstanding in the memory subsystem"> </modifier>
        <modifier name="CYCLE_ACTIVITY:STALLS_TOTAL" desc="Stalled cycles, masks:Total execution stalls in cycles"> </modifier>
    </event>
    <event index="188" name="DTLB_LOAD_MISSES" desc="Data TLB load misses">
        <modifier name="DTLB_LOAD_MISSES:MISS_CAUSES_A_WALK" desc="Data TLB load misses, masks:Misses in all DTLB levels that cause page walks"> </modifier>
        <modifier name="DTLB_LOAD_MISSES:WALK_COMPLETED" desc="Data TLB load misses, masks:Number of misses in all TLB levels causing a page walk of any page size that completes"> </modifier>
        <modifier name="DTLB_LOAD_MISSES:WALK_COMPLETED_4K" desc="Data TLB load misses, masks:Number of misses in all TLB levels causing a page walk of 4KB page size that completes"> </modifier>
        <modifier name="DTLB_LOAD_MISSES:WALK_COMPLETED_2M_4M" desc="Data TLB load misses, masks:Number of misses in all TLB levels causing a page walk of 2MB/4MB page size that completes"> </modifier>
        <modifier name="DTLB_LOAD_MISSES:WALK_COMPLETED_1G" desc="Data TLB load misses, masks:Number of misses in all TLB levels causing a page walk of 1GB page size that completes"> </modifier>
        <modifier name="DTLB_LOAD_MISSES:WALK_ACTIVE" desc="Data TLB load misses, masks:Cycles with at least one hardware walker active for a load"> </modifier>
        <modifier name="DTLB_LOAD_MISSES:WALK_DURATION" desc="Data TLB load misses, masks:Cycles when hardware page walker is busy with page walks"> </modifier>
        <modifier name="DTLB_LOAD_MISSES:WALK_PENDING" desc="Data TLB load misses, masks:Cycles when hardware page walker is busy with page walks"> </modifier>
        <modifier name="DTLB_LOAD_MISSES:STLB_HIT" desc="Data TLB load misses, masks:Number of cache load STLB hits. No page walk"> </modifier>
    </event>
    <event index="189" name="DTLB_STORE_MISSES" desc="Data TLB store misses">
        <modifier name="DTLB_STORE_MISSES:MISS_CAUSES_A_WALK" desc="Data TLB store misses, masks:Misses in all DTLB levels that cause page walks"> </modifier>
        <modifier name="DTLB_STORE_MISSES:WALK_COMPLETED" desc="Data TLB store misses, masks:Number of misses in all TLB levels causing a page walk of any page size that completes"> </modifier>
        <modifier name="DTLB_STORE_MISSES:WALK_COMPLETED_4K" desc="Data TLB store misses, masks:Number of misses in all TLB levels causing a page walk of 4KB page size that completes"> </modifier>
        <modifier name="DTLB_STORE_MISSES:WALK_COMPLETED_2M_4M" desc="Data TLB store misses, masks:Number of misses in all TLB levels causing a page walk of 2MB/4MB page size that completes"> </modifier>
        <modifier name="DTLB_STORE_MISSES:WALK_COMPLETED_1G" desc="Data TLB store misses, masks:Number of misses in all TLB levels causing a page walk of 1GB page size that completes"> </modifier>
        <modifier name="DTLB_STORE_MISSES:WALK_ACTIVE" desc="Data TLB store misses, masks:Cycles with at least one hardware walker active for a load"> </modifier>
        <modifier name="DTLB_STORE_MISSES:WALK_DURATION" desc="Data TLB store misses, masks:Cycles when hardware page walker is busy with page walks"> </modifier>
        <modifier name="DTLB_STORE_MISSES:WALK_PENDING" desc="Data TLB store misses, masks:Cycles when hardware page walker is busy with page walks"> </modifier>
        <modifier name="DTLB_STORE_MISSES:STLB_HIT" desc="Data TLB store misses, masks:Number of cache load STLB hits. No page walk"> </modifier>
    </event>
    <event index="190" name="FP_ASSIST" desc="X87 floating-point assists">
        <modifier name="FP_ASSIST:ANY" desc="X87 floating-point assists, masks:Cycles with any input/output SEE or FP assists"> </modifier>
        <modifier name="FP_ASSIST:e=0" desc="X87 floating-point assists, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="FP_ASSIST:i=0" desc="X87 floating-point assists, masks:invert"> </modifier>
        <modifier name="FP_ASSIST:c=0" desc="X87 floating-point assists, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="FP_ASSIST:t=0" desc="X87 floating-point assists, masks:measure any thread"> </modifier>
        <modifier name="FP_ASSIST:intx=0" desc="X87 floating-point assists, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="FP_ASSIST:intxcp=0" desc="X87 floating-point assists, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="FP_ASSIST:u=0" desc="X87 floating-point assists, masks:monitor at user level"> </modifier>
        <modifier name="FP_ASSIST:k=0" desc="X87 floating-point assists, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="191" name="HLE_RETIRED" desc="HLE execution (Precise Event)">
        <modifier name="HLE_RETIRED:START" desc="HLE execution (Precise Event), masks:Number of times an HLE execution started"> </modifier>
        <modifier name="HLE_RETIRED:COMMIT" desc="HLE execution (Precise Event), masks:Number of times an HLE execution successfully committed"> </modifier>
        <modifier name="HLE_RETIRED:ABORTED" desc="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to any reasons (multiple categories may count as one) (Precise Event)"> </modifier>
        <modifier name="HLE_RETIRED:ABORTED_MEM" desc="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to various memory events"> </modifier>
        <modifier name="HLE_RETIRED:ABORTED_TMR" desc="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to hardware timer expiration"> </modifier>
        <modifier name="HLE_RETIRED:ABORTED_UNFRIENDLY" desc="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to HLE-unfriendly instructions and certain events such as AD-assists"> </modifier>
        <modifier name="HLE_RETIRED:ABORTED_MEMTYPE" desc="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to incompatible memory type"> </modifier>
        <modifier name="HLE_RETIRED:ABORTED_EVENTS" desc="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to none of the other 4 reasons (e.g., interrupt)"> </modifier>
        <modifier name="HLE_RETIRED:e=0" desc="HLE execution (Precise Event), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="HLE_RETIRED:i=0" desc="HLE execution (Precise Event), masks:invert"> </modifier>
        <modifier name="HLE_RETIRED:c=0" desc="HLE execution (Precise Event), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="HLE_RETIRED:t=0" desc="HLE execution (Precise Event), masks:measure any thread"> </modifier>
        <modifier name="HLE_RETIRED:intx=0" desc="HLE execution (Precise Event), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="HLE_RETIRED:intxcp=0" desc="HLE execution (Precise Event), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="HLE_RETIRED:u=0" desc="HLE execution (Precise Event), masks:monitor at user level"> </modifier>
        <modifier name="HLE_RETIRED:k=0" desc="HLE execution (Precise Event), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="192" name="ICACHE_16B" desc="Instruction Cache">
        <modifier name="ICACHE_16B:IFDATA_STALL" desc="Instruction Cache, masks:Cycles where a code fetch is stalled due to L1 instruction cache miss"> </modifier>
        <modifier name="ICACHE_16B:e=0" desc="Instruction Cache, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ICACHE_16B:i=0" desc="Instruction Cache, masks:invert"> </modifier>
        <modifier name="ICACHE_16B:c=0" desc="Instruction Cache, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="ICACHE_16B:t=0" desc="Instruction Cache, masks:measure any thread"> </modifier>
        <modifier name="ICACHE_16B:intx=0" desc="Instruction Cache, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="ICACHE_16B:intxcp=0" desc="Instruction Cache, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="ICACHE_16B:u=0" desc="Instruction Cache, masks:monitor at user level"> </modifier>
        <modifier name="ICACHE_16B:k=0" desc="Instruction Cache, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="193" name="ICACHE_64B" desc="Instruction Cache">
        <modifier name="ICACHE_64B:IFTAG_HIT" desc="Instruction Cache, masks:Number of instruction fetch tag lookups that hit in the instruction cache (L1I). Counts at 64-byte cache-line granularity"> </modifier>
        <modifier name="ICACHE_64B:IFTAG_MISS" desc="Instruction Cache, masks:Number of instruction fetch tag lookups that miss in the instruction cache (L1I). Counts at 64-byte cache-line granularity"> </modifier>
        <modifier name="ICACHE_64B:IFTAG_STALL" desc="Instruction Cache, masks:Cycles where a code fetch is stalled due to L1 instruction cache tag miss"> </modifier>
    </event>
    <event index="194" name="IDQ" desc="IDQ operations">
        <modifier name="IDQ:MITE_UOPS" desc="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from MITE path"> </modifier>
        <modifier name="IDQ:DSB_UOPS" desc="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path"> </modifier>
        <modifier name="IDQ:MS_DSB_UOPS" desc="IDQ operations, masks:Uops initiated by Decode Stream Buffer (DSB) that are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy"> </modifier>
        <modifier name="IDQ:MS_MITE_UOPS" desc="IDQ operations, masks:Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy"> </modifier>
        <modifier name="IDQ:MS_UOPS" desc="IDQ operations, masks:Number of Uops were delivered into Instruction Decode Queue (IDQ) from MS, initiated by Decode Stream Buffer (DSB) or MITE"> </modifier>
        <modifier name="IDQ:MS_UOPS_CYCLES" desc="IDQ operations, masks:Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE"> </modifier>
        <modifier name="IDQ:MS_SWITCHES" desc="IDQ operations, masks:Number of switches from DSB (Decode Stream Buffer) or MITE (legacy decode pipeline) to the Microcode Sequencer"> </modifier>
        <modifier name="IDQ:MITE_UOPS_CYCLES" desc="IDQ operations, masks:Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from MITE path"> </modifier>
        <modifier name="IDQ:DSB_UOPS_CYCLES" desc="IDQ operations, masks:Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path"> </modifier>
        <modifier name="IDQ:MS_DSB_UOPS_CYCLES" desc="IDQ operations, masks:Cycles when uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy"> </modifier>
        <modifier name="IDQ:MS_DSB_OCCUR" desc="IDQ operations, masks:Deliveries to Instruction Decode Queue (IDQ) initiated by Decode Stream Buffer (DSB) while Microcode Sequencer (MS) is busy"> </modifier>
        <modifier name="IDQ:ALL_DSB_CYCLES_4_UOPS" desc="IDQ operations, masks:Cycles Decode Stream Buffer (DSB) is delivering 4 Uops"> </modifier>
        <modifier name="IDQ:ALL_DSB_CYCLES_ANY_UOPS" desc="IDQ operations, masks:Cycles Decode Stream Buffer (DSB) is delivering any Uop"> </modifier>
        <modifier name="IDQ:ALL_MITE_CYCLES_4_UOPS" desc="IDQ operations, masks:Cycles MITE is delivering 4 Uops"> </modifier>
        <modifier name="IDQ:ALL_MITE_CYCLES_ANY_UOPS" desc="IDQ operations, masks:Cycles MITE is delivering any Uop"> </modifier>
        <modifier name="IDQ:ALL_MITE_UOPS" desc="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from any path"> </modifier>
    </event>
    <event index="195" name="IDQ_UOPS_NOT_DELIVERED" desc="Uops not delivered">
        <modifier name="IDQ_UOPS_NOT_DELIVERED:CORE" desc="Uops not delivered, masks:Count number of non-delivered uops to Resource Allocation Table (RAT)"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:CYCLES_0_UOPS_DELIV_CORE" desc="Uops not delivered, masks:Number of uops not delivered to Resource Allocation Table (RAT) per thread when backend is not stalled"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:CYCLES_FE_WAS_OK" desc="Uops not delivered, masks:Count cycles front-end (FE) delivered 4 uops or Resource Allocation Table (RAT) was stalling front-end"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_1_UOPS_DELIV_CORE" desc="Uops not delivered, masks:Count cycles per thread when 3 or more uops are not delivered to Resource Allocation Table (RAT) when backend is not stalled"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_2_UOPS_DELIV_CORE" desc="Uops not delivered, masks:Count cycles with less than 2 uops delivered by the front-end"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_3_UOPS_DELIV_CORE" desc="Uops not delivered, masks:Count cycles with less then 3 uops delivered by the front-end"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:e=0" desc="Uops not delivered, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:i=0" desc="Uops not delivered, masks:invert"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:c=0" desc="Uops not delivered, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:t=0" desc="Uops not delivered, masks:measure any thread"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:intx=0" desc="Uops not delivered, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:intxcp=0" desc="Uops not delivered, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:u=0" desc="Uops not delivered, masks:monitor at user level"> </modifier>
        <modifier name="IDQ_UOPS_NOT_DELIVERED:k=0" desc="Uops not delivered, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="196" name="INST_RETIRED" desc="Number of instructions retired (Precise Event)">
        <modifier name="INST_RETIRED:ANY_P" desc="Number of instructions retired (Precise Event), masks:Number of instructions retired. General Counter - architectural event"> </modifier>
        <modifier name="INST_RETIRED:ALL" desc="Number of instructions retired (Precise Event), masks:Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution (Precise Event)"> </modifier>
        <modifier name="INST_RETIRED:TOTAL_CYCLES" desc="Number of instructions retired (Precise Event), masks:Number of cycles using always true condition"> </modifier>
        <modifier name="INST_RETIRED:PREC_DIST" desc="Number of instructions retired (Precise Event), masks:Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution (Precise event)"> </modifier>
        <modifier name="INST_RETIRED:e=0" desc="Number of instructions retired (Precise Event), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="INST_RETIRED:i=0" desc="Number of instructions retired (Precise Event), masks:invert"> </modifier>
        <modifier name="INST_RETIRED:c=0" desc="Number of instructions retired (Precise Event), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="INST_RETIRED:t=0" desc="Number of instructions retired (Precise Event), masks:measure any thread"> </modifier>
        <modifier name="INST_RETIRED:intx=0" desc="Number of instructions retired (Precise Event), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="INST_RETIRED:intxcp=0" desc="Number of instructions retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="INST_RETIRED:u=0" desc="Number of instructions retired (Precise Event), masks:monitor at user level"> </modifier>
        <modifier name="INST_RETIRED:k=0" desc="Number of instructions retired (Precise Event), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="197" name="INT_MISC" desc="Miscellaneous interruptions">
        <modifier name="INT_MISC:RECOVERY_CYCLES" desc="Miscellaneous interruptions, masks:Cycles waiting for the checkpoints in Resource Allocation Table (RAT) to be recovered after Nuke due to all other cases except JEClear (e.g. whenever a ucode assist is needed like SSE exception, memory disambiguation, etc...)"> </modifier>
        <modifier name="INT_MISC:RECOVERY_CYCLES_ANY" desc="Miscellaneous interruptions, masks:Core cycles the allocator was stalled due to recovery from earlier clear event for any thread running on the physical core (e.g. misprediction or memory nuke)"> </modifier>
        <modifier name="INT_MISC:RECOVERY_STALLS_COUNT" desc="Miscellaneous interruptions, masks:Number of occurrences waiting for Machine Clears"> </modifier>
        <modifier name="INT_MISC:CLEAR_RESTEER_CYCLES" desc="Miscellaneous interruptions, masks:Number of cycles the issue-stage is waiting for front-end to fetch from resteered path following branch misprediction or machine clear events"> </modifier>
    </event>
    <event index="198" name="ITLB" desc="Instruction TLB">
        <modifier name="ITLB:ITLB_FLUSH" desc="Instruction TLB, masks:Flushing of the Instruction TLB (ITLB) pages independent of page size"> </modifier>
        <modifier name="ITLB:e=0" desc="Instruction TLB, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ITLB:i=0" desc="Instruction TLB, masks:invert"> </modifier>
        <modifier name="ITLB:c=0" desc="Instruction TLB, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="ITLB:t=0" desc="Instruction TLB, masks:measure any thread"> </modifier>
        <modifier name="ITLB:intx=0" desc="Instruction TLB, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="ITLB:intxcp=0" desc="Instruction TLB, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="ITLB:u=0" desc="Instruction TLB, masks:monitor at user level"> </modifier>
        <modifier name="ITLB:k=0" desc="Instruction TLB, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="199" name="ITLB_MISSES" desc="Instruction TLB misses">
        <modifier name="ITLB_MISSES:MISS_CAUSES_A_WALK" desc="Instruction TLB misses, masks:Misses in all DTLB levels that cause page walks"> </modifier>
        <modifier name="ITLB_MISSES:WALK_COMPLETED" desc="Instruction TLB misses, masks:Number of misses in all TLB levels causing a page walk of any page size that completes"> </modifier>
        <modifier name="ITLB_MISSES:WALK_COMPLETED_4K" desc="Instruction TLB misses, masks:Number of misses in all TLB levels causing a page walk of 4KB page size that completes"> </modifier>
        <modifier name="ITLB_MISSES:WALK_COMPLETED_2M_4M" desc="Instruction TLB misses, masks:Number of misses in all TLB levels causing a page walk of 2MB/4MB page size that completes"> </modifier>
        <modifier name="ITLB_MISSES:WALK_COMPLETED_1G" desc="Instruction TLB misses, masks:Number of misses in all TLB levels causing a page walk of 1GB page size that completes"> </modifier>
        <modifier name="ITLB_MISSES:WALK_DURATION" desc="Instruction TLB misses, masks:Cycles when PMH is busy with page walks"> </modifier>
        <modifier name="ITLB_MISSES:WALK_PENDING" desc="Instruction TLB misses, masks:Cycles when PMH is busy with page walks"> </modifier>
        <modifier name="ITLB_MISSES:STLB_HIT" desc="Instruction TLB misses, masks:Number of cache load STLB hits. No page walk"> </modifier>
    </event>
    <event index="200" name="L1D" desc="L1D cache">
        <modifier name="L1D:REPLACEMENT" desc="L1D cache, masks:L1D Data line replacements"> </modifier>
        <modifier name="L1D:e=0" desc="L1D cache, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="L1D:i=0" desc="L1D cache, masks:invert"> </modifier>
        <modifier name="L1D:c=0" desc="L1D cache, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="L1D:t=0" desc="L1D cache, masks:measure any thread"> </modifier>
        <modifier name="L1D:intx=0" desc="L1D cache, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="L1D:intxcp=0" desc="L1D cache, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="L1D:u=0" desc="L1D cache, masks:monitor at user level"> </modifier>
        <modifier name="L1D:k=0" desc="L1D cache, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="201" name="L1D_PEND_MISS" desc="L1D pending misses">
        <modifier name="L1D_PEND_MISS:PENDING" desc="L1D pending misses, masks:Cycles with L1D load misses outstanding"> </modifier>
        <modifier name="L1D_PEND_MISS:FB_FULL" desc="L1D pending misses, masks:Number of times a request needed a fill buffer (FB) entry but there was no entry available for it. That is the FB unavailability was dominant reason for blocking the request. A request includes cacheable/uncacheable demands load, store or SW prefetch"> </modifier>
        <modifier name="L1D_PEND_MISS:PENDING_CYCLES" desc="L1D pending misses, masks:Cycles with L1D load misses outstanding"> </modifier>
        <modifier name="L1D_PEND_MISS:PENDING_CYCLES_ANY" desc="L1D pending misses, masks:Cycles with L1D load misses outstanding from any thread"> </modifier>
        <modifier name="L1D_PEND_MISS:OCCURRENCES" desc="L1D pending misses, masks:Number L1D miss outstanding"> </modifier>
        <modifier name="L1D_PEND_MISS:EDGE" desc="L1D pending misses, masks:Number L1D miss outstanding"> </modifier>
        <modifier name="L1D_PEND_MISS:e=0" desc="L1D pending misses, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="L1D_PEND_MISS:i=0" desc="L1D pending misses, masks:invert"> </modifier>
        <modifier name="L1D_PEND_MISS:c=0" desc="L1D pending misses, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="L1D_PEND_MISS:t=0" desc="L1D pending misses, masks:measure any thread"> </modifier>
        <modifier name="L1D_PEND_MISS:intx=0" desc="L1D pending misses, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="L1D_PEND_MISS:intxcp=0" desc="L1D pending misses, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="L1D_PEND_MISS:u=0" desc="L1D pending misses, masks:monitor at user level"> </modifier>
        <modifier name="L1D_PEND_MISS:k=0" desc="L1D pending misses, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="202" name="L2_LINES_IN" desc="L2 lines allocated">
        <modifier name="L2_LINES_IN:ALL" desc="L2 lines allocated, masks:L2 cache lines filling L2"> </modifier>
        <modifier name="L2_LINES_IN:ANY" desc="L2 lines allocated, masks:L2 cache lines filling L2"> </modifier>
        <modifier name="L2_LINES_IN:e=0" desc="L2 lines allocated, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="L2_LINES_IN:i=0" desc="L2 lines allocated, masks:invert"> </modifier>
        <modifier name="L2_LINES_IN:c=0" desc="L2 lines allocated, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="L2_LINES_IN:t=0" desc="L2 lines allocated, masks:measure any thread"> </modifier>
        <modifier name="L2_LINES_IN:intx=0" desc="L2 lines allocated, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="L2_LINES_IN:intxcp=0" desc="L2 lines allocated, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="L2_LINES_IN:u=0" desc="L2 lines allocated, masks:monitor at user level"> </modifier>
        <modifier name="L2_LINES_IN:k=0" desc="L2 lines allocated, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="203" name="L2_LINES_OUT" desc="L2 lines evicted">
        <modifier name="L2_LINES_OUT:NON_SILENT" desc="L2 lines evicted, masks:TBD"> </modifier>
        <modifier name="L2_LINES_OUT:USELESS_HWPREF" desc="L2 lines evicted, masks:Counts the number of lines that have been hardware prefetched but not used and now evicted by L2 cache"> </modifier>
        <modifier name="L2_LINES_OUT:SILENT" desc="L2 lines evicted, masks:TBD"> </modifier>
    </event>
    <event index="204" name="L2_RQSTS" desc="L2 requests">
        <modifier name="L2_RQSTS:DEMAND_DATA_RD_MISS" desc="L2 requests, masks:Demand Data Read requests that miss L2 cache"> </modifier>
        <modifier name="L2_RQSTS:DEMAND_DATA_RD_HIT" desc="L2 requests, masks:Demand Data Read requests that hit L2 cache"> </modifier>
        <modifier name="L2_RQSTS:DEMAND_RFO_MISS" desc="L2 requests, masks:RFO requests that miss L2 cache"> </modifier>
        <modifier name="L2_RQSTS:RFO_MISS" desc="L2 requests, masks:RFO requests that miss L2 cache"> </modifier>
        <modifier name="L2_RQSTS:DEMAND_RFO_HIT" desc="L2 requests, masks:RFO requests that hit L2 cache"> </modifier>
        <modifier name="L2_RQSTS:RFO_HIT" desc="L2 requests, masks:RFO requests that hit L2 cache"> </modifier>
        <modifier name="L2_RQSTS:CODE_RD_MISS" desc="L2 requests, masks:L2 cache misses when fetching instructions"> </modifier>
        <modifier name="L2_RQSTS:ALL_DEMAND_MISS" desc="L2 requests, masks:All demand requests that miss the L2 cache"> </modifier>
        <modifier name="L2_RQSTS:CODE_RD_HIT" desc="L2 requests, masks:L2 cache hits when fetching instructions, code reads"> </modifier>
        <modifier name="L2_RQSTS:MISS" desc="L2 requests, masks:All requests that miss the L2 cache"> </modifier>
        <modifier name="L2_RQSTS:PF_MISS" desc="L2 requests, masks:Requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that miss L2 cache"> </modifier>
        <modifier name="L2_RQSTS:PF_HIT" desc="L2 requests, masks:Requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that hit L2 cache"> </modifier>
        <modifier name="L2_RQSTS:ALL_DEMAND_DATA_RD" desc="L2 requests, masks:Any data read request to L2 cache"> </modifier>
        <modifier name="L2_RQSTS:ALL_RFO" desc="L2 requests, masks:Any data RFO request to L2 cache"> </modifier>
        <modifier name="L2_RQSTS:ALL_CODE_RD" desc="L2 requests, masks:Any code read request to L2 cache"> </modifier>
        <modifier name="L2_RQSTS:ALL_DEMAND_REFERENCES" desc="L2 requests, masks:All demand requests to L2 cache "> </modifier>
        <modifier name="L2_RQSTS:ALL_PF" desc="L2 requests, masks:Any L2 HW prefetch request to L2 cache"> </modifier>
        <modifier name="L2_RQSTS:REFERENCES" desc="L2 requests, masks:All requests to L2 cache"> </modifier>
        <modifier name="L2_RQSTS:e=0" desc="L2 requests, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="L2_RQSTS:i=0" desc="L2 requests, masks:invert"> </modifier>
        <modifier name="L2_RQSTS:c=0" desc="L2 requests, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="L2_RQSTS:t=0" desc="L2 requests, masks:measure any thread"> </modifier>
        <modifier name="L2_RQSTS:intx=0" desc="L2 requests, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="L2_RQSTS:intxcp=0" desc="L2 requests, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="L2_RQSTS:u=0" desc="L2 requests, masks:monitor at user level"> </modifier>
        <modifier name="L2_RQSTS:k=0" desc="L2 requests, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="205" name="L2_TRANS" desc="L2 transactions">
        <modifier name="L2_TRANS:L2_WB" desc="L2 transactions, masks:L2 writebacks that access L2 cache"> </modifier>
        <modifier name="L2_TRANS:e=0" desc="L2 transactions, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="L2_TRANS:i=0" desc="L2 transactions, masks:invert"> </modifier>
        <modifier name="L2_TRANS:c=0" desc="L2 transactions, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="L2_TRANS:t=0" desc="L2 transactions, masks:measure any thread"> </modifier>
        <modifier name="L2_TRANS:intx=0" desc="L2 transactions, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="L2_TRANS:intxcp=0" desc="L2 transactions, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="L2_TRANS:u=0" desc="L2 transactions, masks:monitor at user level"> </modifier>
        <modifier name="L2_TRANS:k=0" desc="L2 transactions, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="206" name="LD_BLOCKS" desc="Blocking loads">
        <modifier name="LD_BLOCKS:STORE_FORWARD" desc="Blocking loads, masks:Counts the number of loads blocked by overlapping with store buffer entries that cannot be forwarded"> </modifier>
        <modifier name="LD_BLOCKS:NO_SR" desc="Blocking loads, masks:number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use"> </modifier>
    </event>
    <event index="207" name="LD_BLOCKS_PARTIAL" desc="Partial load blocks">
        <modifier name="LD_BLOCKS_PARTIAL:ADDRESS_ALIAS" desc="Partial load blocks, masks:False dependencies in MOB due to partial compare on address"> </modifier>
        <modifier name="LD_BLOCKS_PARTIAL:e=0" desc="Partial load blocks, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="LD_BLOCKS_PARTIAL:i=0" desc="Partial load blocks, masks:invert"> </modifier>
        <modifier name="LD_BLOCKS_PARTIAL:c=0" desc="Partial load blocks, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="LD_BLOCKS_PARTIAL:t=0" desc="Partial load blocks, masks:measure any thread"> </modifier>
        <modifier name="LD_BLOCKS_PARTIAL:intx=0" desc="Partial load blocks, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="LD_BLOCKS_PARTIAL:intxcp=0" desc="Partial load blocks, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="LD_BLOCKS_PARTIAL:u=0" desc="Partial load blocks, masks:monitor at user level"> </modifier>
        <modifier name="LD_BLOCKS_PARTIAL:k=0" desc="Partial load blocks, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="208" name="LOAD_HIT_PRE" desc="Load dispatches">
        <modifier name="LOAD_HIT_PRE:SW_PF" desc="Load dispatches, masks:Demand load dispatches that hit L1D fill buffer (FB) allocated for software prefetch"> </modifier>
        <modifier name="LOAD_HIT_PRE:e=0" desc="Load dispatches, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="LOAD_HIT_PRE:i=0" desc="Load dispatches, masks:invert"> </modifier>
        <modifier name="LOAD_HIT_PRE:c=0" desc="Load dispatches, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="LOAD_HIT_PRE:t=0" desc="Load dispatches, masks:measure any thread"> </modifier>
        <modifier name="LOAD_HIT_PRE:intx=0" desc="Load dispatches, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="LOAD_HIT_PRE:intxcp=0" desc="Load dispatches, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="LOAD_HIT_PRE:u=0" desc="Load dispatches, masks:monitor at user level"> </modifier>
        <modifier name="LOAD_HIT_PRE:k=0" desc="Load dispatches, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="209" name="LOCK_CYCLES" desc="Locked cycles in L1D and L2">
        <modifier name="LOCK_CYCLES:CACHE_LOCK_DURATION" desc="Locked cycles in L1D and L2, masks:cycles that the L1D is locked"> </modifier>
        <modifier name="LOCK_CYCLES:e=0" desc="Locked cycles in L1D and L2, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="LOCK_CYCLES:i=0" desc="Locked cycles in L1D and L2, masks:invert"> </modifier>
        <modifier name="LOCK_CYCLES:c=0" desc="Locked cycles in L1D and L2, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="LOCK_CYCLES:t=0" desc="Locked cycles in L1D and L2, masks:measure any thread"> </modifier>
        <modifier name="LOCK_CYCLES:intx=0" desc="Locked cycles in L1D and L2, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="LOCK_CYCLES:intxcp=0" desc="Locked cycles in L1D and L2, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="LOCK_CYCLES:u=0" desc="Locked cycles in L1D and L2, masks:monitor at user level"> </modifier>
        <modifier name="LOCK_CYCLES:k=0" desc="Locked cycles in L1D and L2, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="210" name="LONGEST_LAT_CACHE" desc="L3 cache">
        <modifier name="LONGEST_LAT_CACHE:MISS" desc="L3 cache, masks:Core-originated cacheable demand requests missed LLC - architectural event"> </modifier>
        <modifier name="LONGEST_LAT_CACHE:REFERENCE" desc="L3 cache, masks:Core-originated cacheable demand requests that refer to LLC - architectural event"> </modifier>
    </event>
    <event index="211" name="MACHINE_CLEARS" desc="Machine clear asserted">
        <modifier name="MACHINE_CLEARS:COUNT" desc="Machine clear asserted, masks:Number of machine clears (Nukes) of any type"> </modifier>
        <modifier name="MACHINE_CLEARS:MEMORY_ORDERING" desc="Machine clear asserted, masks:Number of Memory Ordering Machine Clears detected"> </modifier>
        <modifier name="MACHINE_CLEARS:SMC" desc="Machine clear asserted, masks:Number of Self-modifying code (SMC) Machine Clears detected"> </modifier>
    </event>
    <event index="212" name="MEM_LOAD_L3_HIT_RETIRED" desc="L3 hit load uops retired (Precise Event)">
        <modifier name="MEM_LOAD_L3_HIT_RETIRED:XSNP_MISS" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache"> </modifier>
        <modifier name="MEM_LOAD_L3_HIT_RETIRED:XSNP_HIT" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache"> </modifier>
        <modifier name="MEM_LOAD_L3_HIT_RETIRED:XSNP_HITM" desc="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS"> </modifier>
        <modifier name="MEM_LOAD_L3_HIT_RETIRED:XSNP_NONE" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required"> </modifier>
    </event>
    <event index="213" name="MEM_LOAD_UOPS_L3_HIT_RETIRED" desc="L3 hit load uops retired (Precise Event)">
        <modifier name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_MISS" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache"> </modifier>
        <modifier name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HIT" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache"> </modifier>
        <modifier name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HITM" desc="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS"> </modifier>
        <modifier name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_NONE" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required"> </modifier>
    </event>
    <event index="214" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED" desc="L3 hit load uops retired (Precise Event)">
        <modifier name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_MISS" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache"> </modifier>
        <modifier name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HIT" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache"> </modifier>
        <modifier name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HITM" desc="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS"> </modifier>
        <modifier name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_NONE" desc="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required"> </modifier>
    </event>
    <event index="215" name="MEM_LOAD_RETIRED" desc="Retired load uops (Precise Event)">
        <modifier name="MEM_LOAD_RETIRED:L1_HIT" desc="Retired load uops (Precise Event), masks:Retired load uops with L1 cache hits as data source"> </modifier>
        <modifier name="MEM_LOAD_RETIRED:L2_HIT" desc="Retired load uops (Precise Event), masks:Retired load uops with L2 cache hits as data source"> </modifier>
        <modifier name="MEM_LOAD_RETIRED:L3_HIT" desc="Retired load uops (Precise Event), masks:Retired load uops with L3 cache hits as data source"> </modifier>
        <modifier name="MEM_LOAD_RETIRED:L1_MISS" desc="Retired load uops (Precise Event), masks:Retired load uops which missed the L1D"> </modifier>
        <modifier name="MEM_LOAD_RETIRED:L2_MISS" desc="Retired load uops (Precise Event), masks:Retired load uops which missed the L2. Unknown data source excluded"> </modifier>
        <modifier name="MEM_LOAD_RETIRED:L3_MISS" desc="Retired load uops (Precise Event), masks:Retired load uops which missed the L3"> </modifier>
        <modifier name="MEM_LOAD_RETIRED:HIT_LFB" desc="Retired load uops (Precise Event), masks:Retired load uops which missed L1 but hit line fill buffer (LFB)"> </modifier>
        <modifier name="MEM_LOAD_RETIRED:FB_HIT" desc="Retired load uops (Precise Event), masks:Retired load uops which missed L1 but hit line fill buffer (LFB)"> </modifier>
    </event>
    <event index="216" name="MEM_LOAD_UOPS_RETIRED" desc="Retired load uops (Precise Event)">
        <modifier name="MEM_LOAD_UOPS_RETIRED:L1_HIT" desc="Retired load uops (Precise Event), masks:Retired load uops with L1 cache hits as data source"> </modifier>
        <modifier name="MEM_LOAD_UOPS_RETIRED:L2_HIT" desc="Retired load uops (Precise Event), masks:Retired load uops with L2 cache hits as data source"> </modifier>
        <modifier name="MEM_LOAD_UOPS_RETIRED:L3_HIT" desc="Retired load uops (Precise Event), masks:Retired load uops with L3 cache hits as data source"> </modifier>
        <modifier name="MEM_LOAD_UOPS_RETIRED:L1_MISS" desc="Retired load uops (Precise Event), masks:Retired load uops which missed the L1D"> </modifier>
        <modifier name="MEM_LOAD_UOPS_RETIRED:L2_MISS" desc="Retired load uops (Precise Event), masks:Retired load uops which missed the L2. Unknown data source excluded"> </modifier>
        <modifier name="MEM_LOAD_UOPS_RETIRED:L3_MISS" desc="Retired load uops (Precise Event), masks:Retired load uops which missed the L3"> </modifier>
        <modifier name="MEM_LOAD_UOPS_RETIRED:HIT_LFB" desc="Retired load uops (Precise Event), masks:Retired load uops which missed L1 but hit line fill buffer (LFB)"> </modifier>
        <modifier name="MEM_LOAD_UOPS_RETIRED:FB_HIT" desc="Retired load uops (Precise Event), masks:Retired load uops which missed L1 but hit line fill buffer (LFB)"> </modifier>
    </event>
    <event index="217" name="MEM_TRANS_RETIRED" desc="Memory transactions retired (Precise Event)">
        <modifier name="MEM_TRANS_RETIRED:LOAD_LATENCY" desc="Memory transactions retired (Precise Event), masks:Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)"> </modifier>
        <modifier name="MEM_TRANS_RETIRED:LATENCY_ABOVE_THRESHOLD" desc="Memory transactions retired (Precise Event), masks:Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)"> </modifier>
        <modifier name="MEM_TRANS_RETIRED:e=0" desc="Memory transactions retired (Precise Event), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="MEM_TRANS_RETIRED:i=0" desc="Memory transactions retired (Precise Event), masks:invert"> </modifier>
        <modifier name="MEM_TRANS_RETIRED:c=0" desc="Memory transactions retired (Precise Event), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="MEM_TRANS_RETIRED:t=0" desc="Memory transactions retired (Precise Event), masks:measure any thread"> </modifier>
    </event>
    <event index="218" name="MEM_INST_RETIRED" desc="Memory instructions retired (Precise Event)">
        <modifier name="MEM_INST_RETIRED:STLB_MISS_LOADS" desc="Memory instructions retired (Precise Event), masks:Load uops with true STLB miss retired to architected path"> </modifier>
        <modifier name="MEM_INST_RETIRED:STLB_MISS_STORES" desc="Memory instructions retired (Precise Event), masks:Store uops with true STLB miss retired to architected path"> </modifier>
        <modifier name="MEM_INST_RETIRED:LOCK_LOADS" desc="Memory instructions retired (Precise Event), masks:Load uops with locked access retired"> </modifier>
        <modifier name="MEM_INST_RETIRED:SPLIT_LOADS" desc="Memory instructions retired (Precise Event), masks:Line-splitted load uops retired"> </modifier>
        <modifier name="MEM_INST_RETIRED:SPLIT_STORES" desc="Memory instructions retired (Precise Event), masks:Line-splitted store uops retired"> </modifier>
        <modifier name="MEM_INST_RETIRED:ALL_LOADS" desc="Memory instructions retired (Precise Event), masks:All load uops retired"> </modifier>
        <modifier name="MEM_INST_RETIRED:ALL_STORES" desc="Memory instructions retired (Precise Event), masks:All store uops retired"> </modifier>
    </event>
    <event index="219" name="MEM_UOPS_RETIRED" desc="Memory instructions retired (Precise Event)">
        <modifier name="MEM_UOPS_RETIRED:STLB_MISS_LOADS" desc="Memory instructions retired (Precise Event), masks:Load uops with true STLB miss retired to architected path"> </modifier>
        <modifier name="MEM_UOPS_RETIRED:STLB_MISS_STORES" desc="Memory instructions retired (Precise Event), masks:Store uops with true STLB miss retired to architected path"> </modifier>
        <modifier name="MEM_UOPS_RETIRED:LOCK_LOADS" desc="Memory instructions retired (Precise Event), masks:Load uops with locked access retired"> </modifier>
        <modifier name="MEM_UOPS_RETIRED:SPLIT_LOADS" desc="Memory instructions retired (Precise Event), masks:Line-splitted load uops retired"> </modifier>
        <modifier name="MEM_UOPS_RETIRED:SPLIT_STORES" desc="Memory instructions retired (Precise Event), masks:Line-splitted store uops retired"> </modifier>
        <modifier name="MEM_UOPS_RETIRED:ALL_LOADS" desc="Memory instructions retired (Precise Event), masks:All load uops retired"> </modifier>
        <modifier name="MEM_UOPS_RETIRED:ALL_STORES" desc="Memory instructions retired (Precise Event), masks:All store uops retired"> </modifier>
    </event>
    <event index="220" name="MISALIGN_MEM_REF" desc="Misaligned memory references">
        <modifier name="MISALIGN_MEM_REF:LOADS" desc="Misaligned memory references, masks:Speculative cache-line split load uops dispatched to the L1D"> </modifier>
        <modifier name="MISALIGN_MEM_REF:STORES" desc="Misaligned memory references, masks:Speculative cache-line split store-address uops dispatched to L1D"> </modifier>
    </event>
    <event index="221" name="MOVE_ELIMINATION" desc="Move Elimination">
        <modifier name="MOVE_ELIMINATION:INT_ELIMINATED" desc="Move Elimination, masks:Number of integer Move Elimination candidate uops that were eliminated"> </modifier>
        <modifier name="MOVE_ELIMINATION:SIMD_ELIMINATED" desc="Move Elimination, masks:Number of SIMD Move Elimination candidate uops that were eliminated"> </modifier>
        <modifier name="MOVE_ELIMINATION:INT_NOT_ELIMINATED" desc="Move Elimination, masks:Number of integer Move Elimination candidate uops that were not eliminated"> </modifier>
        <modifier name="MOVE_ELIMINATION:SIMD_NOT_ELIMINATED" desc="Move Elimination, masks:Number of SIMD Move Elimination candidate uops that were not eliminated"> </modifier>
    </event>
    <event index="222" name="OFFCORE_REQUESTS" desc="Demand Data Read requests sent to uncore">
        <modifier name="OFFCORE_REQUESTS:DEMAND_DATA_RD" desc="Demand Data Read requests sent to uncore, masks:Demand data read requests sent to uncore (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS:DEMAND_CODE_RD" desc="Demand Data Read requests sent to uncore, masks:Demand code read requests sent to uncore (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS:DEMAND_RFO" desc="Demand Data Read requests sent to uncore, masks:Demand RFOs requests sent to uncore (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS:ALL_DATA_RD" desc="Demand Data Read requests sent to uncore, masks:Data read requests sent to uncore (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS:ALL_REQUESTS" desc="Demand Data Read requests sent to uncore, masks:Number of memory transactions that reached the superqueue (SQ)"> </modifier>
        <modifier name="OFFCORE_REQUESTS:L3_MISS_DEMAND_DATA_RD" desc="Demand Data Read requests sent to uncore, masks:Number of demand data read requests which missed the L3 cache"> </modifier>
    </event>
    <event index="223" name="OTHER_ASSISTS" desc="Software assist">
        <modifier name="OTHER_ASSISTS:ANY" desc="Software assist, masks:Number of times a microcode assist is invoked by HW other than FP-assist. Examples include AD (page Access Dirty) and AVX* related assists"> </modifier>
        <modifier name="OTHER_ASSISTS:e=0" desc="Software assist, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="OTHER_ASSISTS:i=0" desc="Software assist, masks:invert"> </modifier>
        <modifier name="OTHER_ASSISTS:c=0" desc="Software assist, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="OTHER_ASSISTS:t=0" desc="Software assist, masks:measure any thread"> </modifier>
        <modifier name="OTHER_ASSISTS:intx=0" desc="Software assist, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="OTHER_ASSISTS:intxcp=0" desc="Software assist, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="OTHER_ASSISTS:u=0" desc="Software assist, masks:monitor at user level"> </modifier>
        <modifier name="OTHER_ASSISTS:k=0" desc="Software assist, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="224" name="RESOURCE_STALLS" desc="Cycles Allocation is stalled due to Resource Related reason">
        <modifier name="RESOURCE_STALLS:ANY" desc="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocation is stalled due to Resource Related reason"> </modifier>
        <modifier name="RESOURCE_STALLS:ALL" desc="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocation is stalled due to Resource Related reason"> </modifier>
        <modifier name="RESOURCE_STALLS:RS" desc="Cycles Allocation is stalled due to Resource Related reason, masks:Stall cycles caused by absence of eligible entries in Reservation Station (RS)"> </modifier>
        <modifier name="RESOURCE_STALLS:SB" desc="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocator is stalled due to Store Buffer full (not including draining from synch)"> </modifier>
        <modifier name="RESOURCE_STALLS:ROB" desc="Cycles Allocation is stalled due to Resource Related reason, masks:ROB full stall cycles"> </modifier>
        <modifier name="RESOURCE_STALLS:e=0" desc="Cycles Allocation is stalled due to Resource Related reason, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="RESOURCE_STALLS:i=0" desc="Cycles Allocation is stalled due to Resource Related reason, masks:invert"> </modifier>
        <modifier name="RESOURCE_STALLS:c=0" desc="Cycles Allocation is stalled due to Resource Related reason, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="RESOURCE_STALLS:t=0" desc="Cycles Allocation is stalled due to Resource Related reason, masks:measure any thread"> </modifier>
        <modifier name="RESOURCE_STALLS:intx=0" desc="Cycles Allocation is stalled due to Resource Related reason, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="RESOURCE_STALLS:intxcp=0" desc="Cycles Allocation is stalled due to Resource Related reason, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="RESOURCE_STALLS:u=0" desc="Cycles Allocation is stalled due to Resource Related reason, masks:monitor at user level"> </modifier>
        <modifier name="RESOURCE_STALLS:k=0" desc="Cycles Allocation is stalled due to Resource Related reason, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="225" name="ROB_MISC_EVENTS" desc="ROB miscellaneous events">
        <modifier name="ROB_MISC_EVENTS:LBR_INSERTS" desc="ROB miscellaneous events, masks:Count each time an new Last Branch Record (LBR) is inserted"> </modifier>
        <modifier name="ROB_MISC_EVENTS:e=0" desc="ROB miscellaneous events, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ROB_MISC_EVENTS:i=0" desc="ROB miscellaneous events, masks:invert"> </modifier>
        <modifier name="ROB_MISC_EVENTS:c=0" desc="ROB miscellaneous events, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="ROB_MISC_EVENTS:t=0" desc="ROB miscellaneous events, masks:measure any thread"> </modifier>
        <modifier name="ROB_MISC_EVENTS:intx=0" desc="ROB miscellaneous events, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="ROB_MISC_EVENTS:intxcp=0" desc="ROB miscellaneous events, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="ROB_MISC_EVENTS:u=0" desc="ROB miscellaneous events, masks:monitor at user level"> </modifier>
        <modifier name="ROB_MISC_EVENTS:k=0" desc="ROB miscellaneous events, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="226" name="RS_EVENTS" desc="Reservation Station">
        <modifier name="RS_EVENTS:EMPTY_CYCLES" desc="Reservation Station, masks:Cycles the Reservation Station (RS) is empty for this thread"> </modifier>
        <modifier name="RS_EVENTS:EMPTY_END" desc="Reservation Station, masks:Number of times the reservation station (RS) was empty"> </modifier>
        <modifier name="RS_EVENTS:e=0" desc="Reservation Station, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="RS_EVENTS:i=0" desc="Reservation Station, masks:invert"> </modifier>
        <modifier name="RS_EVENTS:c=0" desc="Reservation Station, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="RS_EVENTS:t=0" desc="Reservation Station, masks:measure any thread"> </modifier>
        <modifier name="RS_EVENTS:intx=0" desc="Reservation Station, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="RS_EVENTS:intxcp=0" desc="Reservation Station, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="RS_EVENTS:u=0" desc="Reservation Station, masks:monitor at user level"> </modifier>
        <modifier name="RS_EVENTS:k=0" desc="Reservation Station, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="227" name="RTM_RETIRED" desc="Restricted Transaction Memory execution (Precise Event)">
        <modifier name="RTM_RETIRED:START" desc="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution started"> </modifier>
        <modifier name="RTM_RETIRED:COMMIT" desc="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution successfully committed"> </modifier>
        <modifier name="RTM_RETIRED:ABORTED" desc="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to any reasons (multiple categories may count as one) (Precise Event)"> </modifier>
        <modifier name="RTM_RETIRED:ABORTED_MEM" desc="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to various memory events"> </modifier>
        <modifier name="RTM_RETIRED:ABORTED_TMR" desc="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to uncommon conditions"> </modifier>
        <modifier name="RTM_RETIRED:ABORTED_UNFRIENDLY" desc="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to RTM-unfriendly instructions"> </modifier>
        <modifier name="RTM_RETIRED:ABORTED_MEMTYPE" desc="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to incompatible memory type"> </modifier>
        <modifier name="RTM_RETIRED:ABORTED_EVENTS" desc="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to none of the other 4 reasons (e.g., interrupt)"> </modifier>
        <modifier name="RTM_RETIRED:e=0" desc="Restricted Transaction Memory execution (Precise Event), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="RTM_RETIRED:i=0" desc="Restricted Transaction Memory execution (Precise Event), masks:invert"> </modifier>
        <modifier name="RTM_RETIRED:c=0" desc="Restricted Transaction Memory execution (Precise Event), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="RTM_RETIRED:t=0" desc="Restricted Transaction Memory execution (Precise Event), masks:measure any thread"> </modifier>
        <modifier name="RTM_RETIRED:intx=0" desc="Restricted Transaction Memory execution (Precise Event), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="RTM_RETIRED:intxcp=0" desc="Restricted Transaction Memory execution (Precise Event), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="RTM_RETIRED:u=0" desc="Restricted Transaction Memory execution (Precise Event), masks:monitor at user level"> </modifier>
        <modifier name="RTM_RETIRED:k=0" desc="Restricted Transaction Memory execution (Precise Event), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="228" name="TLB_FLUSH" desc="TLB flushes">
        <modifier name="TLB_FLUSH:DTLB_THREAD" desc="TLB flushes, masks:Count number of DTLB flushes of thread-specific entries"> </modifier>
        <modifier name="TLB_FLUSH:STLB_ANY" desc="TLB flushes, masks:Count number of any STLB flushes"> </modifier>
    </event>
    <event index="229" name="UOPS_EXECUTED" desc="Uops executed">
        <modifier name="UOPS_EXECUTED:THREAD" desc="Uops executed, masks:Number of uops executed per thread in each cycle"> </modifier>
        <modifier name="UOPS_EXECUTED:THREAD_CYCLES_GE_1" desc="Uops executed, masks:Number of cycles with at least 1 uop is executed per thread"> </modifier>
        <modifier name="UOPS_EXECUTED:THREAD_CYCLES_GE_2" desc="Uops executed, masks:Number of cycles with at least 2 uops are executed per thread"> </modifier>
        <modifier name="UOPS_EXECUTED:THREAD_CYCLES_GE_3" desc="Uops executed, masks:Number of cycles with at least 3 uops are executed per thread"> </modifier>
        <modifier name="UOPS_EXECUTED:THREAD_CYCLES_GE_4" desc="Uops executed, masks:Number of cycles with at least 4 uops are executed per thread"> </modifier>
        <modifier name="UOPS_EXECUTED:CORE" desc="Uops executed, masks:Number of uops executed from any thread in each cycle"> </modifier>
        <modifier name="UOPS_EXECUTED:CORE_CYCLES_GE_1" desc="Uops executed, masks:Number of cycles with at least 1 uop is executed for any thread"> </modifier>
        <modifier name="UOPS_EXECUTED:CORE_CYCLES_GE_2" desc="Uops executed, masks:Number of cycles with at least 2 uops are executed for any thread"> </modifier>
        <modifier name="UOPS_EXECUTED:CORE_CYCLES_GE_3" desc="Uops executed, masks:Number of cycles with at least 3 uops are executed for any thread"> </modifier>
        <modifier name="UOPS_EXECUTED:CORE_CYCLES_GE_4" desc="Uops executed, masks:Number of cycles with at least 4 uops are executed for any thread"> </modifier>
        <modifier name="UOPS_EXECUTED:STALL_CYCLES" desc="Uops executed, masks:Number of cycles with no uops executed by thread"> </modifier>
        <modifier name="UOPS_EXECUTED:CORE_CYCLES_NONE" desc="Uops executed, masks:Number of cycles with no uops executed from any thread"> </modifier>
        <modifier name="UOPS_EXECUTED:X87" desc="Uops executed, masks:Number of x87 uops executed per thread"> </modifier>
        <modifier name="UOPS_EXECUTED:e=0" desc="Uops executed, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="UOPS_EXECUTED:i=0" desc="Uops executed, masks:invert"> </modifier>
        <modifier name="UOPS_EXECUTED:c=0" desc="Uops executed, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="UOPS_EXECUTED:t=0" desc="Uops executed, masks:measure any thread"> </modifier>
        <modifier name="UOPS_EXECUTED:intx=0" desc="Uops executed, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="UOPS_EXECUTED:intxcp=0" desc="Uops executed, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="UOPS_EXECUTED:u=0" desc="Uops executed, masks:monitor at user level"> </modifier>
        <modifier name="UOPS_EXECUTED:k=0" desc="Uops executed, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="230" name="LSD" desc="Loop stream detector">
        <modifier name="LSD:UOPS" desc="Loop stream detector, masks:Number of uops delivered by the Loop Stream Detector (LSD)"> </modifier>
        <modifier name="LSD:CYCLES_4_UOPS" desc="Loop stream detector, masks:Number of cycles the LSD delivered 4 uops which did not come from the decoder"> </modifier>
        <modifier name="LSD:CYCLES_ACTIVE" desc="Loop stream detector, masks:Number of cycles the LSD delivered uops which did not come from the decoder"> </modifier>
        <modifier name="LSD:e=0" desc="Loop stream detector, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="LSD:i=0" desc="Loop stream detector, masks:invert"> </modifier>
        <modifier name="LSD:c=0" desc="Loop stream detector, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="LSD:t=0" desc="Loop stream detector, masks:measure any thread"> </modifier>
        <modifier name="LSD:intx=0" desc="Loop stream detector, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="LSD:intxcp=0" desc="Loop stream detector, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="LSD:u=0" desc="Loop stream detector, masks:monitor at user level"> </modifier>
        <modifier name="LSD:k=0" desc="Loop stream detector, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="231" name="UOPS_DISPATCHED" desc="Uops dispatch to specific ports">
        <modifier name="UOPS_DISPATCHED:PORT_0" desc="Uops dispatch to specific ports, masks:Cycles which a Uop is executed on port 0"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_1" desc="Uops dispatch to specific ports, masks:Cycles which a Uop is executed on port 1"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_2" desc="Uops dispatch to specific ports, masks:Cycles which a Uop is executed on port 2"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_3" desc="Uops dispatch to specific ports, masks:Cycles which a Uop is executed on port 3"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_4" desc="Uops dispatch to specific ports, masks:Cycles which a Uop is executed on port 4"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_5" desc="Uops dispatch to specific ports, masks:Cycles which a Uop is executed on port 5"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_6" desc="Uops dispatch to specific ports, masks:Cycles which a Uop is executed on port 6"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_7" desc="Uops dispatch to specific ports, masks:Cycles which a Uop is executed on port 7"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_0_CORE" desc="Uops dispatch to specific ports, masks:tbd"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_1_CORE" desc="Uops dispatch to specific ports, masks:tbd"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_2_CORE" desc="Uops dispatch to specific ports, masks:tbd"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_3_CORE" desc="Uops dispatch to specific ports, masks:tbd"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_4_CORE" desc="Uops dispatch to specific ports, masks:tbd"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_5_CORE" desc="Uops dispatch to specific ports, masks:tbd"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_6_CORE" desc="Uops dispatch to specific ports, masks:tbd"> </modifier>
        <modifier name="UOPS_DISPATCHED:PORT_7_CORE" desc="Uops dispatch to specific ports, masks:tbd"> </modifier>
    </event>
    <event index="232" name="UOPS_ISSUED" desc="Uops issued">
        <modifier name="UOPS_ISSUED:ANY" desc="Uops issued, masks:Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)"> </modifier>
        <modifier name="UOPS_ISSUED:ALL" desc="Uops issued, masks:Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)"> </modifier>
        <modifier name="UOPS_ISSUED:VECTOR_WIDTH_MISMATCH" desc="Uops issued, masks:Number of blend uops issued by the Resource Allocation table (RAT) to the Reservation Station (RS) in order to preserve upper bits of vector registers"> </modifier>
        <modifier name="UOPS_ISSUED:FLAGS_MERGE" desc="Uops issued, masks:Number of flags-merge uops being allocated. Such uops adds delay"> </modifier>
        <modifier name="UOPS_ISSUED:SLOW_LEA" desc="Uops issued, masks:Number of slow LEA or similar uops allocated. Such uop has 3 sources regardless if result of LEA instruction or not"> </modifier>
        <modifier name="UOPS_ISSUED:SINGLE_MUL" desc="Uops issued, masks:Number of Multiply packed/scalar single precision uops allocated"> </modifier>
        <modifier name="UOPS_ISSUED:STALL_CYCLES" desc="Uops issued, masks:Counts the number of cycles no uops issued by this thread"> </modifier>
        <modifier name="UOPS_ISSUED:CORE_STALL_CYCLES" desc="Uops issued, masks:Counts the number of cycles no uops issued on this core"> </modifier>
        <modifier name="UOPS_ISSUED:e=0" desc="Uops issued, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="UOPS_ISSUED:i=0" desc="Uops issued, masks:invert"> </modifier>
        <modifier name="UOPS_ISSUED:c=0" desc="Uops issued, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="UOPS_ISSUED:t=0" desc="Uops issued, masks:measure any thread"> </modifier>
        <modifier name="UOPS_ISSUED:intx=0" desc="Uops issued, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="UOPS_ISSUED:intxcp=0" desc="Uops issued, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="UOPS_ISSUED:u=0" desc="Uops issued, masks:monitor at user level"> </modifier>
        <modifier name="UOPS_ISSUED:k=0" desc="Uops issued, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="233" name="ARITH" desc="Arithmetic uop">
        <modifier name="ARITH:DIVIDER_ACTIVE" desc="Arithmetic uop, masks:Cycles when divider is busy executing divide or square root operations on integers or floating-points"> </modifier>
        <modifier name="ARITH:FPU_DIV_ACTIVE" desc="Arithmetic uop, masks:Cycles when divider is busy executing divide or square root operations on integers or floating-points"> </modifier>
        <modifier name="ARITH:e=0" desc="Arithmetic uop, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ARITH:i=0" desc="Arithmetic uop, masks:invert"> </modifier>
        <modifier name="ARITH:c=0" desc="Arithmetic uop, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="ARITH:t=0" desc="Arithmetic uop, masks:measure any thread"> </modifier>
        <modifier name="ARITH:intx=0" desc="Arithmetic uop, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="ARITH:intxcp=0" desc="Arithmetic uop, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="ARITH:u=0" desc="Arithmetic uop, masks:monitor at user level"> </modifier>
        <modifier name="ARITH:k=0" desc="Arithmetic uop, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="234" name="UOPS_RETIRED" desc="Uops retired (Precise Event)">
        <modifier name="UOPS_RETIRED:ALL" desc="Uops retired (Precise Event), masks:All uops that actually retired"> </modifier>
        <modifier name="UOPS_RETIRED:ANY" desc="Uops retired (Precise Event), masks:All uops that actually retired"> </modifier>
        <modifier name="UOPS_RETIRED:RETIRE_SLOTS" desc="Uops retired (Precise Event), masks:number of retirement slots used non PEBS"> </modifier>
        <modifier name="UOPS_RETIRED:STALL_CYCLES" desc="Uops retired (Precise Event), masks:Cycles no executable uops retired (Precise Event)"> </modifier>
        <modifier name="UOPS_RETIRED:TOTAL_CYCLES" desc="Uops retired (Precise Event), masks:Number of cycles using always true condition applied to PEBS uops retired event"> </modifier>
        <modifier name="UOPS_RETIRED:CORE_STALL_CYCLES" desc="Uops retired (Precise Event), masks:Cycles no executable uops retired on core (Precise Event)"> </modifier>
        <modifier name="UOPS_RETIRED:STALL_OCCURRENCES" desc="Uops retired (Precise Event), masks:Number of transitions from stalled to unstalled execution (Precise Event)"> </modifier>
        <modifier name="UOPS_RETIRED:e=0" desc="Uops retired (Precise Event), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="UOPS_RETIRED:i=0" desc="Uops retired (Precise Event), masks:invert"> </modifier>
        <modifier name="UOPS_RETIRED:c=0" desc="Uops retired (Precise Event), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="UOPS_RETIRED:t=0" desc="Uops retired (Precise Event), masks:measure any thread"> </modifier>
        <modifier name="UOPS_RETIRED:intx=0" desc="Uops retired (Precise Event), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="UOPS_RETIRED:intxcp=0" desc="Uops retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="UOPS_RETIRED:u=0" desc="Uops retired (Precise Event), masks:monitor at user level"> </modifier>
        <modifier name="UOPS_RETIRED:k=0" desc="Uops retired (Precise Event), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="235" name="TX_MEM" desc="Transactional memory aborts">
        <modifier name="TX_MEM:ABORT_CONFLICT" desc="Transactional memory aborts, masks:Number of times a transactional abort was signaled due to data conflict on a transactionally accessed address"> </modifier>
        <modifier name="TX_MEM:ABORT_CAPACITY" desc="Transactional memory aborts, masks:Number of times a transactional abort was signaled due to data capacity limitation"> </modifier>
        <modifier name="TX_MEM:ABORT_HLE_STORE_TO_ELIDED_LOCK" desc="Transactional memory aborts, masks:Number of times a HLE transactional execution aborted due to a non xrelease prefixed instruction writing to an elided lock in the elision buffer"> </modifier>
        <modifier name="TX_MEM:ABORT_HLE_ELISION_BUFFER_NOT_EMPTY" desc="Transactional memory aborts, masks:Number of times a HLE transactional execution aborted due to NoAllocatedElisionBuffer being non-zero"> </modifier>
        <modifier name="TX_MEM:ABORT_HLE_ELISION_BUFFER_MISMATCH" desc="Transactional memory aborts, masks:Number of times a HLE transaction execution aborted due to xrelease lock not satisfying the address and value requirements in the elision buffer"> </modifier>
        <modifier name="TX_MEM:ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT" desc="Transactional memory aborts, masks:Number of times a HLE transaction execution aborted due to an unsupported read alignment from the elision buffer"> </modifier>
        <modifier name="TX_MEM:ABORT_HLE_ELISION_BUFFER_FULL" desc="Transactional memory aborts, masks:Number of times a HLE clock could not be elided due to ElisionBufferAvailable being zero"> </modifier>
    </event>
    <event index="236" name="TX_EXEC" desc="Transactional execution">
        <modifier name="TX_EXEC:MISC1" desc="Transactional execution, masks:Number of times a class of instructions that may cause a transactional abort was executed. Since this is the count of execution, it may not always cause a transactional abort"> </modifier>
        <modifier name="TX_EXEC:MISC2" desc="Transactional execution, masks:Number of times a class of instructions that may cause a transactional abort was executed inside a transactional region"> </modifier>
        <modifier name="TX_EXEC:MISC3" desc="Transactional execution, masks:Number of times an instruction execution caused the supported nest count to be exceeded"> </modifier>
        <modifier name="TX_EXEC:MISC4" desc="Transactional execution, masks:Number of times an instruction a xbegin instruction was executed inside HLE transactional region"> </modifier>
        <modifier name="TX_EXEC:MISC5" desc="Transactional execution, masks:Number of times an instruction with HLE xacquire prefix was executed inside a RTM transactional region"> </modifier>
    </event>
    <event index="237" name="OFFCORE_REQUESTS_OUTSTANDING" desc="Outstanding offcore requests">
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD_CYCLES" desc="Outstanding offcore requests, masks:Cycles with cacheable data read transactions in the superQ (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD_CYCLES" desc="Outstanding offcore requests, masks:Cycles with demand code reads transactions in the superQ (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:CYCLES_WITH_DEMAND_CODE_RD" desc="Outstanding offcore requests, masks:Cycles with demand code reads transactions in the superQ (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_CYCLES" desc="Outstanding offcore requests, masks:Cycles with demand data read transactions in the superQ (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:CYCLES_WITH_DEMAND_DATA_RD" desc="Outstanding offcore requests, masks:Cycles with demand data read transactions in the superQ (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD" desc="Outstanding offcore requests, masks:Cacheable data read transactions in the superQ every cycle (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD" desc="Outstanding offcore requests, masks:Code read transactions in the superQ every cycle (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD" desc="Outstanding offcore requests, masks:Demand data read transactions in the superQ every cycle (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_GE_6" desc="Outstanding offcore requests, masks:Cycles with at lesat 6 offcore outstanding demand data read requests in the uncore queue"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO" desc="Outstanding offcore requests, masks:Outstanding RFO (store) transactions in the superQ every cycle (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO_CYCLES" desc="Outstanding offcore requests, masks:Cycles with outstanding RFO (store) transactions in the superQ (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:CYCLES_WITH_DEMAND_RFO" desc="Outstanding offcore requests, masks:Cycles with outstanding RFO (store) transactions in the superQ (use with HT off only)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:L3_MISS_DEMAND_DATA_RD" desc="Outstanding offcore requests, masks:Number of offcore outstanding demand data read requests missing the L3 cache every cycle"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:L3_MISS_DEMAND_DATA_RD_GE_6" desc="Outstanding offcore requests, masks:Number of cycles in which at least 6 demand data read requests missing the L3"> </modifier>
        <modifier name="OFFCORE_REQUESTS_OUTSTANDING:CYCLES_WITH_L3_MISS_DEMAND_DATA_RD" desc="Outstanding offcore requests, masks:Cycles with at least 1 Demand Data Read requests who miss L3 cache in the superQ"> </modifier>
    </event>
    <event index="238" name="ILD_STALL" desc="Instruction Length Decoder stalls">
        <modifier name="ILD_STALL:LCP" desc="Instruction Length Decoder stalls, masks:Stall caused by changing prefix length of the instruction"> </modifier>
        <modifier name="ILD_STALL:e=0" desc="Instruction Length Decoder stalls, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="ILD_STALL:i=0" desc="Instruction Length Decoder stalls, masks:invert"> </modifier>
        <modifier name="ILD_STALL:c=0" desc="Instruction Length Decoder stalls, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="ILD_STALL:t=0" desc="Instruction Length Decoder stalls, masks:measure any thread"> </modifier>
        <modifier name="ILD_STALL:intx=0" desc="Instruction Length Decoder stalls, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="ILD_STALL:intxcp=0" desc="Instruction Length Decoder stalls, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="ILD_STALL:u=0" desc="Instruction Length Decoder stalls, masks:monitor at user level"> </modifier>
        <modifier name="ILD_STALL:k=0" desc="Instruction Length Decoder stalls, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="239" name="DSB2MITE_SWITCHES" desc="Number of DSB to MITE switches">
        <modifier name="DSB2MITE_SWITCHES:PENALTY_CYCLES" desc="Number of DSB to MITE switches, masks:Number of DSB to MITE switch true penalty cycles"> </modifier>
        <modifier name="DSB2MITE_SWITCHES:e=0" desc="Number of DSB to MITE switches, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="DSB2MITE_SWITCHES:i=0" desc="Number of DSB to MITE switches, masks:invert"> </modifier>
        <modifier name="DSB2MITE_SWITCHES:c=0" desc="Number of DSB to MITE switches, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="DSB2MITE_SWITCHES:t=0" desc="Number of DSB to MITE switches, masks:measure any thread"> </modifier>
        <modifier name="DSB2MITE_SWITCHES:intx=0" desc="Number of DSB to MITE switches, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="DSB2MITE_SWITCHES:intxcp=0" desc="Number of DSB to MITE switches, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="DSB2MITE_SWITCHES:u=0" desc="Number of DSB to MITE switches, masks:monitor at user level"> </modifier>
        <modifier name="DSB2MITE_SWITCHES:k=0" desc="Number of DSB to MITE switches, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="240" name="EPT" desc="Extended page table">
        <modifier name="EPT:WALK_DURATION" desc="Extended page table, masks:Cycles for an extended page table walk of any type"> </modifier>
        <modifier name="EPT:WALK_PENDING" desc="Extended page table, masks:Cycles for an extended page table walk of any type"> </modifier>
        <modifier name="EPT:e=0" desc="Extended page table, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="EPT:i=0" desc="Extended page table, masks:invert"> </modifier>
        <modifier name="EPT:c=0" desc="Extended page table, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="EPT:t=0" desc="Extended page table, masks:measure any thread"> </modifier>
        <modifier name="EPT:intx=0" desc="Extended page table, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="EPT:intxcp=0" desc="Extended page table, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="EPT:u=0" desc="Extended page table, masks:monitor at user level"> </modifier>
        <modifier name="EPT:k=0" desc="Extended page table, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="241" name="FP_ARITH" desc="Floating-point">
        <modifier name="FP_ARITH:SCALAR_DOUBLE" desc="Floating-point, masks:Number of scalar double precision floating-point arithmetic instructions (multiply by 1 to get flops)"> </modifier>
        <modifier name="FP_ARITH:SCALAR_SINGLE" desc="Floating-point, masks:Number of scalar single precision floating-point arithmetic instructions (multiply by 1 to get flops)"> </modifier>
        <modifier name="FP_ARITH:128B_PACKED_DOUBLE" desc="Floating-point, masks:Number of scalar 128-bit packed double precision floating-point arithmetic instructions (multiply by 2 to get flops)"> </modifier>
        <modifier name="FP_ARITH:128B_PACKED_SINGLE" desc="Floating-point, masks:Number of scalar 128-bit packed single precision floating-point arithmetic instructions (multiply by 4 to get flops)"> </modifier>
        <modifier name="FP_ARITH:256B_PACKED_DOUBLE" desc="Floating-point, masks:Number of scalar 256-bit packed double precision floating-point arithmetic instructions (multiply by 4 to get flops)"> </modifier>
        <modifier name="FP_ARITH:256B_PACKED_SINGLE" desc="Floating-point, masks:Number of scalar 256-bit packed single precision floating-point arithmetic instructions (multiply by 8 to get flops)"> </modifier>
        <modifier name="FP_ARITH:512B_PACKED_DOUBLE" desc="Floating-point, masks:Number of scalar 512-bit packed double precision floating-point arithmetic instructions (multiply by 8 to get flops)"> </modifier>
        <modifier name="FP_ARITH:512B_PACKED_SINGLE" desc="Floating-point, masks:Number of scalar 512-bit packed single precision floating-point arithmetic instructions (multiply by 16 to get flops)"> </modifier>
    </event>
    <event index="242" name="EXE_ACTIVITY" desc="Execution activity">
        <modifier name="EXE_ACTIVITY" desc="Execution activity"> </modifier>
        <modifier name="EXE_ACTIVITY:2_PORTS_UTIL" desc="Execution activity, masks:Cycles with 2 uops executing across all ports and Reservation Station is not empty"> </modifier>
        <modifier name="EXE_ACTIVITY:3_PORTS_UTIL" desc="Execution activity, masks:Cycles with 3 uops executing across all ports and Reservation Station is not empty"> </modifier>
        <modifier name="EXE_ACTIVITY:4_PORTS_UTIL" desc="Execution activity, masks:Cycles with 4 uops executing across all ports and Reservation Station is not empty"> </modifier>
        <modifier name="EXE_ACTIVITY:BOUND_ON_STORES" desc="Execution activity, masks:Cycles where the store buffer is full and no outstanding load"> </modifier>
        <modifier name="EXE_ACTIVITY:EXE_BOUND_0_PORTS" desc="Execution activity, masks:Cycles where no uop is executed and the Reservation Station was not empty"> </modifier>
    </event>
    <event index="243" name="FRONTEND_RETIRED" desc="Precise Front-End activity">
        <modifier name="FRONTEND_RETIRED:DSB_MISS" desc="Precise Front-End activity, masks:Retired instructions experiencing decode stream buffer (DSB) miss"> </modifier>
        <modifier name="FRONTEND_RETIRED:ITLB_MISS" desc="Precise Front-End activity, masks:Retired instructions experiencing ITLB true miss"> </modifier>
        <modifier name="FRONTEND_RETIRED:L1I_MISS" desc="Precise Front-End activity, masks:Retired instructions experiencing L1I cache true miss"> </modifier>
        <modifier name="FRONTEND_RETIRED:L2_MISS" desc="Precise Front-End activity, masks:Retired instructions experiencing instruction L2 cache true miss"> </modifier>
        <modifier name="FRONTEND_RETIRED:STLB_MISS" desc="Precise Front-End activity, masks:Retired instructions experiencing STLB (2nd level TLB) true miss"> </modifier>
        <modifier name="FRONTEND_RETIRED:IDQ_4_BUBBLES" desc="Precise Front-End activity, masks:Retired instructions after an interval where the front-end did not deliver any uops (4 bubbles) for a period determined by the fe_thres modifier and which was not interrupted by a back-end stall"> </modifier>
        <modifier name="FRONTEND_RETIRED:IDQ_3_BUBBLES" desc="Precise Front-End activity, masks:Counts instructions retired after an interval where the front-end did not deliver more than 1 uop (3 bubbles) for a period determined by the fe_thres modifier and which was not interrupted by a back-end stall"> </modifier>
        <modifier name="FRONTEND_RETIRED:IDQ_2_BUBBLES" desc="Precise Front-End activity, masks:Counts instructions retired after an interval where the front-end did not deliver more than 2 uops (2 bubbles) for a period determined by the fe_thres modifier and which was not interrupted by a back-end stall"> </modifier>
        <modifier name="FRONTEND_RETIRED:IDQ_1_BUBBLE" desc="Precise Front-End activity, masks:Counts instructions retired after an interval where the front-end did not deliver more than 3 uops (1 bubble) for a period determined by the fe_thres modifier and which was not interrupted by a back-end stall"> </modifier>
    </event>
    <event index="244" name="HW_INTERRUPTS" desc="Number of hardware interrupts received by the processor">
        <modifier name="HW_INTERRUPTS:RECEIVED" desc="Number of hardware interrupts received by the processor, masks:Number of hardware interrupts received by the processor"> </modifier>
        <modifier name="HW_INTERRUPTS:e=0" desc="Number of hardware interrupts received by the processor, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="HW_INTERRUPTS:i=0" desc="Number of hardware interrupts received by the processor, masks:invert"> </modifier>
        <modifier name="HW_INTERRUPTS:c=0" desc="Number of hardware interrupts received by the processor, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="HW_INTERRUPTS:t=0" desc="Number of hardware interrupts received by the processor, masks:measure any thread"> </modifier>
        <modifier name="HW_INTERRUPTS:intx=0" desc="Number of hardware interrupts received by the processor, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="HW_INTERRUPTS:intxcp=0" desc="Number of hardware interrupts received by the processor, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="HW_INTERRUPTS:u=0" desc="Number of hardware interrupts received by the processor, masks:monitor at user level"> </modifier>
        <modifier name="HW_INTERRUPTS:k=0" desc="Number of hardware interrupts received by the processor, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="245" name="SQ_MISC" desc="SuperQueue miscellaneous">
        <modifier name="SQ_MISC:SPLIT_LOCK" desc="SuperQueue miscellaneous, masks:Number of split locks in the super queue (SQ)"> </modifier>
        <modifier name="SQ_MISC:e=0" desc="SuperQueue miscellaneous, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="SQ_MISC:i=0" desc="SuperQueue miscellaneous, masks:invert"> </modifier>
        <modifier name="SQ_MISC:c=0" desc="SuperQueue miscellaneous, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="SQ_MISC:t=0" desc="SuperQueue miscellaneous, masks:measure any thread"> </modifier>
        <modifier name="SQ_MISC:intx=0" desc="SuperQueue miscellaneous, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="SQ_MISC:intxcp=0" desc="SuperQueue miscellaneous, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="SQ_MISC:u=0" desc="SuperQueue miscellaneous, masks:monitor at user level"> </modifier>
        <modifier name="SQ_MISC:k=0" desc="SuperQueue miscellaneous, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="246" name="MEM_LOAD_MISC_RETIRED" desc="Load retired miscellaneous">
        <modifier name="MEM_LOAD_MISC_RETIRED:UC" desc="Load retired miscellaneous, masks:Number of uncached load retired"> </modifier>
        <modifier name="MEM_LOAD_MISC_RETIRED:e=0" desc="Load retired miscellaneous, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="MEM_LOAD_MISC_RETIRED:i=0" desc="Load retired miscellaneous, masks:invert"> </modifier>
        <modifier name="MEM_LOAD_MISC_RETIRED:c=0" desc="Load retired miscellaneous, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="MEM_LOAD_MISC_RETIRED:t=0" desc="Load retired miscellaneous, masks:measure any thread"> </modifier>
        <modifier name="MEM_LOAD_MISC_RETIRED:intx=0" desc="Load retired miscellaneous, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="MEM_LOAD_MISC_RETIRED:intxcp=0" desc="Load retired miscellaneous, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="MEM_LOAD_MISC_RETIRED:u=0" desc="Load retired miscellaneous, masks:monitor at user level"> </modifier>
        <modifier name="MEM_LOAD_MISC_RETIRED:k=0" desc="Load retired miscellaneous, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="247" name="OFFCORE_REQUESTS_BUFFER" desc="Offcore requests buffer">
        <modifier name="OFFCORE_REQUESTS_BUFFER:SQ_FULL" desc="Offcore requests buffer, masks:Number of requests for which the offcore buffer (SQ) is full"> </modifier>
        <modifier name="OFFCORE_REQUESTS_BUFFER:e=0" desc="Offcore requests buffer, masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="OFFCORE_REQUESTS_BUFFER:i=0" desc="Offcore requests buffer, masks:invert"> </modifier>
        <modifier name="OFFCORE_REQUESTS_BUFFER:c=0" desc="Offcore requests buffer, masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="OFFCORE_REQUESTS_BUFFER:t=0" desc="Offcore requests buffer, masks:measure any thread"> </modifier>
        <modifier name="OFFCORE_REQUESTS_BUFFER:intx=0" desc="Offcore requests buffer, masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="OFFCORE_REQUESTS_BUFFER:intxcp=0" desc="Offcore requests buffer, masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="OFFCORE_REQUESTS_BUFFER:u=0" desc="Offcore requests buffer, masks:monitor at user level"> </modifier>
        <modifier name="OFFCORE_REQUESTS_BUFFER:k=0" desc="Offcore requests buffer, masks:monitor at kernel level"> </modifier>
    </event>
    <event index="248" name="OFFCORE_RESPONSE_0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop)">
        <modifier name="OFFCORE_RESPONSE_0:DMND_DATA_RD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:DMND_RFO" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:DMND_IFETCH" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:WB" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of writebacks (modified to exclusive) transactions"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:PF_DATA_RD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of data cacheline reads generated by L2 prefetchers"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:PF_RFO" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetchers"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:PF_IFETCH" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:PF_L3_DATA_RD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests for loads that end up in L3"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:PF_L3_RFO" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetcher that end up in L3"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:PF_L3_IFETCH" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:BUS_LOCKS" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number bus lock and split lock requests"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:STRM_ST" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of streaming store requests"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:OTHER" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:ANY_IFETCH" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_IFETCH | DMND_IFETCH | PF_L3_IFETCH"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:ANY_REQUEST" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of all request umasks"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:ANY_DATA" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_DATA | PF_DATA_RD | PF_LLC_DATA_RD"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:ANY_RFO" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_RFO | PF_RFO | PF_LLC_RFO"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:ANY_RESPONSE" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Response: count any response type"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:NO_SUPP" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts number of times supplier information is not available"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L3_HITM" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in M-state (initial lookup)"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L3_HITE" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in E-state"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L3_HITS" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in S-state"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L3_HITF" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in F-state"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L3_HITMESF" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in any state (M, E, S, F)"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L3_HIT" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Alias for L3_HITMESF"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L4_HIT_LOCAL_L4" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: L4 local hit"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L3_MISS_LOCAL" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:L3_MISS" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:SPL_HIT" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts L3 supplier hit"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:SNP_NONE" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times no snoop-related information is available"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:SNP_NOT_NEEDED" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts the number of times no snoop was needed to satisfy the request"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:SNP_MISS" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it missed all snooped caches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:SNP_NO_FWD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:SNP_FWD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:HITM" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:SNP_HITM" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:NON_DRAM" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:SNP_ANY" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: any snoop reason"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:e=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:i=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:invert"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:c=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:t=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:measure any thread"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:intx=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:intxcp=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:u=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at user level"> </modifier>
        <modifier name="OFFCORE_RESPONSE_0:k=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at kernel level"> </modifier>
    </event>
    <event index="249" name="OFFCORE_RESPONSE_1" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop)">
        <modifier name="OFFCORE_RESPONSE_1:DMND_DATA_RD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:DMND_RFO" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:DMND_IFETCH" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:WB" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of writebacks (modified to exclusive) transactions"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:PF_DATA_RD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of data cacheline reads generated by L2 prefetchers"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:PF_RFO" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetchers"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:PF_IFETCH" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:PF_L3_DATA_RD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests for loads that end up in L3"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:PF_L3_RFO" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetcher that end up in L3"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:PF_L3_IFETCH" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:BUS_LOCKS" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number bus lock and split lock requests"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:STRM_ST" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of streaming store requests"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:OTHER" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:ANY_IFETCH" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_IFETCH | DMND_IFETCH | PF_L3_IFETCH"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:ANY_REQUEST" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of all request umasks"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:ANY_DATA" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_DATA | PF_DATA_RD | PF_LLC_DATA_RD"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:ANY_RFO" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_RFO | PF_RFO | PF_LLC_RFO"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:ANY_RESPONSE" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Response: count any response type"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:NO_SUPP" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts number of times supplier information is not available"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L3_HITM" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in M-state (initial lookup)"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L3_HITE" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in E-state"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L3_HITS" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in S-state"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L3_HITF" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in F-state"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L3_HITMESF" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in any state (M, E, S, F)"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L3_HIT" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Alias for L3_HITMESF"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L4_HIT_LOCAL_L4" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: L4 local hit"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L3_MISS_LOCAL" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:L3_MISS" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:SPL_HIT" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts L3 supplier hit"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:SNP_NONE" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times no snoop-related information is available"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:SNP_NOT_NEEDED" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts the number of times no snoop was needed to satisfy the request"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:SNP_MISS" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it missed all snooped caches"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:SNP_NO_FWD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:SNP_FWD" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:HITM" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:SNP_HITM" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:NON_DRAM" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:SNP_ANY" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: any snoop reason"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:e=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:edge level (may require counter-mask &gt;= 1)"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:i=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:invert"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:c=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:counter-mask in range [0-255]"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:t=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:measure any thread"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:intx=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor only inside transactional memory region"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:intxcp=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:do not count occurrences inside aborted transactional memory region"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:u=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at user level"> </modifier>
        <modifier name="OFFCORE_RESPONSE_1:k=0" desc="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at kernel level"> </modifier>
    </event>
  </eventset>
  <eventset type="PRESET">
    <event index="0" name="PAPI_L1_DCM" desc="Level 1 data cache misses">
    </event>
    <event index="1" name="PAPI_L1_ICM" desc="Level 1 instruction cache misses">
    </event>
    <event index="2" name="PAPI_L2_DCM" desc="Level 2 data cache misses">
    </event>
    <event index="3" name="PAPI_L2_ICM" desc="Level 2 instruction cache misses">
    </event>
    <event index="6" name="PAPI_L1_TCM" desc="Level 1 cache misses">
    </event>
    <event index="7" name="PAPI_L2_TCM" desc="Level 2 cache misses">
    </event>
    <event index="8" name="PAPI_L3_TCM" desc="Level 3 cache misses">
    </event>
    <event index="9" name="PAPI_CA_SNP" desc="Requests for a snoop">
    </event>
    <event index="10" name="PAPI_CA_SHR" desc="Requests for exclusive access to shared cache line">
    </event>
    <event index="11" name="PAPI_CA_CLN" desc="Requests for exclusive access to clean cache line">
    </event>
    <event index="13" name="PAPI_CA_ITV" desc="Requests for cache line intervention">
    </event>
    <event index="14" name="PAPI_L3_LDM" desc="Level 3 load misses">
    </event>
    <event index="20" name="PAPI_TLB_DM" desc="Data translation lookaside buffer misses">
    </event>
    <event index="21" name="PAPI_TLB_IM" desc="Instruction translation lookaside buffer misses">
    </event>
    <event index="23" name="PAPI_L1_LDM" desc="Level 1 load misses">
    </event>
    <event index="24" name="PAPI_L1_STM" desc="Level 1 store misses">
    </event>
    <event index="25" name="PAPI_L2_LDM" desc="Level 2 load misses">
    </event>
    <event index="26" name="PAPI_L2_STM" desc="Level 2 store misses">
    </event>
    <event index="28" name="PAPI_PRF_DM" desc="Data prefetch cache misses">
    </event>
    <event index="36" name="PAPI_MEM_WCY" desc="Cycles Stalled Waiting for memory writes">
    </event>
    <event index="37" name="PAPI_STL_ICY" desc="Cycles with no instruction issue">
    </event>
    <event index="38" name="PAPI_FUL_ICY" desc="Cycles with maximum instruction issue">
    </event>
    <event index="39" name="PAPI_STL_CCY" desc="Cycles with no instructions completed">
    </event>
    <event index="40" name="PAPI_FUL_CCY" desc="Cycles with maximum instructions completed">
    </event>
    <event index="42" name="PAPI_BR_UCN" desc="Unconditional branch instructions">
    </event>
    <event index="43" name="PAPI_BR_CN" desc="Conditional branch instructions">
    </event>
    <event index="44" name="PAPI_BR_TKN" desc="Conditional branch instructions taken">
    </event>
    <event index="45" name="PAPI_BR_NTK" desc="Conditional branch instructions not taken">
    </event>
    <event index="46" name="PAPI_BR_MSP" desc="Conditional branch instructions mispredicted">
    </event>
    <event index="47" name="PAPI_BR_PRC" desc="Conditional branch instructions correctly predicted">
    </event>
    <event index="50" name="PAPI_TOT_INS" desc="Instructions completed">
    </event>
    <event index="53" name="PAPI_LD_INS" desc="Load instructions">
    </event>
    <event index="54" name="PAPI_SR_INS" desc="Store instructions">
    </event>
    <event index="55" name="PAPI_BR_INS" desc="Branch instructions">
    </event>
    <event index="57" name="PAPI_RES_STL" desc="Cycles stalled on any resource">
    </event>
    <event index="59" name="PAPI_TOT_CYC" desc="Total cycles">
    </event>
    <event index="60" name="PAPI_LST_INS" desc="Load/store instructions completed">
    </event>
    <event index="65" name="PAPI_L2_DCA" desc="Level 2 data cache accesses">
    </event>
    <event index="66" name="PAPI_L3_DCA" desc="Level 3 data cache accesses">
    </event>
    <event index="68" name="PAPI_L2_DCR" desc="Level 2 data cache reads">
    </event>
    <event index="69" name="PAPI_L3_DCR" desc="Level 3 data cache reads">
    </event>
    <event index="71" name="PAPI_L2_DCW" desc="Level 2 data cache writes">
    </event>
    <event index="72" name="PAPI_L3_DCW" desc="Level 3 data cache writes">
    </event>
    <event index="74" name="PAPI_L2_ICH" desc="Level 2 instruction cache hits">
    </event>
    <event index="77" name="PAPI_L2_ICA" desc="Level 2 instruction cache accesses">
    </event>
    <event index="78" name="PAPI_L3_ICA" desc="Level 3 instruction cache accesses">
    </event>
    <event index="80" name="PAPI_L2_ICR" desc="Level 2 instruction cache reads">
    </event>
    <event index="81" name="PAPI_L3_ICR" desc="Level 3 instruction cache reads">
    </event>
    <event index="89" name="PAPI_L2_TCA" desc="Level 2 total cache accesses">
    </event>
    <event index="90" name="PAPI_L3_TCA" desc="Level 3 total cache accesses">
    </event>
    <event index="92" name="PAPI_L2_TCR" desc="Level 2 total cache reads">
    </event>
    <event index="93" name="PAPI_L3_TCR" desc="Level 3 total cache reads">
    </event>
    <event index="95" name="PAPI_L2_TCW" desc="Level 2 total cache writes">
    </event>
    <event index="96" name="PAPI_L3_TCW" desc="Level 3 total cache writes">
    </event>
    <event index="103" name="PAPI_SP_OPS" desc="Floating point operations; optimized to count scaled single precision vector operations">
    </event>
    <event index="104" name="PAPI_DP_OPS" desc="Floating point operations; optimized to count scaled double precision vector operations">
    </event>
    <event index="105" name="PAPI_VEC_SP" desc="Single precision vector/SIMD instructions">
    </event>
    <event index="106" name="PAPI_VEC_DP" desc="Double precision vector/SIMD instructions">
    </event>
    <event index="107" name="PAPI_REF_CYC" desc="Reference clock cycles">
    </event>
  </eventset>
</component>
<component index="1" type="Unknown" id="perf_event_uncore">
  <eventset type="NATIVE">
  </eventset>
  <eventset type="PRESET">
  </eventset>
</component>
</eventinfo>
